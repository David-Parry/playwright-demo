[
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.networkpolicies.watch",
          "resource": "networking.k8s.io/v1/networkpolicies"
        }
      ],
      "methodName": "io.k8s.networking.v1.networkpolicies.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/networkpolicies",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0093cd3d-5f8e-4b27-b5d1-937dddc1352a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261142Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0093cd3d-5f8e-4b27-b5d1-937dddc1352a",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.283871065Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingressclasses.watch",
          "resource": "networking.k8s.io/v1/ingressclasses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingressclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingressclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cab88015-c085-46d8-b060-a3cd31167bef",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261171Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cab88015-c085-46d8-b060-a3cd31167bef",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.441635751Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.warden.v1.audits.watch",
          "resource": "warden.gke.io/v1/audits"
        }
      ],
      "methodName": "io.gke.warden.v1.audits.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "warden.gke.io/v1/audits",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "25fb275c-c567-48bc-8471-10860e5a7fbf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261197Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "25fb275c-c567-48bc-8471-10860e5a7fbf",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.820019103Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingresses.watch",
          "resource": "networking.k8s.io/v1/ingresses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingresses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingresses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d205fe8f-21fc-4543-a711-4de428e26cf1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261262Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d205fe8f-21fc-4543-a711-4de428e26cf1",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.669967398Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clusterexternalsecrets.watch",
          "resource": "external-secrets.io/v1beta1/clusterexternalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clusterexternalsecrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clusterexternalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1505d4cf-3ab3-4c83-8e24-73f423ee7975",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261289Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1505d4cf-3ab3-4c83-8e24-73f423ee7975",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.813095360Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.thanosrulers.watch",
          "resource": "monitoring.coreos.com/v1/thanosrulers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.thanosrulers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/thanosrulers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "38f31f16-7bed-4831-bcfb-b59c66d86255",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261307Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "38f31f16-7bed-4831-bcfb-b59c66d86255",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.444634843Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.podtemplates.watch",
          "resource": "core/v1/podtemplates"
        }
      ],
      "methodName": "io.k8s.core.v1.podtemplates.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/podtemplates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fca361a6-23e7-4120-9011-72b33f64ad96",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261336Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fca361a6-23e7-4120-9011-72b33f64ad96",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.917368525Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.acraccesstokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/acraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.acraccesstokens.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/acraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b086e774-1129-4b0a-a954-1fe6d36a70a8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261395Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b086e774-1129-4b0a-a954-1fe6d36a70a8",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.947968556Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.secretstores.watch",
          "resource": "external-secrets.io/v1beta1/secretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.secretstores.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/secretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6cca1a45-d915-411d-8ec1-3b8bc0913633",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.261417Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6cca1a45-d915-411d-8ec1-3b8bc0913633",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.957677032Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9e34589d-9273-4688-b26c-32c7e90cfed2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.262181Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9e34589d-9273-4688-b26c-32c7e90cfed2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.957677032Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:34.262797524Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "filter": "(timestamp>\"2024-08-21T16:39:19.388853703Z\" OR (timestamp=\"2024-08-21T16:39:19.388853703Z\" AND insertId>\"p02m1ff14wugz\"))\n(timestamp<\"2024-08-21T16:39:23.584622Z\")",
        "orderBy": "timestamp asc",
        "pageToken": "EAA46YG587jf8K9BSooGIjciJwolZDMwNTk1NDQtZDQwNS00OGZjLWJjMTEtYWY2MDE0ZWI0MDVmACoMCLqwmLYGELDUv8YDSs4FCqIFSp8FANAvIAYyWVohcJ6MpCX0QizXD-FfGn5dY5SB4UkJedLXKrKyfW6RHm1gqIqGiIrh5pVI32MXeFyJZyFYdL1_vv88-6S-zAjMuiFZvm2Xb1G-IXVzCGeYXCQJvk_3FtSrrh78n5owNrkGK1Sbeg-6WTH03krww2Gm-OqYMx7qW0cWwcCuWJ-y-Ep5TIuc6PAqBjTOWPTUO85XdGDiK5RhzFzK8G0XhU9KNngju9iqI0zmhX9XAcRNHZGq99ad7n_jgOOVMLiTd4evXcqjnRjpH4OBjXB8vryRe9JsWX_7lUEvu5s_R0rgYueqvNJ57hTqjmxP27qBSrze2rmXB8dQfgRuAg0rxWcXbcoDrgf_WF2hWEu22Jmdoh3YVYS0ijmoHv-K-nEzgZuE1Bh53AQoB7UiTry7uaVjjCJkWx6zVNc2Nt_JuPfSl_rfKkh3aFUaZOvMDZE3uoKv_ctueRgj8k3lOHVlq_9L9j8Ki5OSO-gjk3jeYaPaZFAtZif6DZSc4X8luAjdcBcSgklNtmwASJvp3o7vBh16KXnjglhV4Cj1EwEBSblu8mv8k1pywXV_yRm1KayBPL04eUQ_fjNIB0oEzyqcGIWxKvbGhovbOsqJgQmhIisJuUl6KV6w512rrjgmVJiwzW8UReO-QahhpQNdoFh40eXIeDrExc7xRxOenBYhFiGW4zpjJ72bnTCB9I4CZ9UW6WWL0NFpSs9HscaC7y131F0vvHXjGGoJZeXAQbMPmo_888KCfHbpWvTE3k1sgaP-qa-Gy4bFs5GuJPkAAUh0SeX9B5vZEWjVLKTRpabVHaN0AsSHO48JK8GLwp2qi8QR8BS3xQ-lRgR32qadyxoEOA2fUuwNRBXNcNkQ9kJqaDZueeJLn_VVgpYSHBoMCLewmLYGEMfftbkBIgwIu7CYtgYQr7_ilgJQ2Neh4Nn0uoSwAVIHCLbzx-X7AWD59f-UsaD8i0ZqGwoMCMWwmLYGELvJupoCEgYQvrf3kAIYkAMgBw",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ]
      }
    },
    "insertId": "e5zdsgd2p3o",
    "resource": {
      "type": "logging_log",
      "labels": {
        "name": "",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.262611504Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:35.117005632Z"
  },
  {
    "insertId": "kb5wb0ftuvcud",
    "jsonPayload": {
      "remoteIp": "140.82.115.246",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14979",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.246",
      "serverIp": "10.164.16.11",
      "latency": "0.056060s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-github-servic-300-2ce4c0b8",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw"
      }
    },
    "timestamp": "2024-08-21T16:39:34.266434Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/86bf3dc16e85129bcbd45214e0d6d3d6",
    "receiveTimestamp": "2024-08-21T16:39:35.341712630Z",
    "spanId": "7ac59755f961df6e"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiregistration.v1.apiservices.watch",
          "resource": "apiregistration.k8s.io/v1/apiservices"
        }
      ],
      "methodName": "io.k8s.apiregistration.v1.apiservices.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiregistration.k8s.io/v1/apiservices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e80bf693-d5ff-42c1-80d1-8f4f849ee8f2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.267590Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e80bf693-d5ff-42c1-80d1-8f4f849ee8f2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.020995544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8341ea31-1148-47af-92a9-6afdde011dd8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.270907Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8341ea31-1148-47af-92a9-6afdde011dd8",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.366333788Z"
  },
  {
    "insertId": "j9bo6ztvhhm9lfee",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "module": "app",
        "extra": {
          "request_id": "13b59cef-b1bb-4250-9ee4-a0e0a6b7ba01",
          "url": "https://api.codium.ai/platform/v2/teams/wytCJ5LEEIshD4yfLqYd/users",
          "on_prem_log": true,
          "source_host": "161.132.115.57",
          "status_code": 200,
          "method": "GET"
        },
        "time": {
          "timestamp": 1724258374.270825,
          "repr": "2024-08-21 16:39:34.270825+00:00"
        },
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "function": "dispatch",
        "exception": null,
        "name": "app",
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "elapsed": {
          "repr": "1 day, 8:48:21.306766",
          "seconds": 118101.306766
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:34.271094378Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "de68dae7-aab8-4323-9e87-361d24378b95",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.275273Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "de68dae7-aab8-4323-9e87-361d24378b95",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.905410554Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.rolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/rolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.rolebindings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/rolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "99e93d88-3b02-49da-8a5e-f34b5a1dc728",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.276413Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "99e93d88-3b02-49da-8a5e-f34b5a1dc728",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.020995544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "98e68399-823d-406b-8195-9cb19c2b2bfd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.281859Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "98e68399-823d-406b-8195-9cb19c2b2bfd",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.009278428Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.scrapeconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/scrapeconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.scrapeconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/scrapeconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b34cc6c2-9af8-4f94-9a6e-fc3c06913c9f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.282806Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b34cc6c2-9af8-4f94-9a6e-fc3c06913c9f",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.135501253Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3667a547-728f-4400-baf8-821b141b2cb6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.284204Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3667a547-728f-4400-baf8-821b141b2cb6",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.710918636Z"
  },
  {
    "insertId": "k4na58cnbdjkltzb",
    "jsonPayload": {
      "text": "Received a GitHub webhook\n",
      "record": {
        "extra": {},
        "process": {
          "name": "MainProcess",
          "id": 234
        },
        "message": "Received a GitHub webhook",
        "line": 256,
        "time": {
          "timestamp": 1724258374.284125,
          "repr": "2024-08-21 16:39:34.284125+00:00"
        },
        "function": "handle_github_webhooks",
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "exception": null,
        "name": "pr_agent.servers.github_app",
        "module": "github_app",
        "elapsed": {
          "repr": "1:27:43.899370",
          "seconds": 5263.89937
        },
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        },
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "namespace_name": "pr-agent",
        "container_name": "main",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.284392267Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "k8s-pod/app": "pr-agent-free-github",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.certificates.v1.certificatesigningrequests.watch",
          "resource": "certificates.k8s.io/v1/certificatesigningrequests"
        }
      ],
      "methodName": "io.k8s.certificates.v1.certificatesigningrequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "certificates.k8s.io/v1/certificatesigningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7e3645b1-f299-437e-858f-22e14acbe0dc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.286320Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7e3645b1-f299-437e-858f-22e14acbe0dc",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.165356799Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.storageclasses.watch",
          "resource": "storage.k8s.io/v1/storageclasses"
        }
      ],
      "methodName": "io.k8s.storage.v1.storageclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/storageclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8c754f33-f828-4210-a1e5-5e5dec721782",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.286414Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8c754f33-f828-4210-a1e5-5e5dec721782",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.603937988Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.operatorconfigs.watch",
          "resource": "monitoring.googleapis.com/v1/operatorconfigs"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.operatorconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/operatorconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "38d99aa9-48e6-4b69-ac53-85560e9a2509",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.288508Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "38d99aa9-48e6-4b69-ac53-85560e9a2509",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.515206639Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.google.cloud.v1.backendconfigs.watch",
          "resource": "cloud.google.com/v1/backendconfigs"
        }
      ],
      "methodName": "com.google.cloud.v1.backendconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cloud.google.com/v1/backendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "166c66a4-c590-4b8a-bd78-929eac8adbc0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.288563Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "166c66a4-c590-4b8a-bd78-929eac8adbc0",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.015516732Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.watch",
          "resource": "apps/v1/deployments"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/deployments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0bfd07e0-b685-4be7-bf0c-e4521257b11e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.289437Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0bfd07e0-b685-4be7-bf0c-e4521257b11e",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.061373178Z"
  },
  {
    "insertId": "pce40wbkqzi7z7pr",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "level": {
          "icon": "🐞",
          "no": 10,
          "name": "DEBUG"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "extra": {
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[",
          "completion": "0]] }}</h3>\n    <h3>Modelos</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}",
          "model": "gpt-3.5-turbo-instruct",
          "user": {
            "baseUrl": null,
            "exp": 1724261737,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_end_date": 1725287318000,
            "optout": false,
            "allowed": true,
            "organization_id": null,
            "auth_time": 1724161599,
            "email_verified": true,
            "name": "Luiz F",
            "codiumate": null,
            "email": "lf0448504@gmail.com",
            "tier_level": 10,
            "iat": 1724258137,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "aud": "codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              }
            },
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22"
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "openai_request_id": "cmpl-9yiepTv4UGbFKmj9o7cLUJnzNTA7i",
          "request_id": "c1ba4a06-1ccb-4720-87e0-48bc0dd826cb",
          "openai_response": {
            "id": "cmpl-9yiepTv4UGbFKmj9o7cLUJnzNTA7i",
            "created": 1724258371,
            "usage": {
              "completion_tokens": 193,
              "total_tokens": 3016,
              "prompt_tokens": 2823
            },
            "object": "text_completion",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='0]] }}</h3>\\n    <h3>Modelos</h3>\\n    <table class=\"table table-bordered\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid]))\\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\\n                        <tr>\\n                            <td>{{ $deviceGroup[\\'modelname\\'] }}</td>\\n                            <td>{{ $modelId }}</td>\\n                            <td>{{ $deviceGroup[\\'quantity\\'] }}</td>\\n                        </tr>\\n                    @endforeach\\n                @endif\\n            </tbody>\\n        </table>\\n    }\\n    @endforeach\\n{{--    @php\\n     var_dump($responsavel);   \\n    @endphp\\n--}}', logprobs=None)"
            ],
            "model": "gpt-3.5-turbo-instruct"
          },
          "url_path": "/v2/code/completion"
        },
        "name": "ai.litellm.litellm_infer_engine",
        "module": "litellm_infer_engine",
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:08:24.086700",
          "seconds": 119304.0867
        },
        "message": "OpenAI Response",
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "function": "generate",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "line": 131,
        "time": {
          "timestamp": 1724258374.290945,
          "repr": "2024-08-21 16:39:34.290945+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:34.291501482Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:35.394028763Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3eecd793-22f3-4ab8-87cb-a0d241b240b3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.292042Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3eecd793-22f3-4ab8-87cb-a0d241b240b3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.005210578Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.roles.watch",
          "resource": "rbac.authorization.k8s.io/v1/roles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.roles.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/roles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "93813ba3-643a-4c21-9217-1cb8ccc94543",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.300043Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "93813ba3-643a-4c21-9217-1cb8ccc94543",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.460648149Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.serviceattachments.watch",
          "resource": "networking.gke.io/v1/serviceattachments"
        }
      ],
      "methodName": "io.gke.networking.v1.serviceattachments.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/serviceattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0928d1b0-b2a5-418d-92d7-2670dfaf5ec0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.303267Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0928d1b0-b2a5-418d-92d7-2670dfaf5ec0",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.949141859Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1alpha1.pushsecrets.watch",
          "resource": "external-secrets.io/v1alpha1/pushsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1alpha1.pushsecrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1alpha1/pushsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7db4c30-7b09-4710-a3bb-d3d50aa71851",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.306209Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7db4c30-7b09-4710-a3bb-d3d50aa71851",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.820008580Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.watch",
          "resource": "core/v1/nodes"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/nodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a4180b38-b43c-4c8e-950d-83b5ed6bf488",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.308263Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a4180b38-b43c-4c8e-950d-83b5ed6bf488",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.374958217Z"
  },
  {
    "insertId": "6wpx7vjz5iz107z7",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        },
        "message": "Request handled",
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "elapsed": {
          "repr": "1:27:43.925147",
          "seconds": 5263.925147
        },
        "function": "dispatch",
        "time": {
          "repr": "2024-08-21 16:39:34.309902+00:00",
          "timestamp": 1724258374.309902
        },
        "line": 804,
        "process": {
          "name": "MainProcess",
          "id": 234
        },
        "exception": null,
        "name": "pr_agent.servers.github_app",
        "extra": {
          "url": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
          "source_host": "140.82.115.246",
          "status_code": 200,
          "method": "POST",
          "on_prem_log": true
        },
        "module": "github_app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "cluster_name": "production-cluster",
        "container_name": "main",
        "location": "us-central1",
        "namespace_name": "pr-agent"
      }
    },
    "timestamp": "2024-08-21T16:39:34.310144492Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "k8s-pod/app": "pr-agent-free-github"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "insertId": "byo04bmonng6nw3s",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "message": "Prompts and results v2",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "time": {
          "timestamp": 1724258374.313054,
          "repr": "2024-08-21 16:39:34.313054+00:00"
        },
        "extra": {
          "user": {
            "auth_time": 1724161599,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "allowed": true,
            "aud": "codium-dev-360812",
            "iat": 1724258137,
            "organization_id": null,
            "exp": 1724261737,
            "codiumate": null,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email_verified": true,
            "email": "lf0448504@gmail.com",
            "tier_level": 10,
            "baseUrl": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "tier_end_date": 1725287318000,
            "optout": false,
            "name": "Luiz F"
          },
          "results": {
            "user_input": {
              "user_data": "user_id=None installation_id='d9512a22-64ab-4187-87de-bc5e6405f7d3' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
              "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[",
              "repo_context": [],
              "configuration": {},
              "max_remote_context": 5,
              "reference_snippet_messages": [
                {
                  "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty",
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:"
                },
                {
                  "type": "Clipboard",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "file_name": "resources\\views\\dashboards\\list.blade.php"
                },
                {
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "type": "Clipboard"
                },
                {
                  "file_name": "Codiumate chat",
                  "type": "Clipboard",
                  "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo"
                },
                {
                  "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                  "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                  "type": "File"
                }
              ],
              "user_context": [],
              "task": "",
              "extra_instructions": "",
              "is_multiline": true,
              "is_file_diff": false,
              "max_repo_context": 5,
              "remote_context": [],
              "relative_file_path": "resources/views/dashboards/list.blade.php",
              "language": "blade",
              "context_mode": "pre_pr",
              "context": [],
              "file_diff_content": ""
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"0]] }}</h3>\\n    <h3>Modelos</h3>\\n    <table class=\\\"table table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid]))\\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\\n                        <tr>\\n                            <td>{{ $deviceGroup['modelname'] }}</td>\\n                            <td>{{ $modelId }}</td>\\n                            <td>{{ $deviceGroup['quantity'] }}</td>\\n                        </tr>\\n                    @endforeach\\n                @endif\\n            </tbody>\\n        </table>\\n    }\\n    @endforeach\\n{{--    @php\\n     var_dump($responsavel);   \\n    @endphp\\n--}}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[",
                "04_end_time": "2024-08-21 16:39:34.312863",
                "00_system": null,
                "02_completion": "0]] }}</h3>\n    <h3>Modelos</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}",
                "03_start_time": "2024-08-21 16:39:31.573945"
              }
            }
          },
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "url_path": "/v2/code/completion",
          "request_id": "c1ba4a06-1ccb-4720-87e0-48bc0dd826cb"
        },
        "line": 1112,
        "name": "copilot_proxy.utils.inference_utils",
        "function": "process",
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "module": "inference_utils",
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:08:24.108809",
          "seconds": 119304.108809
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8"
      }
    },
    "timestamp": "2024-08-21T16:39:34.313715947Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:35.394028763Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.challenges.watch",
          "resource": "acme.cert-manager.io/v1/challenges"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.challenges.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/challenges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a8e27c0b-d68d-4925-92a8-86c742b9af58",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.322467Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a8e27c0b-d68d-4925-92a8-86c742b9af58",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.694609284Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.watch",
          "resource": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses"
        }
      ],
      "methodName": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7999c90-a4ff-4fa9-b472-2213ea190515",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.322482Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7999c90-a4ff-4fa9-b472-2213ea190515",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.692137065Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.fakes.watch",
          "resource": "generators.external-secrets.io/v1alpha1/fakes"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.fakes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/fakes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f46db124-fd01-4c14-b0a5-3b434ebccb3a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.322559Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f46db124-fd01-4c14-b0a5-3b434ebccb3a",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.424768677Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.limitranges.watch",
          "resource": "core/v1/limitranges"
        }
      ],
      "methodName": "io.k8s.core.v1.limitranges.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/limitranges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9a480944-91ad-4661-bd4a-45baf417f7d5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.322565Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9a480944-91ad-4661-bd4a-45baf417f7d5",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.735273901Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
          "resource": "internal.autoscaling.gke.io/v1/capacityrequests"
        }
      ],
      "methodName": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "internal.autoscaling.gke.io/v1/capacityrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5f15ae10-b31b-4e51-9664-ebc9174ae387",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.322693Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5f15ae10-b31b-4e51-9664-ebc9174ae387",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.366333788Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:34.323780376Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "pageToken": "EAA46YG587jf8K9BSooGIjciJwolNTNlY2ZlYzktOTFiMi00YWYyLWI1NjQtNGQyMzVhMjI1ZmY0ACoMCLuwmLYGEKiLx9sBSs4FCqIFSp8FANAvIAayX__drJs4AtLif8ihtsQ-CAbw88PGalIzLxxjK9O8rsw78nZw08cAYbjl_sROB_oE3U3Krfhxbq9nDMNNHjg5jFdcWegKFAltwlN4Xc5Ld9K3FZzlDVzLEjlK4_52A-W8vLjvkwbiKfrGes2wNtjgckN_kw14C0Y1KgYdQuQkhhBEYvc3KRl2crLnVpJutH9D8Z1KOsIm1cjTOZPJmwH8rqtV3owf9AXjOOX3SfP30d2mfBHXe8wc0w4Sp_bJpeGXm1dxTNUcqROzKHS2O4XbLFaJQfifPqEHxemabVilXjU8aCJja7MidWNZT71piZklp5--8D91MoQekJent981SQ82Xvi0yXqwJof4cy-72FrPFQGTlkWB1lp4vFu_uhWBcsM_zaRyEK_EMDKZYzUBwOUnJxWGuYviFy1aMNcuf8B5pP6O6dn0sUUR8VKRInyqWIQgAKH8gwYBC4Eaw1rn1mpnP7SYsnADqBjq-VW02a1AsPgMICQ0mwjgazF9TYJ3TU7XKqO6lw7mfHRsKbcxPOrt2Vy0wsc_Dtvop4XQr_tP3feD7a2jh7L7Sm2URyB-EMntNO5dm27MPtpgwpgOHLzOuMONtHXWsmAwsBrAqLUuwCpfENrV62gDgHL6MTB538LeJM-5NF25HUcxziAx0xHFfkzMEvNnt0WQ9zUYgMwmYXmXE2KJerQqNZm7mb6axIavwnFTwtcF1V9Qmnunc8pjvIkUI5AtVwsqRGtOrLflm0dlGvBGFIuYmsL4XKQebX3GsHYfcIsZXRhnaI3M0t2D71usSImnlMuReTYkmYLAg0JJwMdln5WPulr-uNTXfmtGaqMgh-FP9-HaqDs7qx0qszVefhKXWsi88-mOKTODOj_jBTYdiIESHBoMCLewmLYGEMfftbkBIgwIu7CYtgYQr7_ilgJQ2Neh4Nn0uoSwAVIHCLbzx-X7AWD59f-UsaD8i0ZqGwoMCMWwmLYGELvJupoCEgYQtcbvpwIYwgMgCA",
        "filter": "(timestamp>\"2024-08-21T16:39:19.388853703Z\" OR (timestamp=\"2024-08-21T16:39:19.388853703Z\" AND insertId>\"p02m1ff14wugz\"))\n(timestamp<\"2024-08-21T16:39:23.584622Z\")",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ],
        "orderBy": "timestamp asc",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest"
      }
    },
    "insertId": "1waqie2ch76",
    "resource": {
      "type": "logging_log",
      "labels": {
        "project_id": "codium-production",
        "name": ""
      }
    },
    "timestamp": "2024-08-21T16:39:34.323616796Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:35.234418567Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.orders.watch",
          "resource": "acme.cert-manager.io/v1/orders"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.orders.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/orders",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0fc461d9-3199-4539-b36d-dc37b28163e2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.324637Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0fc461d9-3199-4539-b36d-dc37b28163e2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.374958217Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.nodemanagement.v1alpha1.updateinfos.watch",
          "resource": "nodemanagement.gke.io/v1alpha1/updateinfos"
        }
      ],
      "methodName": "io.gke.nodemanagement.v1alpha1.updateinfos.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "nodemanagement.gke.io/v1alpha1/updateinfos",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9ef814d8-12a1-4a7b-97bf-5e599fe290ee",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.324990Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9ef814d8-12a1-4a7b-97bf-5e599fe290ee",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.618145020Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedworkloads.watch",
          "resource": "auto.gke.io/v1/allowlistedworkloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedworkloads.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedworkloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "88f5a07f-fb41-4dba-9734-70258b4ca277",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.325752Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "88f5a07f-fb41-4dba-9734-70258b4ca277",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.020995544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.podmonitors.watch",
          "resource": "monitoring.coreos.com/v1/podmonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.podmonitors.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/podmonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a75e2761-d9cc-4e49-962f-9030f277daf5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.325774Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a75e2761-d9cc-4e49-962f-9030f277daf5",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.377437658Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.prometheusagents.watch",
          "resource": "monitoring.coreos.com/v1alpha1/prometheusagents"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.prometheusagents.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/prometheusagents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d2bb1207-7be4-4344-81d0-b9229e84dc93",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.325786Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d2bb1207-7be4-4344-81d0-b9229e84dc93",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.414676975Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a38ceed8-45b5-426f-80e3-38eb1b5159d9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.325963Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a38ceed8-45b5-426f-80e3-38eb1b5159d9",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.669967398Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedv2workloads.watch",
          "resource": "auto.gke.io/v1/allowlistedv2workloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedv2workloads.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedv2workloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b1acab2-641e-4a75-b0ab-41ee6762eafd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.325981Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b1acab2-641e-4a75-b0ab-41ee6762eafd",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.761678487Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.gcraccesstokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/gcraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.gcraccesstokens.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/gcraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f4606fa7-6112-4b96-9bbb-be3c42726f79",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.326967Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f4606fa7-6112-4b96-9bbb-be3c42726f79",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.245035160Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterrolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterrolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1a04fdfc-9d4c-4b39-b0d2-1e7cad57f420",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.328369Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1a04fdfc-9d4c-4b39-b0d2-1e7cad57f420",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.001102790Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fd604673-86dd-48de-bd0c-b300d8417bcf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.329288Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fd604673-86dd-48de-bd0c-b300d8417bcf",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.015516732Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e41359dd-80d4-4795-a166-32246034bf6e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.333578Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e41359dd-80d4-4795-a166-32246034bf6e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.245035160Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e419c3ce-360c-462b-a98b-5d3a48ea26fd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.335596Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e419c3ce-360c-462b-a98b-5d3a48ea26fd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.603937988Z"
  },
  {
    "insertId": "ib8ftg3m39dfwrhd",
    "jsonPayload": {
      "record": {
        "exception": null,
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "extra": {
          "on_prem_log": true,
          "source_host": "177.69.243.97",
          "url": "https://api.codium.ai/v2/code/completion",
          "status_code": 200,
          "request_id": "c1ba4a06-1ccb-4720-87e0-48bc0dd826cb",
          "method": "POST"
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "line": 37,
        "module": "app",
        "time": {
          "timestamp": 1724258374.341767,
          "repr": "2024-08-21 16:39:34.341767+00:00"
        },
        "elapsed": {
          "repr": "1 day, 9:08:24.137522",
          "seconds": 119304.137522
        },
        "function": "dispatch",
        "message": "Request handled",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.341975806Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:35.394028763Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.networks.watch",
          "resource": "networking.gke.io/v1/networks"
        }
      ],
      "methodName": "io.gke.networking.v1.networks.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/networks",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8dab27ec-adbe-4654-a7ca-4a19388736d1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.345881Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8dab27ec-adbe-4654-a7ca-4a19388736d1",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.507734791Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.hub.v1.memberships.watch",
          "resource": "hub.gke.io/v1/memberships"
        }
      ],
      "methodName": "io.gke.hub.v1.memberships.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "hub.gke.io/v1/memberships",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0dba39c5-dca0-4da0-8542-a9b73a53aba3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.346986Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0dba39c5-dca0-4da0-8542-a9b73a53aba3",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.761678487Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.podmonitorings.watch",
          "resource": "monitoring.googleapis.com/v1/podmonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.podmonitorings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/podmonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ea034c92-3cc6-4c72-a9b5-202171abac07",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.347148Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ea034c92-3cc6-4c72-a9b5-202171abac07",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.013725252Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.alertmanagers.watch",
          "resource": "monitoring.coreos.com/v1/alertmanagers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.alertmanagers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/alertmanagers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "274f2c98-a2ac-4f40-b461-f1299903d70e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.347204Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "274f2c98-a2ac-4f40-b461-f1299903d70e",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.574532208Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterroles.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterroles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterroles.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterroles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eed34070-c0ba-4b3f-8df1-fe993b2a45d1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.354908Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eed34070-c0ba-4b3f-8df1-fe993b2a45d1",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.833512809Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.daemonsets.watch",
          "resource": "apps/v1/daemonsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.daemonsets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/daemonsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "74cb9383-5c88-4588-89bf-13a151c0eca4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.356175Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "74cb9383-5c88-4588-89bf-13a151c0eca4",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.436053951Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.watch",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0f35c4f3-59dc-46c4-b468-967c90d9334f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.371342Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0f35c4f3-59dc-46c4-b468-967c90d9334f",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.078955149Z"
  },
  {
    "insertId": "6vi09klzo3m4jtmk",
    "jsonPayload": {
      "record": {
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 8:53:41.394723",
          "seconds": 118421.394723
        },
        "process": {
          "name": "MainProcess",
          "id": 18
        },
        "message": "Incoming request /v1/health/live",
        "time": {
          "timestamp": 1724258374.379197,
          "repr": "2024-08-21 16:39:34.379197+00:00"
        },
        "function": "live",
        "module": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "name": "MainThread",
          "id": 136300718099328
        },
        "line": 164
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-69d7c8ff44-x9fqh",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production-jb",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.379464868Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "69d7c8ff44"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.279909228Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.globalrules.watch",
          "resource": "monitoring.googleapis.com/v1/globalrules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.globalrules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/globalrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "03699ed4-82a4-4dd7-be40-f727ff4de070",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.385458Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "03699ed4-82a4-4dd7-be40-f727ff4de070",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.530977224Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.probes.watch",
          "resource": "monitoring.coreos.com/v1/probes"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.probes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/probes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c176d17b-92df-42de-913b-37d46e72f7b0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.385578Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c176d17b-92df-42de-913b-37d46e72f7b0",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.930724415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshots.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshots"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshots.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshots",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b3d89d9e-0e52-456a-b462-d7dcfbfb3802",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.386280Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b3d89d9e-0e52-456a-b462-d7dcfbfb3802",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.099633586Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clustersecretstores.watch",
          "resource": "external-secrets.io/v1beta1/clustersecretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clustersecretstores.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clustersecretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "40b3a6aa-d7b1-4634-b91c-e17ace20c036",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.386420Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "40b3a6aa-d7b1-4634-b91c-e17ace20c036",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.820019103Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.rules.watch",
          "resource": "monitoring.googleapis.com/v1/rules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.rules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/rules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "28598d0b-6b89-4fce-91d3-59a18243c9af",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.388550Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "28598d0b-6b89-4fce-91d3-59a18243c9af",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.957677032Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.x-k8s.autoscaling.v1beta1.provisioningrequests.watch",
          "resource": "autoscaling.x-k8s.io/v1beta1/provisioningrequests"
        }
      ],
      "methodName": "io.x-k8s.autoscaling.v1beta1.provisioningrequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling.x-k8s.io/v1beta1/provisioningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "aac315ef-f117-4919-aff0-a83e6129e631",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.388643Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "aac315ef-f117-4919-aff0-a83e6129e631",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.718930955Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusterpodmonitorings.watch",
          "resource": "monitoring.googleapis.com/v1/clusterpodmonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusterpodmonitorings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusterpodmonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eb8e42b8-9598-4553-8907-4e39d8adb2d2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.389714Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eb8e42b8-9598-4553-8907-4e39d8adb2d2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.218217793Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusternodemonitorings.watch",
          "resource": "monitoring.googleapis.com/v1/clusternodemonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusternodemonitorings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusternodemonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bf544360-dfab-49ba-b997-a03bf7f89aee",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.390100Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bf544360-dfab-49ba-b997-a03bf7f89aee",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.428035851Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificaterequests.watch",
          "resource": "cert-manager.io/v1/certificaterequests"
        }
      ],
      "methodName": "io.cert-manager.v1.certificaterequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificaterequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7dce7e91-b040-434c-9568-02de9a24c40c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.393073Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7dce7e91-b040-434c-9568-02de9a24c40c",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.525226605Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotclasses"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "75336a29-a0fe-4220-9599-9c3e20165ee0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.393176Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "75336a29-a0fe-4220-9599-9c3e20165ee0",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.712862180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.issuers.watch",
          "resource": "cert-manager.io/v1/issuers"
        }
      ],
      "methodName": "io.cert-manager.v1.issuers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/issuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "981c7e42-17c4-4c65-9cef-98d3609439f7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.393242Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "981c7e42-17c4-4c65-9cef-98d3609439f7",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.004231898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.gkenetworkparamsets.watch",
          "resource": "networking.gke.io/v1/gkenetworkparamsets"
        }
      ],
      "methodName": "io.gke.networking.v1.gkenetworkparamsets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/gkenetworkparamsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5632a4fa-52e5-4b67-8407-5142b499c8fb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.393387Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5632a4fa-52e5-4b67-8407-5142b499c8fb",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.525226605Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.node.v1.runtimeclasses.watch",
          "resource": "node.k8s.io/v1/runtimeclasses"
        }
      ],
      "methodName": "io.k8s.node.v1.runtimeclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "node.k8s.io/v1/runtimeclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c60de8b8-789b-4d0b-8825-f962cf293190",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.393424Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c60de8b8-789b-4d0b-8825-f962cf293190",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.322059244Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.watch",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9aa34637-12e5-4f42-96cb-3d69e4ce748e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.395225Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9aa34637-12e5-4f42-96cb-3d69e4ce748e",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.553984772Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.servicenetworkendpointgroups.watch",
          "resource": "networking.gke.io/v1beta1/servicenetworkendpointgroups"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.servicenetworkendpointgroups.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/servicenetworkendpointgroups",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "679d9e90-41a7-43ab-ad15-1da298c68636",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.397482Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "679d9e90-41a7-43ab-ad15-1da298c68636",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.897856141Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheuses.watch",
          "resource": "monitoring.coreos.com/v1/prometheuses"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheuses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8f79dc60-5934-4b6b-835e-2583ec76057b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.397757Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8f79dc60-5934-4b6b-835e-2583ec76057b",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.092054004Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9ed3a25f-34c6-4aa4-8e45-babf0e44c8bf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.399517Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9ed3a25f-34c6-4aa4-8e45-babf0e44c8bf",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.952786898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csidrivers.watch",
          "resource": "storage.k8s.io/v1/csidrivers"
        }
      ],
      "methodName": "io.k8s.storage.v1.csidrivers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csidrivers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ae32ff20-2043-460c-a90d-f1941b34857b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.399686Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ae32ff20-2043-460c-a90d-f1941b34857b",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.947144061Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusterrules.watch",
          "resource": "monitoring.googleapis.com/v1/clusterrules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusterrules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusterrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4df2d47f-c1df-4d10-9eff-549ab7550f32",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.402035Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4df2d47f-c1df-4d10-9eff-549ab7550f32",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.702763377Z"
  },
  {
    "insertId": "3jvglz5z46ftkgds",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "thread": {
          "id": 136300718099328,
          "name": "MainThread"
        },
        "name": "app",
        "process": {
          "id": 18,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118421.417436,
          "repr": "1 day, 8:53:41.417436"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "exception": null,
        "line": 37,
        "function": "dispatch",
        "extra": {
          "method": "GET",
          "url": "http://10.164.10.9/v1/health/live",
          "source_host": "35.191.206.114",
          "on_prem_log": true,
          "status_code": 200,
          "request_id": "N/A"
        },
        "time": {
          "repr": "2024-08-21 16:39:34.401910+00:00",
          "timestamp": 1724258374.40191
        },
        "module": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-69d7c8ff44-x9fqh",
        "container_name": "proxy",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production-jb"
      }
    },
    "timestamp": "2024-08-21T16:39:34.402158652Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.279909228Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.managedcertificates.watch",
          "resource": "networking.gke.io/v1/managedcertificates"
        }
      ],
      "methodName": "io.gke.networking.v1.managedcertificates.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/managedcertificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5d00b0c7-8ce1-4c7a-9c42-301886aae0f2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.403178Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5d00b0c7-8ce1-4c7a-9c42-301886aae0f2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.532973443Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72d36c68-7555-4037-982f-c2d7404892af",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.403956Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72d36c68-7555-4037-982f-c2d7404892af",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.902394931Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotcontents"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotcontents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2a3f7371-ca3f-44be-8aee-da1abbdc098a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.404278Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2a3f7371-ca3f-44be-8aee-da1abbdc098a",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.773343121Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ee355427-6dd4-4583-abd5-8561b51a9e2e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.406512Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ee355427-6dd4-4583-abd5-8561b51a9e2e",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.839357376Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.frontendconfigs.watch",
          "resource": "networking.gke.io/v1beta1/frontendconfigs"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.frontendconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/frontendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "061e07e1-b166-4681-b90b-b7416d2e2ada",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.407594Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "061e07e1-b166-4681-b90b-b7416d2e2ada",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.776681868Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "04871f6f-54d1-4e4b-bd86-18c343e05b61",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.408773Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "04871f6f-54d1-4e4b-bd86-18c343e05b61",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.776681868Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.serviceaccounts.watch",
          "resource": "core/v1/serviceaccounts"
        }
      ],
      "methodName": "io.k8s.core.v1.serviceaccounts.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/serviceaccounts",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "89d1321b-a7f8-45ca-aa49-c45e9e440013",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.408853Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "89d1321b-a7f8-45ca-aa49-c45e9e440013",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.323713011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1.prioritylevelconfigurations.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1.prioritylevelconfigurations.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "58981434-f204-4046-a63b-4cd8dce8d274",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.409910Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "58981434-f204-4046-a63b-4cd8dce8d274",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.436408394Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.scheduling.v1.priorityclasses.watch",
          "resource": "scheduling.k8s.io/v1/priorityclasses"
        }
      ],
      "methodName": "io.k8s.scheduling.v1.priorityclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "scheduling.k8s.io/v1/priorityclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b236cbc7-79a6-4679-a93c-4dda5e44d2c1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.409916Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b236cbc7-79a6-4679-a93c-4dda5e44d2c1",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913227981Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.servicemonitors.watch",
          "resource": "monitoring.coreos.com/v1/servicemonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.servicemonitors.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/servicemonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "51457952-c28c-4f6c-8c20-8b6c20ec8c1d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.412265Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "51457952-c28c-4f6c-8c20-8b6c20ec8c1d",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.419378237Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1.flowschemas.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1/flowschemas"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1.flowschemas.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1/flowschemas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "43775475-fa0c-432e-b459-c9fccbda1635",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.416746Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "43775475-fa0c-432e-b459-c9fccbda1635",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.650312847Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f9808592-4b22-41d5-b08d-5b778d723bfa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.424898Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f9808592-4b22-41d5-b08d-5b778d723bfa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.711846518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b43387d4-cd0a-4728-bbbc-7a784fb09e10",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.442860Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b43387d4-cd0a-4728-bbbc-7a784fb09e10",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.199677282Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheusrules.watch",
          "resource": "monitoring.coreos.com/v1/prometheusrules"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheusrules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheusrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dcf25d93-ce1b-479b-af24-dfb29a7f8f99",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.449761Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dcf25d93-ce1b-479b-af24-dfb29a7f8f99",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.776681868Z"
  },
  {
    "insertId": "uph9ybzb6yt7hf8o",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "function": "live",
        "module": "app",
        "elapsed": {
          "repr": "1 day, 8:59:56.682822",
          "seconds": 118796.682822
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "time": {
          "repr": "2024-08-21 16:39:34.473240+00:00",
          "timestamp": 1724258374.47324
        },
        "line": 164,
        "message": "Incoming request /v1/health/live",
        "name": "app",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "extra": {
          "on_prem_log": true
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.473513133Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.460604438Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.cronjobs.watch",
          "resource": "batch/v1/cronjobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.cronjobs.watch",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/cronjobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ca55a72c-10b7-41ac-a5ec-9d8e559e1f75",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.481122Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-uas-collection-reader\" of ClusterRole \"system:gke-uas-collection-reader\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ca55a72c-10b7-41ac-a5ec-9d8e559e1f75",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.359989594Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.cronjobs.watch",
          "resource": "batch/v1/cronjobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.cronjobs.watch",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/cronjobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d797f0ec-8a6d-402f-9284-d73be973c71b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.483052Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-uas-collection-reader\" of ClusterRole \"system:gke-uas-collection-reader\" to User \"system:vpa-recommender\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d797f0ec-8a6d-402f-9284-d73be973c71b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.149136606Z"
  },
  {
    "insertId": "7i7q9m4owbvnr7i1",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 8:59:56.712361",
          "seconds": 118796.712361
        },
        "time": {
          "repr": "2024-08-21 16:39:34.502779+00:00",
          "timestamp": 1724258374.502779
        },
        "module": "app",
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "exception": null,
        "extra": {
          "source_host": "10.164.10.1",
          "on_prem_log": true,
          "status_code": 200,
          "method": "GET",
          "request_id": "N/A",
          "url": "http://10.164.10.5:5432/v1/health/live"
        },
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "function": "dispatch",
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "message": "Request handled",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.503049565Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.460604438Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b7cc5b89-8ecc-4166-9204-43c587d6038e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.503977Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b7cc5b89-8ecc-4166-9204-43c587d6038e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.986029634Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2f50acd6-eb4e-4798-84b3-8e1fb4c4579c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.512546Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2f50acd6-eb4e-4798-84b3-8e1fb4c4579c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.113240151Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d1ba03a0-4cf8-4ea2-8fd7-1b9598d37053",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.516167Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d1ba03a0-4cf8-4ea2-8fd7-1b9598d37053",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.500391535Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b94fcb8d-8973-4ead-88b4-3bc5e9d0443a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.517937Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b94fcb8d-8973-4ead-88b4-3bc5e9d0443a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.019858889Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/configmaps"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/configmaps",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0bad121a-1795-4ae0-8865-6ff80c308e4f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.518401Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0bad121a-1795-4ae0-8865-6ff80c308e4f",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.318001473Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a12c5dfd-5274-4976-a29e-949bbaa72870",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.521747Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a12c5dfd-5274-4976-a29e-949bbaa72870",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.711798690Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.clusterissuers.watch",
          "resource": "cert-manager.io/v1/clusterissuers"
        }
      ],
      "methodName": "io.cert-manager.v1.clusterissuers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/clusterissuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1b926f1a-f2f3-4a87-9326-7bb7c7cd2c67",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.523473Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1b926f1a-f2f3-4a87-9326-7bb7c7cd2c67",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209817616Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.scheduling.v1.priorityclasses.watch",
          "resource": "scheduling.k8s.io/v1/priorityclasses"
        }
      ],
      "methodName": "io.k8s.scheduling.v1.priorityclasses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "scheduling.k8s.io/v1/priorityclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b4d0676-ff60-491e-9ee0-1a8b1d069219",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.524443Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b4d0676-ff60-491e-9ee0-1a8b1d069219",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.022106545Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.issuers.watch",
          "resource": "cert-manager.io/v1/issuers"
        }
      ],
      "methodName": "io.cert-manager.v1.issuers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/issuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "73cafa6c-8b02-443c-b136-260fa4711ca9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.530076Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "73cafa6c-8b02-443c-b136-260fa4711ca9",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.303207596Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d0dc45e6-caa3-4340-832c-730389790b4b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.537444Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d0dc45e6-caa3-4340-832c-730389790b4b",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.811934968Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.watch",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9fc7a607-8448-4429-9e3a-576649671692",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.540616Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9fc7a607-8448-4429-9e3a-576649671692",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209817616Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.thanosrulers.watch",
          "resource": "monitoring.coreos.com/v1/thanosrulers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.thanosrulers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/thanosrulers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "519d9b63-5408-4978-9cd8-b2dbf0e23068",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.550701Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "519d9b63-5408-4978-9cd8-b2dbf0e23068",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.803629166Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8e8d4c44-d436-4dfe-b5f0-293c02bfa452",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.551142Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8e8d4c44-d436-4dfe-b5f0-293c02bfa452",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.107906687Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.applicationsets.watch",
          "resource": "argoproj.io/v1alpha1/applicationsets"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.applicationsets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/applicationsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0b6a365b-b80b-402e-bb1d-6c31c086f241",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.557188Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0b6a365b-b80b-402e-bb1d-6c31c086f241",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209817616Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.managedcertificates.watch",
          "resource": "networking.gke.io/v1/managedcertificates"
        }
      ],
      "methodName": "io.gke.networking.v1.managedcertificates.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/managedcertificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c568afc2-cf76-4069-93c4-30ff8a3f9b7b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.561383Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c568afc2-cf76-4069-93c4-30ff8a3f9b7b",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.520622713Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
          "resource": "internal.autoscaling.gke.io/v1/capacityrequests"
        }
      ],
      "methodName": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "internal.autoscaling.gke.io/v1/capacityrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b7696998-4465-4e7a-a4db-c981b3e63ce4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.561394Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b7696998-4465-4e7a-a4db-c981b3e63ce4",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.107022474Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheusrules.watch",
          "resource": "monitoring.coreos.com/v1/prometheusrules"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheusrules.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheusrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e528070c-5208-45cd-80ca-e872a696f929",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.568747Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e528070c-5208-45cd-80ca-e872a696f929",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4fa7aeae-fc1e-4d00-9ac1-462c60c78c91",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.571625Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4fa7aeae-fc1e-4d00-9ac1-462c60c78c91",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.908099425Z"
  },
  {
    "insertId": "kw29dgw7guexod3p",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "filestore-node-9vgrz",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "namespace_name": "kube-system",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.572635476Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:39.243847761Z"
  },
  {
    "insertId": "1hmixf6tufs6vfbx",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "filestore-node-9vgrz",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "gcp-filestore-driver",
        "namespace_name": "kube-system"
      }
    },
    "timestamp": "2024-08-21T16:39:34.572676955Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:39.243847761Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.protect.vulnerabilities.v1.extractionresults.watch",
          "resource": "vulnerabilities.protect.gke.io/v1/extractionresults"
        }
      ],
      "methodName": "io.gke.protect.vulnerabilities.v1.extractionresults.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "vulnerabilities.protect.gke.io/v1/extractionresults",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3065aafd-040f-4a7d-a1ba-09fdd7b9683f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.577944Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3065aafd-040f-4a7d-a1ba-09fdd7b9683f",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.408975016Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9c099c12-ac2c-4447-8b9a-c6cbdfb29f17",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.592809Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9c099c12-ac2c-4447-8b9a-c6cbdfb29f17",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.717176372Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/configmaps"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/configmaps",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "91b03891-3932-4c6b-8ce4-797f00f2f519",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.595935Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "91b03891-3932-4c6b-8ce4-797f00f2f519",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.814725662Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiregistration.v1.apiservices.watch",
          "resource": "apiregistration.k8s.io/v1/apiservices"
        }
      ],
      "methodName": "io.k8s.apiregistration.v1.apiservices.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiregistration.k8s.io/v1/apiservices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "808dd0fc-6e2f-48b6-a8b1-aea7ce448f81",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.597032Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "808dd0fc-6e2f-48b6-a8b1-aea7ce448f81",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.709026551Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.replicasets.watch",
          "resource": "apps/v1/replicasets"
        }
      ],
      "methodName": "io.k8s.apps.v1.replicasets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/replicasets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fc5b38d2-e4ef-4ba4-9d61-38821c1c220a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.599828Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fc5b38d2-e4ef-4ba4-9d61-38821c1c220a",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.359989594Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.podmonitors.watch",
          "resource": "monitoring.coreos.com/v1/podmonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.podmonitors.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/podmonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a82deb73-24f9-48fe-a9d8-53582308248c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.602357Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a82deb73-24f9-48fe-a9d8-53582308248c",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.708171288Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterrolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterrolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "39ddff36-e0a3-4bd8-9785-9509999cc1fd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.602415Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "39ddff36-e0a3-4bd8-9785-9509999cc1fd",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.504275409Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1alpha1.pushsecrets.watch",
          "resource": "external-secrets.io/v1alpha1/pushsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1alpha1.pushsecrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1alpha1/pushsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "43585b04-8285-4c22-b8b8-be8714972ff3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.603336Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "43585b04-8285-4c22-b8b8-be8714972ff3",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.029979757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.gkenetworkparamsets.watch",
          "resource": "networking.gke.io/v1/gkenetworkparamsets"
        }
      ],
      "methodName": "io.gke.networking.v1.gkenetworkparamsets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/gkenetworkparamsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ea05db95-018c-4b4b-a227-e4a569333e58",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.607655Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ea05db95-018c-4b4b-a227-e4a569333e58",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a11c7a26-4a08-4aea-bc7d-7f2e241f7efd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.611059Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a11c7a26-4a08-4aea-bc7d-7f2e241f7efd",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.919433310Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheuses.watch",
          "resource": "monitoring.coreos.com/v1/prometheuses"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheuses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "727c5f76-ee25-4b8f-a1c2-2c531607b8d7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.616310Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "727c5f76-ee25-4b8f-a1c2-2c531607b8d7",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.915349397Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.alertmanagers.watch",
          "resource": "monitoring.coreos.com/v1/alertmanagers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.alertmanagers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/alertmanagers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1c88379b-720b-4d31-b7da-421e2f600b17",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.632035Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1c88379b-720b-4d31-b7da-421e2f600b17",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.706656624Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/secrets"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/secrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2eeb1085-3953-49ba-b59a-ea2cd972b286",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.633891Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2eeb1085-3953-49ba-b59a-ea2cd972b286",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.776681868Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.probes.watch",
          "resource": "monitoring.coreos.com/v1/probes"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.probes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/probes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f9b24884-b760-406e-b967-0f0ce638d50b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.639336Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f9b24884-b760-406e-b967-0f0ce638d50b",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320036711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.warden.v1.audits.watch",
          "resource": "warden.gke.io/v1/audits"
        }
      ],
      "methodName": "io.gke.warden.v1.audits.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "warden.gke.io/v1/audits",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dc6bbe38-c9fb-43e1-bdb1-40f60a77e21d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.640364Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dc6bbe38-c9fb-43e1-bdb1-40f60a77e21d",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.914075217Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.networks.watch",
          "resource": "networking.gke.io/v1/networks"
        }
      ],
      "methodName": "io.gke.networking.v1.networks.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/networks",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d989338d-70b1-44d5-a881-60501651e5d1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.640388Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d989338d-70b1-44d5-a881-60501651e5d1",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.709784849Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.controllerrevisions.watch",
          "resource": "apps/v1/controllerrevisions"
        }
      ],
      "methodName": "io.k8s.apps.v1.controllerrevisions.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/controllerrevisions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e2fa1ced-4899-4f83-98c2-3fba202f5f66",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.640433Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e2fa1ced-4899-4f83-98c2-3fba202f5f66",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205494Z"
  },
  {
    "insertId": "uoryefd1qtyz2yao",
    "jsonPayload": {
      "_CAP_EFFECTIVE": "1ffffffffff",
      "_SYSTEMD_INVOCATION_ID": "ed3c38fbfe06435ca47566959c159671",
      "MESSAGE": "I0821 16:39:34.646747    2564 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-production-clust-production-pool--95ab0a41-styj\" status=Running",
      "_SYSTEMD_SLICE": "system.slice",
      "_STREAM_ID": "5a15357e2d894de7a6eb8d66cba6a1be",
      "_RUNTIME_SCOPE": "system",
      "_CMDLINE": "/home/kubernetes/bin/kubelet --v=2 --cloud-provider=external --experimental-mounter-path=/home/kubernetes/containerized_mounter/mounter --cert-dir=/var/lib/kubelet/pki/ --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=100 --volume-plugin-dir=/home/kubernetes/flexvolume --node-status-max-images=25 --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --registry-qps=10 --registry-burst=20 --config /home/kubernetes/kubelet-config.yaml \"--pod-sysctls=net.core.somaxconn=1024,net.ipv4.conf.all.accept_redirects=0,net.ipv4.conf.all.forwarding=1,net.ipv4.conf.all.route_localnet=1,net.ipv4.conf.default.forwarding=1,net.ipv4.ip_forward=1,net.ipv4.tcp_fin_timeout=60,net.ipv4.tcp_keepalive_intvl=60,net.ipv4.tcp_keepalive_probes=5,net.ipv4.tcp_keepalive_time=300,net.ipv4.tcp_rmem=4096 87380 6291456,net.ipv4.tcp_syn_retries=6,net.ipv4.tcp_tw_reuse=0,net.ipv4.tcp_wmem=4096 16384 4194304,net.ipv4.udp_rmem_min=4096,net.ipv4.udp_wmem_min=4096,net.ipv6.conf.all.disable_ipv6=1,net.ipv6.conf.default.accept_ra=0,net.ipv6.conf.default.disable_ipv6=1,net.netfilter.nf_conntrack_generic_timeout=600,net.netfilter.nf_conntrack_tcp_be_liberal=1,net.netfilter.nf_conntrack_tcp_timeout_close_wait=3600,net.netfilter.nf_conntrack_tcp_timeout_established=86400\" --pod-infra-container-image=gke.gcr.io/pause:3.8@sha256:880e63f94b145e46f1b1082bb71b85e21f16b99b180b9996407d61240ceb9830 --version=v1.27.16-gke.1008000",
      "_UID": "0",
      "_HOSTNAME": "gke-production-clust-production-pool--95ab0a41-styj",
      "_EXE": "/home/kubernetes/bin/kubelet",
      "_GID": "0",
      "_SYSTEMD_CGROUP": "/system.slice/kubelet.service",
      "SYSLOG_FACILITY": "3",
      "_COMM": "kubelet",
      "PRIORITY": "6",
      "_MACHINE_ID": "0f3b3b6669a83cf7bd4c94f4aec01c3d",
      "_PID": "2564",
      "_SYSTEMD_UNIT": "kubelet.service",
      "SYSLOG_IDENTIFIER": "kubelet",
      "_BOOT_ID": "c37ad024e45848ce9f507c0717c5fbaa",
      "_TRANSPORT": "stdout"
    },
    "resource": {
      "type": "k8s_node",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "node_name": "gke-production-clust-production-pool--95ab0a41-styj",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.646842Z",
    "logName": "projects/codium-production/logs/kubelet",
    "receiveTimestamp": "2024-08-21T16:39:38.896221651Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-paych-59e85bb2-7el2"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/production-paychex/secrets/gcp-pubsub-key"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.15 (linux/amd64) kubernetes/6341902"
      },
      "resourceName": "core/v1/namespaces/production-paychex/secrets/gcp-pubsub-key",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cc920c37-0106-4bbd-885d-e93e4ca4a3a0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.649773Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cc920c37-0106-4bbd-885d-e93e4ca4a3a0",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.206645285Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-paych-59e85bb2-7el2"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/production-paychex/secrets/gcp-pubsub-key"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.15 (linux/amd64) kubernetes/6341902"
      },
      "resourceName": "core/v1/namespaces/production-paychex/secrets/gcp-pubsub-key",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "85d5e24d-9585-4ed7-ad69-81343270b7c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.651808Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "85d5e24d-9585-4ed7-ad69-81343270b7c4",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.709026551Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a22f9b77-77b4-4856-ba30-4779518cef02",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.664181Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a22f9b77-77b4-4856-ba30-4779518cef02",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.506748377Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.controllerrevisions.watch",
          "resource": "apps/v1/controllerrevisions"
        }
      ],
      "methodName": "io.k8s.apps.v1.controllerrevisions.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/controllerrevisions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d512a640-ad65-4404-94b8-130a1eef61e2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.672237Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d512a640-ad65-4404-94b8-130a1eef61e2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.008170924Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5c2dc162-e17a-46dd-972a-5839f879c324",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.681173Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5c2dc162-e17a-46dd-972a-5839f879c324",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913227981Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-proxy"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.watch",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kube-proxy/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f91e90ea-258c-49d5-95c5-4ec46931b8c0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.684255Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:node-proxier\" of ClusterRole \"system:node-proxier\" to User \"system:kube-proxy\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f91e90ea-258c-49d5-95c5-4ec46931b8c0",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-proxy"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.watch",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kube-proxy/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "37d2d5e8-6666-4b20-be8e-3f97bf3d8a5f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.686268Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:node-proxier\" of ClusterRole \"system:node-proxier\" to User \"system:kube-proxy\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "37d2d5e8-6666-4b20-be8e-3f97bf3d8a5f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.914075217Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.rolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/rolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.rolebindings.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/rolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2e8074ef-3f00-4075-81ef-93b87c11409d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.689767Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2e8074ef-3f00-4075-81ef-93b87c11409d",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.217609216Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.servicemonitors.watch",
          "resource": "monitoring.coreos.com/v1/servicemonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.servicemonitors.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/servicemonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "156679bf-b00e-4535-8b44-001dbb6a51c2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.697100Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "156679bf-b00e-4535-8b44-001dbb6a51c2",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320036711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/kube-system/secrets/external-secrets-webhook"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/kube-system/secrets/external-secrets-webhook",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "349ea74b-bafc-4583-ab69-35acfd1d4ffb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.702008Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "349ea74b-bafc-4583-ab69-35acfd1d4ffb",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.912390880Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "67de159c-a588-4e10-9297-0b9f7e36f670",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.717858Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "67de159c-a588-4e10-9297-0b9f7e36f670",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.policy.v1.poddisruptionbudgets.watch",
          "resource": "policy/v1/poddisruptionbudgets"
        }
      ],
      "methodName": "io.k8s.policy.v1.poddisruptionbudgets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "policy/v1/poddisruptionbudgets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5d081d24-f2d1-4fe8-90b5-cdd671a5082e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.719860Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5d081d24-f2d1-4fe8-90b5-cdd671a5082e",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.107022474Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c0713d3d-602b-4f17-adc3-84f0589271a7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.721058Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c0713d3d-602b-4f17-adc3-84f0589271a7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ff208f84-a81d-4163-a363-0a6eaffef591",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.722127Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ff208f84-a81d-4163-a363-0a6eaffef591",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.306433949Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "97a5d28b-3739-4e2e-af0d-e6820eecd3a8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.722451Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "97a5d28b-3739-4e2e-af0d-e6820eecd3a8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.604949498Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.namespaces.watch",
          "resource": "core/v1/namespaces"
        }
      ],
      "methodName": "io.k8s.core.v1.namespaces.watch",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f957dbc0-33b2-47c1-a5d4-7d45eff1a744",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.727654Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f957dbc0-33b2-47c1-a5d4-7d45eff1a744",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.009278428Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "78a3b7d4-8478-4862-9c15-c00d04e02ee7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.728619Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "78a3b7d4-8478-4862-9c15-c00d04e02ee7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.231313755Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1beta3.prioritylevelconfigurations.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1beta3.prioritylevelconfigurations.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7479622b-8a77-4b07-beb4-2fe351e047c9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.741355Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7479622b-8a77-4b07-beb4-2fe351e047c9",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.314655273Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b3a9955-a47c-4b98-b681-d40f7813bb51",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.741459Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b3a9955-a47c-4b98-b681-d40f7813bb51",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.413701160Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.watch",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a328d2a6-1fd7-4641-bad7-b99953f63d27",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.770316Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a328d2a6-1fd7-4641-bad7-b99953f63d27",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.810999813Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.watch",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f4393f08-b678-43c8-a512-4870456a5bab",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.772935Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f4393f08-b678-43c8-a512-4870456a5bab",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.816928145Z"
  },
  {
    "insertId": "yiqk4tf97naanc8p",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "module": "app",
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "time": {
          "repr": "2024-08-21 16:39:34.785425+00:00",
          "timestamp": 1724258374.785425
        },
        "elapsed": {
          "repr": "1 day, 9:04:32.252048",
          "seconds": 119072.252048
        },
        "line": 164,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "message": "Incoming request /v1/health/live",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "extra": {
          "on_prem_log": true
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "name": "app",
        "function": "live"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:34.785718722Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "14ik4q8f6wlqtz",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "140.82.115.108"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14981",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.108",
      "serverIp": "10.164.16.11",
      "latency": "0.061304s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-github-servic-300-2ce4c0b8",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw"
      }
    },
    "timestamp": "2024-08-21T16:39:34.802426Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/17e16c1784517ac6076b57e555301004",
    "receiveTimestamp": "2024-08-21T16:39:35.910112356Z",
    "spanId": "f005b796dfa14f80"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fa596e20-df5a-49b6-a1ee-5dd1e70b2d6d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.805018Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fa596e20-df5a-49b6-a1ee-5dd1e70b2d6d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:34.912593759Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f51d1efd-6d1e-4c6a-b90c-fc7cd27c4d3a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.807957Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f51d1efd-6d1e-4c6a-b90c-fc7cd27c4d3a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.918509394Z"
  },
  {
    "insertId": "aujjp5rnlv12lfag",
    "jsonPayload": {
      "record": {
        "name": "app",
        "function": "dispatch",
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "extra": {
          "source_host": "35.191.205.162",
          "method": "GET",
          "status_code": 200,
          "url": "http://10.164.17.14/v1/health/live",
          "request_id": "N/A",
          "on_prem_log": true
        },
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:34.809288+00:00",
          "timestamp": 1724258374.809288
        },
        "elapsed": {
          "seconds": 119072.275911,
          "repr": "1 day, 9:04:32.275911"
        },
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "line": 37,
        "message": "Request handled"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.809589063Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "110266f6-68f5-4751-afdf-8428a68c9ca8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.813257Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "110266f6-68f5-4751-afdf-8428a68c9ca8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.803629166Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5f259ae3-50c8-460f-ab20-a9705d649234",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.818306Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5f259ae3-50c8-460f-ab20-a9705d649234",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.046438004Z"
  },
  {
    "insertId": "31xue0ht24ypmtl7",
    "jsonPayload": {
      "text": "Received a GitHub webhook\n",
      "record": {
        "extra": {},
        "message": "Received a GitHub webhook",
        "function": "handle_github_webhooks",
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 134575525518208
        },
        "time": {
          "repr": "2024-08-21 16:39:34.819063+00:00",
          "timestamp": 1724258374.819063
        },
        "module": "github_app",
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "process": {
          "id": 234,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1:27:44.434308",
          "seconds": 5264.434308
        },
        "line": 256,
        "name": "pr_agent.servers.github_app",
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "main",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "namespace_name": "pr-agent"
      }
    },
    "timestamp": "2024-08-21T16:39:34.819318947Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-github",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "57b9b6c95f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.orders.watch",
          "resource": "acme.cert-manager.io/v1/orders"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.orders.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/orders",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "28d6af2c-3161-4c1d-bc08-0ae08d504616",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.825952Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "28d6af2c-3161-4c1d-bc08-0ae08d504616",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.710918636Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:55976 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "9vhi9tqs1heo6dir",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.830761078Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fb4575a7-7d2c-456d-af89-343a70477e86",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.833682Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fb4575a7-7d2c-456d-af89-343a70477e86",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.207487856Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterroles.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterroles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterroles.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterroles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c5e1d393-c296-485a-8295-df33fbe8a986",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.837271Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c5e1d393-c296-485a-8295-df33fbe8a986",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320036711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "45458de2-d9a4-44c5-b3aa-0f64f9d44c63",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:34.840937Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "45458de2-d9a4-44c5-b3aa-0f64f9d44c63",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.813772499Z"
  },
  {
    "insertId": "1so2843fk3z33s",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT"
      },
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "BY"
        }
      },
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 14000
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "37.214.22.173"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8894",
      "status": 200,
      "responseSize": "499",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.1.4",
      "latency": "0.772853s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:34.842998Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/38182083376d4cf3195ef0cd842d1019",
    "receiveTimestamp": "2024-08-21T16:39:36.192477232Z",
    "spanId": "3b0e72d155c3f18c"
  },
  {
    "insertId": "myz6f6klh71tawzc",
    "jsonPayload": {
      "record": {
        "extra": {
          "url": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
          "source_host": "140.82.115.108",
          "status_code": 200,
          "on_prem_log": true,
          "method": "POST"
        },
        "name": "pr_agent.servers.github_app",
        "elapsed": {
          "repr": "1:27:44.459654",
          "seconds": 5264.459654
        },
        "function": "dispatch",
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        },
        "time": {
          "repr": "2024-08-21 16:39:34.844409+00:00",
          "timestamp": 1724258374.844409
        },
        "line": 804,
        "message": "Request handled",
        "file": {
          "name": "github_app.py",
          "path": "/app/pr_agent/servers/github_app.py"
        },
        "exception": null,
        "process": {
          "id": 234,
          "name": "MainProcess"
        },
        "module": "github_app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "pr-agent",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "main",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.844661492Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "pr-agent-free-github",
      "k8s-pod/pod-template-hash": "57b9b6c95f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "insertId": "fk1voof69iy35",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "104.192.140.240",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pr-agent-pro.bitbucketapps.codium.ai/webhook",
      "requestSize": "8136",
      "status": 200,
      "responseSize": "202",
      "userAgent": "Bitbucket-Webhooks/2.0",
      "remoteIp": "104.192.140.240",
      "serverIp": "10.164.9.10",
      "latency": "0.265280s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-bitbucket-serv-300-db3bfebf",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-bitbucket-ingre-ejjqimv4",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-bitbucket-ingre-ejjqimv4",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-bitbucket-ingre-ejjqimv4"
      }
    },
    "timestamp": "2024-08-21T16:39:34.855034Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/3f0843cb2df5d2eddc3f1f1e6b84e72b",
    "receiveTimestamp": "2024-08-21T16:39:35.657304431Z",
    "spanId": "fa40100f853760d8"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "47127c5b-11f3-4bd7-8935-55f51ff0a3f6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.865697Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "47127c5b-11f3-4bd7-8935-55f51ff0a3f6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.608855274Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "83c426a2-c5cd-4dd6-a19f-379c4620070f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.883824Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "83c426a2-c5cd-4dd6-a19f-379c4620070f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.709026551Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "49546db2-154b-4d20-a211-10238bcd539a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.885991Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "49546db2-154b-4d20-a211-10238bcd539a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.710541755Z"
  },
  {
    "insertId": "smi55fecj44lq5mq",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "module": "core",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 136597458638528
        },
        "name": "copilot_proxy.auth.core",
        "line": 156,
        "time": {
          "repr": "2024-08-21 16:39:34.907952+00:00",
          "timestamp": 1724258374.907952
        },
        "extra": {},
        "function": "verify_user_token",
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:08:24.703707",
          "seconds": 119304.703707
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.908227592Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:35.394028763Z"
  },
  {
    "insertId": "x4j4vcyizm9qekrr",
    "jsonPayload": {
      "record": {
        "name": "copilot_proxy.auth.core",
        "module": "core",
        "thread": {
          "id": 136597458638528,
          "name": "AnyIO worker thread"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "exception": null,
        "function": "verify_minimum_tier_level",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "extra": {},
        "line": 106,
        "time": {
          "repr": "2024-08-21 16:39:34.908303+00:00",
          "timestamp": 1724258374.908303
        },
        "elapsed": {
          "repr": "1 day, 9:08:24.704058",
          "seconds": 119304.704058
        }
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.908441448Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:35.394028763Z"
  },
  {
    "insertId": "qe4764ezlna90d1v",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "time": {
          "timestamp": 1724258374.910358,
          "repr": "2024-08-21 16:39:34.910358+00:00"
        },
        "line": 804,
        "function": "dispatch",
        "elapsed": {
          "seconds": 5264.525603,
          "repr": "1:27:44.525603"
        },
        "module": "github_app",
        "thread": {
          "name": "MainThread",
          "id": 134575525518208
        },
        "process": {
          "name": "MainProcess",
          "id": 234
        },
        "extra": {
          "on_prem_log": true,
          "status_code": 200,
          "url": "http://10.164.16.11/",
          "source_host": "35.191.206.101",
          "method": "GET"
        },
        "name": "pr_agent.servers.github_app",
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "main",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "namespace_name": "pr-agent"
      }
    },
    "timestamp": "2024-08-21T16:39:34.910627703Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-github",
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:51314 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "0hbq1el0iqjzjqmg",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production-recursion",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r"
      }
    },
    "timestamp": "2024-08-21T16:39:34.912268821Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.821204501Z"
  },
  {
    "insertId": "hyomgaftycn014b0",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "elapsed": {
          "seconds": 119304.708573,
          "repr": "1 day, 9:08:24.708573"
        },
        "function": "run_code_completion",
        "time": {
          "timestamp": 1724258374.912818,
          "repr": "2024-08-21 16:39:34.912818+00:00"
        },
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "module": "v2",
        "extra": {
          "user": {
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "exp": 1724258892,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "codiumate": null,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "auth_time": 1724251717,
            "allowed": true,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            },
            "iat": 1724255292,
            "tier_level": 10,
            "tier_end_date": 1701693510000,
            "email_verified": false,
            "aud": "codium-dev-360812",
            "email": "y.borozna81@internet.ru"
          },
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "on_prem_log": true,
          "request_id": "64a8adda-e9ca-43d5-a491-36c8df778054",
          "data": {
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">",
            "file_diff_content": "",
            "repo_context": [],
            "extra_instructions": "",
            "context_mode": "pre_pr",
            "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
            "reference_snippet_messages": [
              {
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:",
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                "file_name": "templates\\base.html",
                "type": "File"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard",
                "file_name": "templates\\base.html"
              },
              {
                "file_name": "templates\\base.html",
                "type": "Clipboard",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
              }
            ],
            "remote_context": [],
            "task": "",
            "user_data": {
              "extension_version": "0.9.13",
              "editor_type": "vscode",
              "editor_sub_version": null,
              "editor_version": "1.92.2",
              "os_version": "v20.14.0",
              "user_id": null,
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd",
              "os_platform": "win32"
            },
            "max_repo_context": 5,
            "max_remote_context": 5,
            "context": [],
            "is_multiline": false,
            "is_file_diff": false,
            "user_context": [],
            "language": "django-html",
            "relative_file_path": "dish/templates/core/frontpage.html"
          }
        },
        "exception": null,
        "line": 513,
        "name": "copilot_proxy.api.code.v2",
        "message": "Incoming request /v2/code/completion",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:34.913214556Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:35.394028763Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2b89c09d-bec6-4fde-bef3-a731ed501ce6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.916995Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2b89c09d-bec6-4fde-bef3-a731ed501ce6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.895133097Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0d730045-2f87-4722-8e7f-a64a6f44428e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:34.920966Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0d730045-2f87-4722-8e7f-a64a6f44428e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.732953711Z"
  },
  {
    "insertId": "y0vp8i10b9790mle",
    "jsonPayload": {
      "record": {
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "exception": null,
        "module": "litellm_infer_engine",
        "elapsed": {
          "repr": "1 day, 8:55:27.824314",
          "seconds": 118527.824314
        },
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:34.925963+00:00",
          "timestamp": 1724258374.925963
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "name": "ai.litellm.litellm_infer_engine",
        "function": "generate",
        "message": "OpenAI Response",
        "extra": {
          "user": {
            "optout": false,
            "uid": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "aud": "codium-dev-360812",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocINQInd_FocpYeBLqdBmgBalK-N6QInOYl4ptzpyH36Gqhfb48=s96-c",
            "allowed": true,
            "baseUrl": null,
            "auth_time": 1724135554,
            "email": "max.schattauer@perelyn.com",
            "email_verified": true,
            "codiumate": null,
            "name": "Max Schattauer / Perelyn GmbH",
            "tier_end_date": 1724651848000,
            "sub": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "organization_id": null,
            "exp": 1724259983,
            "user_id": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "tier_level": 10,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "max.schattauer@perelyn.com"
                ],
                "google.com": [
                  "114319076377525603991"
                ]
              }
            },
            "iat": 1724256383
          },
          "openai_request_id": "cmpl-9yierRNc0HCcjiUlg2Ld8pRobjAHZ",
          "openai_response": {
            "model": "gpt-3.5-turbo-instruct",
            "created": 1724258373,
            "object": "text_completion",
            "id": "cmpl-9yierRNc0HCcjiUlg2Ld8pRobjAHZ",
            "usage": {
              "total_tokens": 2902,
              "prompt_tokens": 2836,
              "completion_tokens": 66
            },
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text=' };\\n    return this.apiCallWrapper<ResultType>({\\n      endpoint: \"default-settings\",\\n    }).then((response) => {\\n      return {\\n        llm: response.llm,\\n        temperature: response.temperature,\\n      };\\n    });\\n  }\\n}\\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();', logprobs=None)"
            ]
          },
          "url_path": "/v2/code/completion",
          "completion": " };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n        temperature: response.temperature,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\napi/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n===\n\nProject directory structure:\n===\nREADME.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nstate.current_settings.document_collection\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nWas steht in den AGB\n===\n\nCode context from file path frontend/react/src/api/chatbot/settings.ts:\n===\nChatbotSettings\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in typescript from a file path frontend/react/src/api/chatbot/settings.ts, complete it:\n\n---\nimport { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string. temperature: Number, ",
          "model": "gpt-3.5-turbo-instruct",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "request_id": "1edd59ba-7a00-4ab5-aefb-fc972f4515dd"
        },
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "line": 131
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:34.926478609Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8ffe0636-841d-4423-9142-e50921b63655",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.932900Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8ffe0636-841d-4423-9142-e50921b63655",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.662473333Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "df94d7dd-4203-475a-9492-7c9ee9a93a0a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.933857Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "df94d7dd-4203-475a-9492-7c9ee9a93a0a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.818497303Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fd5bb544-02af-4ea9-ac21-c9ddffcfb795",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.949847Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fd5bb544-02af-4ea9-ac21-c9ddffcfb795",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.811934968Z"
  },
  {
    "insertId": "r4geb2unfn3xnmvo",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "extra": {
          "url_path": "/v2/code/completion",
          "user": {
            "aud": "codium-dev-360812",
            "optout": false,
            "tier_level": 10,
            "email_verified": true,
            "name": "Max Schattauer / Perelyn GmbH",
            "exp": 1724259983,
            "auth_time": 1724135554,
            "user_id": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "uid": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "baseUrl": null,
            "sub": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "iat": 1724256383,
            "tier_end_date": 1724651848000,
            "codiumate": null,
            "organization_id": null,
            "allowed": true,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "max.schattauer@perelyn.com"
                ],
                "google.com": [
                  "114319076377525603991"
                ]
              }
            },
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocINQInd_FocpYeBLqdBmgBalK-N6QInOYl4ptzpyH36Gqhfb48=s96-c",
            "email": "max.schattauer@perelyn.com"
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "results": {
            "inference_steps": {
              "step_01_CodeCompletion": {
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:33.709784",
                "04_end_time": "2024-08-21 16:39:34.949915",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\napi/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n===\n\nProject directory structure:\n===\nREADME.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nstate.current_settings.document_collection\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nWas steht in den AGB\n===\n\nCode context from file path frontend/react/src/api/chatbot/settings.ts:\n===\nChatbotSettings\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in typescript from a file path frontend/react/src/api/chatbot/settings.ts, complete it:\n\n---\nimport { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string. temperature: Number, ",
                "02_completion": " };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n        temperature: response.temperature,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();"
              }
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \" };\\n    return this.apiCallWrapper<ResultType>({\\n      endpoint: \\\"default-settings\\\",\\n    }).then((response) => {\\n      return {\\n        llm: response.llm,\\n        temperature: response.temperature,\\n      };\\n    });\\n  }\\n}\\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "user_input": {
              "is_multiline": false,
              "reference_snippet_messages": [
                {
                  "content": "api/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};",
                  "type": "CodiummateImport",
                  "file_name": "Imports and implementations used in this file:"
                },
                {
                  "file_name": "Project directory structure:",
                  "type": "DirectoryStructure",
                  "content": "README.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh"
                },
                {
                  "content": "state.current_settings.document_collection",
                  "type": "Clipboard",
                  "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py"
                },
                {
                  "content": "Was steht in den AGB",
                  "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py",
                  "type": "Clipboard"
                },
                {
                  "file_name": "frontend/react/src/api/chatbot/settings.ts",
                  "type": "Clipboard",
                  "content": "ChatbotSettings"
                }
              ],
              "user_context": [],
              "relative_file_path": "frontend/react/src/api/chatbot/settings.ts",
              "user_data": "user_id=None installation_id='b873c323-f807-48e0-816d-98db78407310' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='darwin' os_version='v20.14.0' editor_type='vscode'",
              "is_file_diff": false,
              "repo_context": [],
              "configuration": {},
              "file_diff_content": "",
              "remote_context": [],
              "context": [],
              "context_mode": "pre_pr",
              "max_repo_context": 5,
              "max_remote_context": 5,
              "doc_context_prefix": "import { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string. temperature: Number, ",
              "extra_instructions": "",
              "task": "",
              "doc_context_suffix": " };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n",
              "language": "typescript"
            },
            "url_path": "/v2/code/completion"
          },
          "request_id": "1edd59ba-7a00-4ab5-aefb-fc972f4515dd"
        },
        "function": "process",
        "name": "copilot_proxy.utils.inference_utils",
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "module": "inference_utils",
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "time": {
          "timestamp": 1724258374.949985,
          "repr": "2024-08-21 16:39:34.949985+00:00"
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 8:55:27.848336",
          "seconds": 118527.848336
        },
        "message": "Prompts and results v2",
        "line": 1112,
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:34.950640160Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3e762feb-e78f-4cb9-a4da-a1b020c73ffc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:34.962679Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3e762feb-e78f-4cb9-a4da-a1b020c73ffc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.710541755Z"
  },
  {
    "insertId": "p51pq4uf2m6tx8uk",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "time": {
          "repr": "2024-08-21 16:39:34.975415+00:00",
          "timestamp": 1724258374.975415
        },
        "name": "app",
        "line": 37,
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "module": "app",
        "elapsed": {
          "seconds": 118527.873766,
          "repr": "1 day, 8:55:27.873766"
        },
        "extra": {
          "status_code": 200,
          "source_host": "188.174.251.242",
          "request_id": "1edd59ba-7a00-4ab5-aefb-fc972f4515dd",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/code/completion",
          "method": "POST"
        },
        "message": "Request handled",
        "exception": null,
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "function": "dispatch",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:34.975697804Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificaterequests.watch",
          "resource": "cert-manager.io/v1/certificaterequests"
        }
      ],
      "methodName": "io.cert-manager.v1.certificaterequests.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificaterequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4cc38ee9-4397-424b-b952-c90d8188ea0d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.003489Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4cc38ee9-4397-424b-b952-c90d8188ea0d",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.814725662Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6d783993-5a2f-443a-9d20-da9f9a06db1b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.003882Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6d783993-5a2f-443a-9d20-da9f9a06db1b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.231313755Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/kube-system/endpoints/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/endpoints/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "590559ec-c53c-4548-84e0-63706d91fd63",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.007377Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "590559ec-c53c-4548-84e0-63706d91fd63",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.189610974Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "81d37817-f998-4ee3-a42c-e429e29f542a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.007646Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "81d37817-f998-4ee3-a42c-e429e29f542a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.120802702Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5ac86a9f-6ab0-4f68-b666-6e2671a3717c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.009778Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5ac86a9f-6ab0-4f68-b666-6e2671a3717c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.760882165Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ec9f806d-8517-4013-a343-01af4f4c22d7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.010601Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ec9f806d-8517-4013-a343-01af4f4c22d7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.215446302Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6a59ba1b-cb1d-4d06-847a-3bbb93cba34b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.019729Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6a59ba1b-cb1d-4d06-847a-3bbb93cba34b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.707466885Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.applications.watch",
          "resource": "argoproj.io/v1alpha1/applications"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.applications.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/applications",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "83fbc691-ce2d-46a8-8440-7cb703dfdab1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.023672Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "83fbc691-ce2d-46a8-8440-7cb703dfdab1",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.912390880Z"
  },
  {
    "insertId": "rhhv8uf6aljrs",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "140.82.115.60",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14652",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.60",
      "serverIp": "10.164.6.4",
      "latency": "0.057309s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:35.029500Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/867f43942eefc8b38bbc10337426d2c6",
    "receiveTimestamp": "2024-08-21T16:39:35.840359864Z",
    "spanId": "a8c8a7e527ab710a"
  },
  {
    "insertId": "u0cksxfy4a5hh",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "140.82.115.254",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14654",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.254",
      "serverIp": "10.164.6.4",
      "latency": "0.062132s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "project_id": "codium-production",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d"
      }
    },
    "timestamp": "2024-08-21T16:39:35.043165Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/89c4b9a945859d4ef1e8dde3ef35f20c",
    "receiveTimestamp": "2024-08-21T16:39:35.420033223Z",
    "spanId": "303a8e3897fb9b92"
  },
  {
    "insertId": "awnfyirz1hhueqtm",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "function": "live",
        "time": {
          "timestamp": 1724258375.049108,
          "repr": "2024-08-21 16:39:35.049108+00:00"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "line": 164,
        "elapsed": {
          "repr": "1 day, 9:04:32.515731",
          "seconds": 119072.515731
        },
        "exception": null,
        "name": "app",
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "module": "app",
        "message": "Incoming request /v1/health/live",
        "extra": {
          "on_prem_log": true
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.049405756Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4e1939ff-d211-4289-ad70-2cca20cc9849",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.053242Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4e1939ff-d211-4289-ad70-2cca20cc9849",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.514505315Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.resourcequotas.list",
          "resource": "core/v1/resourcequotas"
        }
      ],
      "methodName": "io.k8s.core.v1.resourcequotas.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/resourcequotas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "92fc4072-5e1d-4573-99c7-0b6b17fe293e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.055624Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "92fc4072-5e1d-4573-99c7-0b6b17fe293e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.805126918Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8c81340e-6425-4227-86b6-9f3f01a2e078",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.056410Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8c81340e-6425-4227-86b6-9f3f01a2e078",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.412100995Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.resourcequotas.watch",
          "resource": "core/v1/resourcequotas"
        }
      ],
      "methodName": "io.k8s.core.v1.resourcequotas.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/resourcequotas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "64fc16f1-2401-49ab-a09f-3354c1b3113b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.057316Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "64fc16f1-2401-49ab-a09f-3354c1b3113b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a1573c08-5664-4ad2-ab32-df9d07c42557",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.057845Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a1573c08-5664-4ad2-ab32-df9d07c42557",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.019858889Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.limitranges.list",
          "resource": "core/v1/limitranges"
        }
      ],
      "methodName": "io.k8s.core.v1.limitranges.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/limitranges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "30af1975-5b60-4506-a887-74e65175e3a2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.057949Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "30af1975-5b60-4506-a887-74e65175e3a2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.limitranges.watch",
          "resource": "core/v1/limitranges"
        }
      ],
      "methodName": "io.k8s.core.v1.limitranges.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/limitranges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e54d8dd8-2840-40ef-bf94-096f0e6c3702",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.059304Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e54d8dd8-2840-40ef-bf94-096f0e6c3702",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.710918636Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c5cf1f17-afe4-49b4-9ab8-5fd0cf47d73c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.064327Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c5cf1f17-afe4-49b4-9ab8-5fd0cf47d73c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.110252348Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/secrets"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/secrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5054afb2-ef8a-45e6-a3a0-6a43cb4f3d0d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.066105Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5054afb2-ef8a-45e6-a3a0-6a43cb4f3d0d",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.808639544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumeclaims.list",
          "resource": "core/v1/persistentvolumeclaims"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumeclaims.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumeclaims",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cfd29e9e-157f-4afd-9943-635ddc1f5091",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.069682Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cfd29e9e-157f-4afd-9943-635ddc1f5091",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.811404031Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.nodemanagement.v1alpha1.updateinfos.list",
          "resource": "nodemanagement.gke.io/v1alpha1/updateinfos"
        }
      ],
      "methodName": "io.gke.nodemanagement.v1alpha1.updateinfos.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "nodemanagement.gke.io/v1alpha1/updateinfos",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1502ff9d-0cef-4f6f-b026-a45ffe99bb71",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.069742Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1502ff9d-0cef-4f6f-b026-a45ffe99bb71",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.304542242Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.cronjobs.list",
          "resource": "batch/v1/cronjobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.cronjobs.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/cronjobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "70cab40b-f2a1-4fc6-aee2-8f51c6bd323a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.069756Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "70cab40b-f2a1-4fc6-aee2-8f51c6bd323a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.912120501Z"
  },
  {
    "insertId": "5wy0ks7ikp6raao5",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "elapsed": {
          "seconds": 119072.537126,
          "repr": "1 day, 9:04:32.537126"
        },
        "time": {
          "timestamp": 1724258375.070503,
          "repr": "2024-08-21 16:39:35.070503+00:00"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "name": "app",
        "extra": {
          "request_id": "N/A",
          "on_prem_log": true,
          "source_host": "10.164.17.1",
          "status_code": 200,
          "method": "GET",
          "url": "http://10.164.17.14:5432/v1/health/live"
        },
        "function": "dispatch",
        "module": "app",
        "line": 37,
        "exception": null,
        "message": "Request handled",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.070804795Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumeclaims.watch",
          "resource": "core/v1/persistentvolumeclaims"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumeclaims.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumeclaims",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bad069ff-a8ad-4aeb-a664-58399256c1f0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.071129Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bad069ff-a8ad-4aeb-a664-58399256c1f0",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.029979757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumes.list",
          "resource": "core/v1/persistentvolumes"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumes.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c7fcd836-bd9e-4176-a9f5-67d4bbedb7af",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.071194Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c7fcd836-bd9e-4176-a9f5-67d4bbedb7af",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.912932587Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.nodemanagement.v1alpha1.updateinfos.watch",
          "resource": "nodemanagement.gke.io/v1alpha1/updateinfos"
        }
      ],
      "methodName": "io.gke.nodemanagement.v1alpha1.updateinfos.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "nodemanagement.gke.io/v1alpha1/updateinfos",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "67239a39-364a-4150-bec5-e1f38cc01473",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.072489Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "67239a39-364a-4150-bec5-e1f38cc01473",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.022106545Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.cronjobs.watch",
          "resource": "batch/v1/cronjobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.cronjobs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/cronjobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9cf012b9-ed7e-417f-8442-cd106f8f0501",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.073644Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9cf012b9-ed7e-417f-8442-cd106f8f0501",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.706448351Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumes.watch",
          "resource": "core/v1/persistentvolumes"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fab61fe1-5089-463b-b038-8a493870d949",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.074224Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fab61fe1-5089-463b-b038-8a493870d949",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913135066Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.google.cloud.v1.backendconfigs.list",
          "resource": "cloud.google.com/v1/backendconfigs"
        }
      ],
      "methodName": "com.google.cloud.v1.backendconfigs.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cloud.google.com/v1/backendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c64142e2-a011-4055-b841-5880277c36b5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.077769Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c64142e2-a011-4055-b841-5880277c36b5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.808639544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.serviceaccounts.list",
          "resource": "core/v1/serviceaccounts"
        }
      ],
      "methodName": "io.k8s.core.v1.serviceaccounts.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/serviceaccounts",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0f58f55e-7e6f-4c84-9447-7e7471b3b69f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.078591Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0f58f55e-7e6f-4c84-9447-7e7471b3b69f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.811404031Z"
  },
  {
    "insertId": "sl01hhfk0fheg",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "140.82.115.62",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14093",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.62",
      "serverIp": "10.164.12.3",
      "latency": "0.056564s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.078855Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/6e6fd466d3f4c7cb8e7e0463ee3b451a",
    "receiveTimestamp": "2024-08-21T16:39:35.469131454Z",
    "spanId": "4595a455b2c62997"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clusterexternalsecrets.list",
          "resource": "external-secrets.io/v1beta1/clusterexternalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clusterexternalsecrets.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clusterexternalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "923e3105-14ab-4536-9c84-9d00a85c55d6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.079492Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "923e3105-14ab-4536-9c84-9d00a85c55d6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.514505315Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.google.cloud.v1.backendconfigs.watch",
          "resource": "cloud.google.com/v1/backendconfigs"
        }
      ],
      "methodName": "com.google.cloud.v1.backendconfigs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cloud.google.com/v1/backendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "93a283bd-2df8-43b5-905a-89e313d6d106",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.080550Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "93a283bd-2df8-43b5-905a-89e313d6d106",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.816928145Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clusterexternalsecrets.watch",
          "resource": "external-secrets.io/v1beta1/clusterexternalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clusterexternalsecrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clusterexternalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "60bbd25a-66da-48af-ab0b-31a69145ca01",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.080942Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "60bbd25a-66da-48af-ab0b-31a69145ca01",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.914075217Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.serviceaccounts.watch",
          "resource": "core/v1/serviceaccounts"
        }
      ],
      "methodName": "io.k8s.core.v1.serviceaccounts.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/serviceaccounts",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b757e30-f6c2-4fb2-82f4-ffffc8adaddd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.082974Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b757e30-f6c2-4fb2-82f4-ffffc8adaddd",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.007352665Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.podtemplates.list",
          "resource": "core/v1/podtemplates"
        }
      ],
      "methodName": "io.k8s.core.v1.podtemplates.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/podtemplates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c4522b81-1151-42c8-8052-390eb439c2cb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.085546Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c4522b81-1151-42c8-8052-390eb439c2cb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.306002065Z"
  },
  {
    "insertId": "19iyolbe2ghi8",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "CO"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "200.118.60.217",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 1000,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1438",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "200.118.60.217",
      "serverIp": "10.164.16.6",
      "latency": "0.105433s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:35.085620Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/4031c1772ca6156e1ee4db37259d59e3",
    "receiveTimestamp": "2024-08-21T16:39:36.329563873Z",
    "spanId": "a8930f58d5b12c3a"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.podtemplates.watch",
          "resource": "core/v1/podtemplates"
        }
      ],
      "methodName": "io.k8s.core.v1.podtemplates.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/podtemplates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "143b63f5-b46a-4ca0-9835-cdb2f1b03090",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.087076Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "143b63f5-b46a-4ca0-9835-cdb2f1b03090",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205644011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.acraccesstokens.list",
          "resource": "generators.external-secrets.io/v1alpha1/acraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.acraccesstokens.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/acraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ccc79d1d-4c3c-485a-84ef-1326ef2a5c72",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.090662Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ccc79d1d-4c3c-485a-84ef-1326ef2a5c72",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.604949498Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.list",
          "resource": "core/v1/endpoints"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/endpoints",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "002c53af-f315-47cf-a813-16007247b31c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.091185Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "002c53af-f315-47cf-a813-16007247b31c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.811934968Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.acraccesstokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/acraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.acraccesstokens.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/acraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "de296471-0086-4cd4-ad45-cf30a2485a6e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.092240Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "de296471-0086-4cd4-ad45-cf30a2485a6e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.506350847Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.autoscaling.v2.horizontalpodautoscalers.list",
          "resource": "autoscaling/v2/horizontalpodautoscalers"
        }
      ],
      "methodName": "io.k8s.autoscaling.v2.horizontalpodautoscalers.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling/v2/horizontalpodautoscalers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2d6fbef2-3fa0-455b-9aca-af5554332cb1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.095672Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2d6fbef2-3fa0-455b-9aca-af5554332cb1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.706656624Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "faafcbb7-90a0-47ac-95a7-577dd0ed2772",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.096144Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "faafcbb7-90a0-47ac-95a7-577dd0ed2772",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.608711885Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.watch",
          "resource": "core/v1/endpoints"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/endpoints",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b0c9f9ab-d7f4-4a49-9c72-7c50a3df3194",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.096606Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b0c9f9ab-d7f4-4a49-9c72-7c50a3df3194",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.623591538Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.autoscaling.v2.horizontalpodautoscalers.watch",
          "resource": "autoscaling/v2/horizontalpodautoscalers"
        }
      ],
      "methodName": "io.k8s.autoscaling.v2.horizontalpodautoscalers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling/v2/horizontalpodautoscalers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "48e8b437-0fa5-428d-a1c6-4e9a694b9d40",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.097580Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "48e8b437-0fa5-428d-a1c6-4e9a694b9d40",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209756429Z"
  },
  {
    "insertId": "1acthfsfd6l3ht",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "35.233.206.171",
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://pro.gitlab.pr-agent.codium.ai/",
      "requestSize": "149",
      "status": 200,
      "responseSize": "136",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.233.206.171",
      "serverIp": "10.164.15.10",
      "latency": "0.038430s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-gitlab-service-300-a07321a4",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-gitlab-ingress-vq0cu6yb",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-gitlab-ingress-vq0cu6yb",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-gitlab-ingress-vq0cu6yb"
      }
    },
    "timestamp": "2024-08-21T16:39:35.108715Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/3742987482b56659e611f3c10d904c50",
    "receiveTimestamp": "2024-08-21T16:39:35.516709611Z",
    "spanId": "b35d1749757b0fe0"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.node.v1.runtimeclasses.list",
          "resource": "node.k8s.io/v1/runtimeclasses"
        }
      ],
      "methodName": "io.k8s.node.v1.runtimeclasses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "node.k8s.io/v1/runtimeclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "060c130c-3885-4046-83c7-0d67a1dd3f97",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.108814Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "060c130c-3885-4046-83c7-0d67a1dd3f97",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.821055846Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.secretstores.list",
          "resource": "external-secrets.io/v1beta1/secretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.secretstores.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/secretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a85a80f6-7dc4-4786-a21b-92900d537972",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.109540Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a85a80f6-7dc4-4786-a21b-92900d537972",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.029979757Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:42758 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "uynf4fzg3sh25099",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:35.109738272Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.node.v1.runtimeclasses.watch",
          "resource": "node.k8s.io/v1/runtimeclasses"
        }
      ],
      "methodName": "io.k8s.node.v1.runtimeclasses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "node.k8s.io/v1/runtimeclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "37964fa3-4eaa-4f18-b66f-0cbe20c7b72b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.110431Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "37964fa3-4eaa-4f18-b66f-0cbe20c7b72b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.710275379Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.secretstores.watch",
          "resource": "external-secrets.io/v1beta1/secretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.secretstores.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/secretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5e93bf30-8573-4912-a91b-6787a57a4c97",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.110937Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5e93bf30-8573-4912-a91b-6787a57a4c97",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.520265807Z"
  },
  {
    "insertId": "nb2vale5orw9",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "35.192.92.84",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://intuit.pro.github.pr-agent.codium.ai/",
      "requestSize": "159",
      "status": 200,
      "responseSize": "136",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.192.92.84",
      "serverIp": "10.164.7.3",
      "latency": "0.004130s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-intuit-in-mlhm1o4h",
        "zone": "global",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-intuit-in-mlhm1o4h",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-intuit-in-mlhm1o4h",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-intuit-s-300-66c70cc2"
      }
    },
    "timestamp": "2024-08-21T16:39:35.111708Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/a40da06a44e2ed3963596537dfb11a07",
    "receiveTimestamp": "2024-08-21T16:39:36.265141043Z",
    "spanId": "a209a63b26fef2c6"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.replicationcontrollers.list",
          "resource": "core/v1/replicationcontrollers"
        }
      ],
      "methodName": "io.k8s.core.v1.replicationcontrollers.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/replicationcontrollers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "29cbaf06-2821-4f9b-bd83-80ed533c0353",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.117583Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "29cbaf06-2821-4f9b-bd83-80ed533c0353",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.607188699Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.replicationcontrollers.watch",
          "resource": "core/v1/replicationcontrollers"
        }
      ],
      "methodName": "io.k8s.core.v1.replicationcontrollers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/replicationcontrollers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c3f0b79c-dc10-4b87-9767-9875f9e774d9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.119054Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c3f0b79c-dc10-4b87-9767-9875f9e774d9",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.029979757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiextensions.v1.customresourcedefinitions.watch",
          "resource": "apiextensions.k8s.io/v1/customresourcedefinitions"
        }
      ],
      "methodName": "io.k8s.apiextensions.v1.customresourcedefinitions.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiextensions.k8s.io/v1/customresourcedefinitions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "65546040-71f6-4399-8444-cdf690148b15",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.125441Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "65546040-71f6-4399-8444-cdf690148b15",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.269804841Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.list",
          "resource": "core/v1/nodes"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/nodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c27190c0-37e6-448b-99ae-b94739e79af8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.126843Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c27190c0-37e6-448b-99ae-b94739e79af8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.watch",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "da8b9bd2-0bb1-48f6-835b-b76067c6e814",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.134924Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "da8b9bd2-0bb1-48f6-835b-b76067c6e814",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.811396520Z"
  },
  {
    "insertId": "wer14h3zten8sbvg",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "process": {
          "name": "MainProcess",
          "id": 11
        },
        "exception": null,
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "function": "dispatch",
        "module": "app",
        "elapsed": {
          "repr": "1 day, 8:48:22.227433",
          "seconds": 118102.227433
        },
        "extra": {
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "method": "POST",
          "on_prem_log": true,
          "source_host": "200.118.60.217",
          "request_id": "N/A",
          "status_code": 200
        },
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "time": {
          "repr": "2024-08-21 16:39:35.136403+00:00",
          "timestamp": 1724258375.136403
        },
        "name": "app",
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.136647615Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.challenges.list",
          "resource": "acme.cert-manager.io/v1/challenges"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.challenges.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/challenges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d6f5976a-bf15-4567-97d3-1caa31e36399",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.137679Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d6f5976a-bf15-4567-97d3-1caa31e36399",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.202237449Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.hub.v1.memberships.list",
          "resource": "hub.gke.io/v1/memberships"
        }
      ],
      "methodName": "io.gke.hub.v1.memberships.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "hub.gke.io/v1/memberships",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b6e0543-00d5-4a66-9951-1283e4040210",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.138247Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b6e0543-00d5-4a66-9951-1283e4040210",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.417959166Z"
  },
  {
    "insertId": "zvbuy0fiz7y9xb0u",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "thread": {
          "name": "MainThread",
          "id": 134575525518208
        },
        "time": {
          "timestamp": 1724258375.138799,
          "repr": "2024-08-21 16:39:35.138799+00:00"
        },
        "module": "github_app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "extra": {
          "status_code": 200,
          "method": "GET",
          "on_prem_log": true,
          "url": "http://10.164.16.11/",
          "source_host": "35.191.206.100"
        },
        "line": 804,
        "exception": null,
        "elapsed": {
          "repr": "1:27:44.754044",
          "seconds": 5264.754044
        },
        "name": "pr_agent.servers.github_app",
        "function": "dispatch",
        "process": {
          "name": "MainProcess",
          "id": 234
        },
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "main",
        "namespace_name": "pr-agent",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.139029975Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "pr-agent-free-github",
      "k8s-pod/pod-template-hash": "57b9b6c95f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.namespaces.list",
          "resource": "core/v1/namespaces"
        }
      ],
      "methodName": "io.k8s.core.v1.namespaces.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c51548f1-492e-4517-b781-b02d8677c275",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.139107Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c51548f1-492e-4517-b781-b02d8677c275",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.hub.v1.memberships.watch",
          "resource": "hub.gke.io/v1/memberships"
        }
      ],
      "methodName": "io.gke.hub.v1.memberships.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "hub.gke.io/v1/memberships",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2c64d049-5f40-4aa6-b4fb-0b9949f69456",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.139700Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2c64d049-5f40-4aa6-b4fb-0b9949f69456",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.623591538Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.challenges.watch",
          "resource": "acme.cert-manager.io/v1/challenges"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.challenges.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/challenges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bcb16a3d-dac5-4a33-85c9-43149051bfe2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.139860Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bcb16a3d-dac5-4a33-85c9-43149051bfe2",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.namespaces.watch",
          "resource": "core/v1/namespaces"
        }
      ],
      "methodName": "io.k8s.core.v1.namespaces.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "77312b59-e6b7-4291-b44d-8cc9f403c9c9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.141125Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "77312b59-e6b7-4291-b44d-8cc9f403c9c9",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.110252348Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0b0d562b-0103-48ec-b317-04d3076390fb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.143786Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0b0d562b-0103-48ec-b317-04d3076390fb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.912390880Z"
  },
  {
    "insertId": "1kqo3au2dcpxp4hu",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-6tztw"
      }
    },
    "timestamp": "2024-08-21T16:39:35.144776779Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:37.890881056Z"
  },
  {
    "insertId": "tkzk95mdbmba1112",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "filestore-node-6tztw",
        "container_name": "gcp-filestore-driver"
      }
    },
    "timestamp": "2024-08-21T16:39:35.144815711Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:37.890881056Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.jobs.list",
          "resource": "batch/v1/jobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.jobs.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/jobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "61752053-48ee-4317-a0f5-0ac5c401f139",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.150435Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "61752053-48ee-4317-a0f5-0ac5c401f139",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.817162542Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.watch",
          "resource": "core/v1/nodes"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/nodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2ac18aee-b169-49c3-8ea0-314047a5b5f2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.152429Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2ac18aee-b169-49c3-8ea0-314047a5b5f2",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209756429Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.jobs.watch",
          "resource": "batch/v1/jobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.jobs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/jobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "75de1657-04e3-42a6-835e-372466937077",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.152759Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "75de1657-04e3-42a6-835e-372466937077",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.520265807Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.replicasets.watch",
          "resource": "apps/v1/replicasets"
        }
      ],
      "methodName": "io.k8s.apps.v1.replicasets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/replicasets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "056e2a74-adb4-4ea4-b21e-83fda1c5082d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.154139Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "056e2a74-adb4-4ea4-b21e-83fda1c5082d",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320036711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.121.187.134",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.163387539Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "ncq8koetj8t0",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.157692187Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:35.409485781Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.externalsecrets.list",
          "resource": "external-secrets.io/v1beta1/externalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.externalsecrets.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/externalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bc31c504-d5f7-4a6f-81df-e6b24188ff8b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.160801Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bc31c504-d5f7-4a6f-81df-e6b24188ff8b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.706965687Z"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:35Z\" level=info msg=\"finished unary call with code OK\" grpc.code=OK grpc.method=Check grpc.service=grpc.health.v1.Health grpc.start_time=\"2024-08-21T16:39:35Z\" grpc.time_ms=0.02 span.kind=server system=grpc",
    "insertId": "1iidsqmd4cih0tby",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "repo-server",
        "pod_name": "argo-cd-argocd-repo-server-68c4fd64bb-v6pb7",
        "namespace_name": "argo-cd",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.174713796Z",
    "severity": "ERROR",
    "labels": {
      "k8s-pod/app_kubernetes_io/version": "v2.10.5",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/pod-template-hash": "68c4fd64bb",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6",
      "k8s-pod/app_kubernetes_io/component": "repo-server",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "k8s-pod/app_kubernetes_io/name": "argocd-repo-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:36.366635938Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.externalsecrets.watch",
          "resource": "external-secrets.io/v1beta1/externalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.externalsecrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/externalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ba7d52ee-68cd-405e-9040-aa2e64e1ae1e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.179754Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ba7d52ee-68cd-405e-9040-aa2e64e1ae1e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.417959166Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.jobs.list",
          "resource": "batch/v1/jobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.jobs.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/jobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "29257470-1694-4b0a-96f0-0a1bc66e0544",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.188125Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "29257470-1694-4b0a-96f0-0a1bc66e0544",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913227981Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.list",
          "resource": "apps/v1/deployments"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/deployments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "36358bcf-3871-400a-b9ab-77dae05bfbfb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.189422Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "36358bcf-3871-400a-b9ab-77dae05bfbfb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.623591538Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumeclaims.list",
          "resource": "core/v1/persistentvolumeclaims"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumeclaims.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumeclaims",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "42732f85-84c6-48d9-8114-4df9f5292e5b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.196293Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "42732f85-84c6-48d9-8114-4df9f5292e5b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.722032607Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.clusterissuers.list",
          "resource": "cert-manager.io/v1/clusterissuers"
        }
      ],
      "methodName": "io.cert-manager.v1.clusterissuers.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/clusterissuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3ab58478-695f-4fed-8957-bca8fc8ede23",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.197277Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3ab58478-695f-4fed-8957-bca8fc8ede23",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.405159079Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.replicationcontrollers.list",
          "resource": "core/v1/replicationcontrollers"
        }
      ],
      "methodName": "io.k8s.core.v1.replicationcontrollers.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/replicationcontrollers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "79f86228-c687-4c51-b437-088294058755",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.198290Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "79f86228-c687-4c51-b437-088294058755",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.895133097Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.policy.v1.poddisruptionbudgets.list",
          "resource": "policy/v1/poddisruptionbudgets"
        }
      ],
      "methodName": "io.k8s.policy.v1.poddisruptionbudgets.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "policy/v1/poddisruptionbudgets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "180dd2c5-a9bd-451d-ae87-54bd24b37383",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.199274Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "180dd2c5-a9bd-451d-ae87-54bd24b37383",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.760882165Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csistoragecapacities.list",
          "resource": "storage.k8s.io/v1/csistoragecapacities"
        }
      ],
      "methodName": "io.k8s.storage.v1.csistoragecapacities.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csistoragecapacities",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3e8c60d4-cd1d-4dd7-9376-47862d7ac373",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.199279Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3e8c60d4-cd1d-4dd7-9376-47862d7ac373",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.017049139Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csinodes.list",
          "resource": "storage.k8s.io/v1/csinodes"
        }
      ],
      "methodName": "io.k8s.storage.v1.csinodes.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csinodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a5e271a5-4710-4bd3-b415-78716d5d34ba",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.200604Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a5e271a5-4710-4bd3-b415-78716d5d34ba",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.096050452Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumes.list",
          "resource": "core/v1/persistentvolumes"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumes.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f59279c3-02ad-4e8b-8fbf-073e9afb7040",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.200697Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f59279c3-02ad-4e8b-8fbf-073e9afb7040",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.220720887Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.cronjobs.list",
          "resource": "batch/v1/cronjobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.cronjobs.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/cronjobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f512c439-3aab-4f40-853d-6361b6c800fc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.201053Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f512c439-3aab-4f40-853d-6361b6c800fc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.405159079Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.statefulsets.list",
          "resource": "apps/v1/statefulsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.statefulsets.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/statefulsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d91f14a0-1638-4824-a684-35c38212c145",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.207288Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d91f14a0-1638-4824-a684-35c38212c145",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.096050452Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.216604739Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "kukks0f34s1i7",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:35.210849970Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.027473831Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.list",
          "resource": "core/v1/endpoints"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/endpoints",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e284ec82-a812-4b56-b2e4-1a45137aea8c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.212495Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e284ec82-a812-4b56-b2e4-1a45137aea8c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.428035851Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.externalsecrets.list",
          "resource": "external-secrets.io/v1beta1/externalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.externalsecrets.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/externalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "806ea6b9-b96a-4517-9e12-5503fe787846",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.213694Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "806ea6b9-b96a-4517-9e12-5503fe787846",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.824731611Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificates.list",
          "resource": "cert-manager.io/v1/certificates"
        }
      ],
      "methodName": "io.cert-manager.v1.certificates.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "194368f0-61bb-4d24-886c-de520ec50de8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.214364Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "194368f0-61bb-4d24-886c-de520ec50de8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.940482757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingressclasses.list",
          "resource": "networking.k8s.io/v1/ingressclasses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingressclasses.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingressclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2262d429-fac5-4d83-82b3-c4e8c99300bf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.214440Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2262d429-fac5-4d83-82b3-c4e8c99300bf",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.004231898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.resourcequotas.list",
          "resource": "core/v1/resourcequotas"
        }
      ],
      "methodName": "io.k8s.core.v1.resourcequotas.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/resourcequotas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7fd395aa-3b6d-4185-b9ee-32536b249e16",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.214594Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7fd395aa-3b6d-4185-b9ee-32536b249e16",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.215736703Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.autoscaling.v2.horizontalpodautoscalers.list",
          "resource": "autoscaling/v2/horizontalpodautoscalers"
        }
      ],
      "methodName": "io.k8s.autoscaling.v2.horizontalpodautoscalers.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling/v2/horizontalpodautoscalers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "144d9161-aec3-4b90-bacc-0bba2339fd87",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.216522Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "144d9161-aec3-4b90-bacc-0bba2339fd87",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.444845089Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.passwords.list",
          "resource": "generators.external-secrets.io/v1alpha1/passwords"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.passwords.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/passwords",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "acc53100-5fa2-4efa-9053-d2de46d0b9fe",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.216549Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "acc53100-5fa2-4efa-9053-d2de46d0b9fe",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.525226605Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.volumeattachments.list",
          "resource": "storage.k8s.io/v1/volumeattachments"
        }
      ],
      "methodName": "io.k8s.storage.v1.volumeattachments.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/volumeattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eeec4fcf-c1a4-4c4a-afd6-fdd2bfa3572b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.216899Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eeec4fcf-c1a4-4c4a-afd6-fdd2bfa3572b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.518091592Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.networkpolicies.list",
          "resource": "networking.k8s.io/v1/networkpolicies"
        }
      ],
      "methodName": "io.k8s.networking.v1.networkpolicies.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/networkpolicies",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5dc52a01-1ee1-41f0-bb85-3a3484004324",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.216912Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5dc52a01-1ee1-41f0-bb85-3a3484004324",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.722032607Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.namespaces.list",
          "resource": "core/v1/namespaces"
        }
      ],
      "methodName": "io.k8s.core.v1.namespaces.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cd1f92be-34bb-4ff8-a323-b1c90e96bee4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.217053Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cd1f92be-34bb-4ff8-a323-b1c90e96bee4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.020696326Z"
  },
  {
    "textPayload": "INFO:     10.170.0.24:43908 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "su9j1h0urrp01jg1",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "pod_name": "auth-proxy-5c5c7445cc-qhr9g",
        "namespace_name": "production",
        "container_name": "proxy",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.218757809Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1",
      "k8s-pod/pod-template-hash": "5c5c7445cc"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.841439181Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.warden.v1.audits.list",
          "resource": "warden.gke.io/v1/audits"
        }
      ],
      "methodName": "io.gke.warden.v1.audits.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "warden.gke.io/v1/audits",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e7301f38-27a2-4914-a9af-702771850569",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.219310Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e7301f38-27a2-4914-a9af-702771850569",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.952786898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.watch",
          "resource": "apps/v1/deployments"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/deployments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "71bdd35d-3815-4b5d-9ac4-f487b7413509",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.220695Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "71bdd35d-3815-4b5d-9ac4-f487b7413509",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.723594244Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingresses.list",
          "resource": "networking.k8s.io/v1/ingresses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingresses.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingresses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a4d78b2b-a3df-44ad-8f4b-4cfa7bdc76fc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.221070Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a4d78b2b-a3df-44ad-8f4b-4cfa7bdc76fc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.938925414Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.jobs.watch",
          "resource": "batch/v1/jobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.jobs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/jobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "83228297-fd14-4e47-9e11-bf9bd3965c34",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.221200Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "83228297-fd14-4e47-9e11-bf9bd3965c34",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.214271679Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clusterexternalsecrets.list",
          "resource": "external-secrets.io/v1beta1/clusterexternalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clusterexternalsecrets.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clusterexternalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "58f93e38-0f7a-4dcb-ae2d-df13f86ea4bd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.223498Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "58f93e38-0f7a-4dcb-ae2d-df13f86ea4bd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.834301799Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.thanosrulers.list",
          "resource": "monitoring.coreos.com/v1/thanosrulers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.thanosrulers.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/thanosrulers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a045b314-9920-4493-8d8b-1bc50abaef37",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.224972Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a045b314-9920-4493-8d8b-1bc50abaef37",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.938925414Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.podtemplates.list",
          "resource": "core/v1/podtemplates"
        }
      ],
      "methodName": "io.k8s.core.v1.podtemplates.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/podtemplates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2d0a9b00-ed05-4ba1-8234-0ba8412a2871",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.225233Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2d0a9b00-ed05-4ba1-8234-0ba8412a2871",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.318001473Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.acraccesstokens.list",
          "resource": "generators.external-secrets.io/v1alpha1/acraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.acraccesstokens.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/acraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "02292b99-edfd-46ed-8853-bb607e6d92b6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.225553Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "02292b99-edfd-46ed-8853-bb607e6d92b6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.715082021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.secretstores.list",
          "resource": "external-secrets.io/v1beta1/secretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.secretstores.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/secretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "62d0c453-db41-4135-9908-30932ef783d1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.226157Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "62d0c453-db41-4135-9908-30932ef783d1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.236875666Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.list",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9e62d4e3-b8d6-4c9e-81f5-fc3bd3baa405",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.228369Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9e62d4e3-b8d6-4c9e-81f5-fc3bd3baa405",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.511564987Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumeclaims.watch",
          "resource": "core/v1/persistentvolumeclaims"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumeclaims.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumeclaims",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3ffafa6a-9ceb-4343-9a78-c0e598044a60",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.229424Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3ffafa6a-9ceb-4343-9a78-c0e598044a60",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.323698827Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiregistration.v1.apiservices.list",
          "resource": "apiregistration.k8s.io/v1/apiservices"
        }
      ],
      "methodName": "io.k8s.apiregistration.v1.apiservices.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiregistration.k8s.io/v1/apiservices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "50cc80f6-ac3e-4812-82a6-21d6e77af93f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.229550Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "50cc80f6-ac3e-4812-82a6-21d6e77af93f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.650312847Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.clusterissuers.watch",
          "resource": "cert-manager.io/v1/clusterissuers"
        }
      ],
      "methodName": "io.cert-manager.v1.clusterissuers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/clusterissuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "36f3d2da-a46b-4efd-8b1e-898ed083c22a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.230553Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "36f3d2da-a46b-4efd-8b1e-898ed083c22a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.732953711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.46.41.44",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.240389289Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1cc2v2nf34amjn",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:35.231109401Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.117777580Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.replicationcontrollers.watch",
          "resource": "core/v1/replicationcontrollers"
        }
      ],
      "methodName": "io.k8s.core.v1.replicationcontrollers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/replicationcontrollers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0fb0c8e7-015a-4663-bb24-7f75ef8572f9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.231340Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0fb0c8e7-015a-4663-bb24-7f75ef8572f9",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.092054004Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.policy.v1.poddisruptionbudgets.watch",
          "resource": "policy/v1/poddisruptionbudgets"
        }
      ],
      "methodName": "io.k8s.policy.v1.poddisruptionbudgets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "policy/v1/poddisruptionbudgets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "437c1fa8-728e-471f-92e7-8098b8ba5fe2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.231942Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "437c1fa8-728e-471f-92e7-8098b8ba5fe2",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.424768677Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csistoragecapacities.watch",
          "resource": "storage.k8s.io/v1/csistoragecapacities"
        }
      ],
      "methodName": "io.k8s.storage.v1.csistoragecapacities.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csistoragecapacities",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ef5e53a2-f79b-4f2c-8f0a-d854e317b2ca",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.232122Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ef5e53a2-f79b-4f2c-8f0a-d854e317b2ca",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.713625105Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csinodes.watch",
          "resource": "storage.k8s.io/v1/csinodes"
        }
      ],
      "methodName": "io.k8s.storage.v1.csinodes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csinodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "20a69925-524a-48ca-a58d-d4338bd819c6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.233230Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "20a69925-524a-48ca-a58d-d4338bd819c6",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.365715313Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.persistentvolumes.watch",
          "resource": "core/v1/persistentvolumes"
        }
      ],
      "methodName": "io.k8s.core.v1.persistentvolumes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/persistentvolumes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "422d608b-6650-4da7-b7c5-9e0affabb64f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.233426Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "422d608b-6650-4da7-b7c5-9e0affabb64f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.686901510Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.batch.v1.cronjobs.watch",
          "resource": "batch/v1/cronjobs"
        }
      ],
      "methodName": "io.k8s.batch.v1.cronjobs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "batch/v1/cronjobs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b37d8fd8-9a33-49f6-bd4a-6dc48f69eff4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.233608Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b37d8fd8-9a33-49f6-bd4a-6dc48f69eff4",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.694609284Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.list",
          "resource": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "138bb6ba-f9a2-494d-a89c-62f305659e36",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.238740Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "138bb6ba-f9a2-494d-a89c-62f305659e36",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.437800362Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.list",
          "resource": "apps/v1/deployments"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/deployments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "167d7ce5-1c4b-4fbe-9689-4c9ae2d6ce3e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.240148Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "167d7ce5-1c4b-4fbe-9689-4c9ae2d6ce3e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.650312847Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.rolebindings.list",
          "resource": "rbac.authorization.k8s.io/v1/rolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.rolebindings.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/rolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1bd4841a-d282-40c2-8c49-56e5daee0a2c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.241700Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1bd4841a-d282-40c2-8c49-56e5daee0a2c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.511564987Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.statefulsets.watch",
          "resource": "apps/v1/statefulsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.statefulsets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/statefulsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "98d3c9da-eb0a-4d71-993a-fbea5134bdd4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.246034Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "98d3c9da-eb0a-4d71-993a-fbea5134bdd4",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.618145020Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingressclasses.watch",
          "resource": "networking.k8s.io/v1/ingressclasses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingressclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingressclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "23265ae2-8bce-4498-93d5-72732d545587",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.247370Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "23265ae2-8bce-4498-93d5-72732d545587",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.706379128Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.watch",
          "resource": "core/v1/endpoints"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/endpoints",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c9549d62-7e2c-4b9f-9534-aac554239a6b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.247847Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c9549d62-7e2c-4b9f-9534-aac554239a6b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.615514013Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.resourcequotas.watch",
          "resource": "core/v1/resourcequotas"
        }
      ],
      "methodName": "io.k8s.core.v1.resourcequotas.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/resourcequotas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3ed527b7-b372-40ab-ba5f-edbd4d95e47e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.248086Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3ed527b7-b372-40ab-ba5f-edbd4d95e47e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.008170924Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificates.watch",
          "resource": "cert-manager.io/v1/certificates"
        }
      ],
      "methodName": "io.cert-manager.v1.certificates.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "98e5d1d4-9ef9-4e16-95d2-114c8acfaa0d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.248162Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "98e5d1d4-9ef9-4e16-95d2-114c8acfaa0d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.092054004Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.externalsecrets.watch",
          "resource": "external-secrets.io/v1beta1/externalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.externalsecrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/externalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "919f7e26-1097-4413-bb76-6ef377ec692b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.248546Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "919f7e26-1097-4413-bb76-6ef377ec692b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.236875666Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.autoscaling.v2.horizontalpodautoscalers.watch",
          "resource": "autoscaling/v2/horizontalpodautoscalers"
        }
      ],
      "methodName": "io.k8s.autoscaling.v2.horizontalpodautoscalers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling/v2/horizontalpodautoscalers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5e466ae3-fff8-421d-b7b2-4c7f61696f1c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.249213Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5e466ae3-fff8-421d-b7b2-4c7f61696f1c",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.214271679Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.passwords.watch",
          "resource": "generators.external-secrets.io/v1alpha1/passwords"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.passwords.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/passwords",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f04d7088-1f43-4b14-9360-ca58c3029f3d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.250293Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f04d7088-1f43-4b14-9360-ca58c3029f3d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.436053951Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.networkpolicies.watch",
          "resource": "networking.k8s.io/v1/networkpolicies"
        }
      ],
      "methodName": "io.k8s.networking.v1.networkpolicies.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/networkpolicies",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "49c705d9-f043-4eba-a197-c395a98f8fe9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.250450Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "49c705d9-f043-4eba-a197-c395a98f8fe9",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.471718327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.volumeattachments.watch",
          "resource": "storage.k8s.io/v1/volumeattachments"
        }
      ],
      "methodName": "io.k8s.storage.v1.volumeattachments.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/volumeattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "50fe7b95-4b02-4e58-941c-4ba65acef05a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.250966Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "50fe7b95-4b02-4e58-941c-4ba65acef05a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.020696326Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.namespaces.watch",
          "resource": "core/v1/namespaces"
        }
      ],
      "methodName": "io.k8s.core.v1.namespaces.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "184a0f51-af6e-43d3-9e5f-2701f25c834b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.251331Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "184a0f51-af6e-43d3-9e5f-2701f25c834b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.669967398Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.scrapeconfigs.list",
          "resource": "monitoring.coreos.com/v1alpha1/scrapeconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.scrapeconfigs.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/scrapeconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6a866e6c-6753-430e-9812-c3c83209c1bd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.253125Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6a866e6c-6753-430e-9812-c3c83209c1bd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.149136606Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.warden.v1.audits.watch",
          "resource": "warden.gke.io/v1/audits"
        }
      ],
      "methodName": "io.gke.warden.v1.audits.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "warden.gke.io/v1/audits",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dcbf940d-eab9-4654-af92-735f910c9ef5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.253979Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dcbf940d-eab9-4654-af92-735f910c9ef5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.824731611Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clusterexternalsecrets.watch",
          "resource": "external-secrets.io/v1beta1/clusterexternalsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clusterexternalsecrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clusterexternalsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "467917a2-bc42-4af1-a7c6-b918bdd8fd84",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.256211Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "467917a2-bc42-4af1-a7c6-b918bdd8fd84",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.223428243Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.storageclasses.list",
          "resource": "storage.k8s.io/v1/storageclasses"
        }
      ],
      "methodName": "io.k8s.storage.v1.storageclasses.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/storageclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "465eb469-6803-4d84-ac68-cfe34f6943ce",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.256226Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "465eb469-6803-4d84-ac68-cfe34f6943ce",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.008170924Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.certificates.v1.certificatesigningrequests.list",
          "resource": "certificates.k8s.io/v1/certificatesigningrequests"
        }
      ],
      "methodName": "io.k8s.certificates.v1.certificatesigningrequests.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "certificates.k8s.io/v1/certificatesigningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c1ec391e-8644-4c23-9329-4e93e5ad4872",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.257129Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c1ec391e-8644-4c23-9329-4e93e5ad4872",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.712862180Z"
  },
  {
    "insertId": "4scyul8wwv98774k",
    "jsonPayload": {
      "text": "OpenAI returned a truncated response. Consider increasing the max_tokens.\n",
      "record": {
        "line": 124,
        "extra": {
          "user": {
            "tier_end_date": 1725287318000,
            "organization_id": null,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_level": 10,
            "allowed": true,
            "email_verified": true,
            "baseUrl": null,
            "firebase": {
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "exp": 1724261737,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "auth_time": 1724161599,
            "codiumate": null,
            "aud": "codium-dev-360812",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "iat": 1724258137,
            "name": "Luiz F",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email": "lf0448504@gmail.com",
            "optout": false
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "url_path": "/v2/code/completion",
          "request_id": "4c700c42-dfd3-44cc-bcae-84714e00cbcb",
          "data": {
            "suffix": null,
            "presence_penalty": 0,
            "frequency_penalty": 0,
            "n": 1,
            "top_p": 0.9,
            "max_tokens": 75,
            "metadata": {
              "project_name": "code/completion",
              "run_name": "CodeCompletion",
              "deployment": "gpt-3.5-turbo-instruct",
              "caching_groups": null,
              "api_base": null,
              "hidden_params": "HiddenParams(original_response='{\"id\": \"cmpl-9yiesq3BUFotyYBXTPHSdo1c5xVzO\", \"choices\": [{\"finish_reason\": \"length\", \"index\": 0, \"logprobs\": null, \"text\": \"deposit->responsavel]] }}</h3>\\\\n    <table class=\\\\\"table table-bordered\\\\\">\\\\n        <thead>\\\\n            <tr>\\\\n                <th>Modelo Nome</th>\\\\n                    <th>Modelo ID</th>\\\\n                    <th>Quantidade</th>\\\\n                </tr>\\\\n            </thead>\\\\n            <tbody>\\\\n                @if(isset($devices[$deposit\"}], \"created\": 1724258374, \"model\": \"gpt-3.5-turbo-instruct\", \"object\": \"text_completion\", \"system_fingerprint\": null, \"usage\": {\"completion_tokens\": 75, \"prompt_tokens\": 3607, \"total_tokens\": 3682}}', model_id='6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7', api_base=None, litellm_call_id='74ea4a76-c768-4632-b835-866e5a5b3f76', optional_params={'temperature': 0.1, 'top_p': 0.9, 'n': 1, 'stop': ['\\n\\n'], 'max_tokens': 75, 'presence_penalty': 0, 'frequency_penalty': 0, 'max_retries': 0, 'extra_body': {}}, response_cost=0.0055605)",
              "tags": [
                "4c700c42-dfd3-44cc-bcae-84714e00cbcb"
              ],
              "model_group": "code-completion",
              "model_info": {
                "db_model": false,
                "id": "6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7"
              }
            },
            "temperature": 0.1,
            "stop": [
              "\n\n"
            ]
          }
        },
        "function": "generate",
        "name": "ai.litellm.litellm_infer_engine",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "message": "OpenAI returned a truncated response. Consider increasing the max_tokens.",
        "elapsed": {
          "repr": "1 day, 8:59:56.744018",
          "seconds": 118796.744018
        },
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "exception": null,
        "module": "litellm_infer_engine",
        "level": {
          "icon": "⚠️",
          "no": 30,
          "name": "WARNING"
        },
        "time": {
          "repr": "2024-08-21 16:39:35.256973+00:00",
          "timestamp": 1724258375.256973
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.257336195Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.460604438Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.operatorconfigs.list",
          "resource": "monitoring.googleapis.com/v1/operatorconfigs"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.operatorconfigs.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/operatorconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "490de1b2-18e5-4461-93e1-6143c0c13788",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.257482Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "490de1b2-18e5-4461-93e1-6143c0c13788",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.415839086Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.google.cloud.v1.backendconfigs.list",
          "resource": "cloud.google.com/v1/backendconfigs"
        }
      ],
      "methodName": "com.google.cloud.v1.backendconfigs.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cloud.google.com/v1/backendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d6b069ae-f8c3-4276-83db-f249d672dc18",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.257600Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d6b069ae-f8c3-4276-83db-f249d672dc18",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.436408394Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.thanosrulers.watch",
          "resource": "monitoring.coreos.com/v1/thanosrulers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.thanosrulers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/thanosrulers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "447eca10-c734-4ade-a4fb-d2b2ead8a14d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.258300Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "447eca10-c734-4ade-a4fb-d2b2ead8a14d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.530977224Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingresses.watch",
          "resource": "networking.k8s.io/v1/ingresses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingresses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingresses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ff4b3298-6273-49f7-ab72-cb233beb5e39",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.258473Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ff4b3298-6273-49f7-ab72-cb233beb5e39",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.706379128Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.podtemplates.watch",
          "resource": "core/v1/podtemplates"
        }
      ],
      "methodName": "io.k8s.core.v1.podtemplates.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/podtemplates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3e9a1530-72ca-4d6f-80d8-d4b533dd9bf9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.258578Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3e9a1530-72ca-4d6f-80d8-d4b533dd9bf9",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.220720887Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "aeec6dc2-5953-451c-9dac-3134a1bea512",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.259523Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "aeec6dc2-5953-451c-9dac-3134a1bea512",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913135066Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.acraccesstokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/acraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.acraccesstokens.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/acraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1ba11da8-eaa7-46e4-aa6c-51a035a6e680",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.261007Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1ba11da8-eaa7-46e4-aa6c-51a035a6e680",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.834301799Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.secretstores.watch",
          "resource": "external-secrets.io/v1beta1/secretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.secretstores.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/secretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eb3d5883-7878-4550-bf4a-8225c1c4bbc5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.261178Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eb3d5883-7878-4550-bf4a-8225c1c4bbc5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.318001473Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b2d75e48-7c93-40f6-8ab2-485c0c0472fe",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.262817Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b2d75e48-7c93-40f6-8ab2-485c0c0472fe",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.816928145Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiregistration.v1.apiservices.watch",
          "resource": "apiregistration.k8s.io/v1/apiservices"
        }
      ],
      "methodName": "io.k8s.apiregistration.v1.apiservices.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiregistration.k8s.io/v1/apiservices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b464dd3d-4743-401e-9587-34a4fae2cab2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.265447Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b464dd3d-4743-401e-9587-34a4fae2cab2",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.093691841Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "960b7766-bdb5-4bc2-9349-833729f10307",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.266331Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "960b7766-bdb5-4bc2-9349-833729f10307",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.771704198Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.roles.list",
          "resource": "rbac.authorization.k8s.io/v1/roles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.roles.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/roles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d8074ad4-edf6-4b6f-88ec-235084eda432",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.266331Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d8074ad4-edf6-4b6f-88ec-235084eda432",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.322059244Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "11f9d13b-28e2-42ae-9a18-6c7976f1887c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.266635Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "11f9d13b-28e2-42ae-9a18-6c7976f1887c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.207487856Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.serviceattachments.list",
          "resource": "networking.gke.io/v1/serviceattachments"
        }
      ],
      "methodName": "io.gke.networking.v1.serviceattachments.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/serviceattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7c7709b-a044-4857-b4aa-3c9568d64904",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.269596Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7c7709b-a044-4857-b4aa-3c9568d64904",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.382214426Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1alpha1.pushsecrets.list",
          "resource": "external-secrets.io/v1alpha1/pushsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1alpha1.pushsecrets.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1alpha1/pushsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "07abf354-c7d9-4bfe-b32f-5d414708533b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.271044Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "07abf354-c7d9-4bfe-b32f-5d414708533b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.986029634Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.list",
          "resource": "core/v1/nodes"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/nodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "22bb3987-aa13-4b2f-85e0-d987ab4f5f37",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.272821Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "22bb3987-aa13-4b2f-85e0-d987ab4f5f37",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.223428243Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "db992c50-d971-46a1-9cb1-14a98fe19a85",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.273970Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "db992c50-d971-46a1-9cb1-14a98fe19a85",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.395647079Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.daemonsets.list",
          "resource": "apps/v1/daemonsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.daemonsets.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/daemonsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "af01dd37-a802-4759-a8a9-37a5f97be196",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.276690Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "af01dd37-a802-4759-a8a9-37a5f97be196",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.894919115Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.rolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/rolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.rolebindings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/rolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "032de798-9a10-475f-a1e0-5e31cf59d4d8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.277917Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "032de798-9a10-475f-a1e0-5e31cf59d4d8",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.547357192Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.list",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "24c29161-0b7c-4296-9e52-eb22e42493f6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.279819Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "24c29161-0b7c-4296-9e52-eb22e42493f6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.952786898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.orders.list",
          "resource": "acme.cert-manager.io/v1/orders"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.orders.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/orders",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3bdf2469-a5aa-4f9e-be58-2a4f36283d9e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.279847Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3bdf2469-a5aa-4f9e-be58-2a4f36283d9e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.226601605Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.list",
          "resource": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses"
        }
      ],
      "methodName": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "612f221c-1124-4826-ac88-4dc6bfb92e65",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.280996Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "612f221c-1124-4826-ac88-4dc6bfb92e65",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.458788226Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.autoscaling.internal.v1.capacityrequests.list",
          "resource": "internal.autoscaling.gke.io/v1/capacityrequests"
        }
      ],
      "methodName": "io.gke.autoscaling.internal.v1.capacityrequests.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "internal.autoscaling.gke.io/v1/capacityrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "20eb007f-de57-49f7-a66d-ebb8da9409aa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.281058Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "20eb007f-de57-49f7-a66d-ebb8da9409aa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.532973443Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.fakes.list",
          "resource": "generators.external-secrets.io/v1alpha1/fakes"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.fakes.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/fakes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9efb5a6c-0c25-4cef-9e15-99cc5a03cd79",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.281064Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9efb5a6c-0c25-4cef-9e15-99cc5a03cd79",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.359989594Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.limitranges.list",
          "resource": "core/v1/limitranges"
        }
      ],
      "methodName": "io.k8s.core.v1.limitranges.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/limitranges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c2dc3809-7788-4d7a-950c-9f25a8a3d9ae",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.281525Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c2dc3809-7788-4d7a-950c-9f25a8a3d9ae",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.894919115Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.challenges.list",
          "resource": "acme.cert-manager.io/v1/challenges"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.challenges.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/challenges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1f512bea-b126-462b-8bd2-c2d3ad2e1abc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.281585Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1f512bea-b126-462b-8bd2-c2d3ad2e1abc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913227981Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterrolebindings.list",
          "resource": "rbac.authorization.k8s.io/v1/clusterrolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterrolebindings.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterrolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a4feb559-cb62-475d-b9c4-ab780f957d31",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.284601Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a4feb559-cb62-475d-b9c4-ab780f957d31",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.471073781Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.list",
          "resource": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6b46f8a9-d75e-44ee-bcf4-37b27cf67d6f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.285080Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6b46f8a9-d75e-44ee-bcf4-37b27cf67d6f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.437800362Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.scrapeconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/scrapeconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.scrapeconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/scrapeconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "264b4d43-6fef-4465-9c48-219d2f8667ca",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.286077Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "264b4d43-6fef-4465-9c48-219d2f8667ca",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.760882165Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedworkloads.list",
          "resource": "auto.gke.io/v1/allowlistedworkloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedworkloads.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedworkloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0944ea68-a37e-4c4f-a109-030695df3c50",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.286448Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0944ea68-a37e-4c4f-a109-030695df3c50",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.952786898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.nodemanagement.v1alpha1.updateinfos.list",
          "resource": "nodemanagement.gke.io/v1alpha1/updateinfos"
        }
      ],
      "methodName": "io.gke.nodemanagement.v1alpha1.updateinfos.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "nodemanagement.gke.io/v1alpha1/updateinfos",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f6a2001b-ed81-4d5e-89e0-4ddde4c891c3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.286543Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f6a2001b-ed81-4d5e-89e0-4ddde4c891c3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.518091592Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.watch",
          "resource": "apps/v1/deployments"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/deployments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1324d494-6fcc-4786-9e26-8351e4073d73",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.287560Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1324d494-6fcc-4786-9e26-8351e4073d73",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.004231898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.gcraccesstokens.list",
          "resource": "generators.external-secrets.io/v1alpha1/gcraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.gcraccesstokens.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/gcraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "27e43f99-608c-407b-9fbd-1223b81e63bf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.288110Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "27e43f99-608c-407b-9fbd-1223b81e63bf",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.938925414Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.46.41.44",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.293738813Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "kawkewf34q826",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.288435094Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.908671909Z"
  },
  {
    "insertId": "n9ykh5bxmekv7ii1",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "time": {
          "timestamp": 1724258375.288092,
          "repr": "2024-08-21 16:39:35.288092+00:00"
        },
        "line": 131,
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "extra": {
          "completion": "deposit->responsavel]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "user": {
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email": "lf0448504@gmail.com",
            "name": "Luiz F",
            "optout": false,
            "aud": "codium-dev-360812",
            "organization_id": null,
            "tier_level": 10,
            "auth_time": 1724161599,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              }
            },
            "exp": 1724261737,
            "tier_end_date": 1725287318000,
            "codiumate": null,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "baseUrl": null,
            "email_verified": true,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "iat": 1724258137,
            "allowed": true
          },
          "request_id": "4c700c42-dfd3-44cc-bcae-84714e00cbcb",
          "model": "gpt-3.5-turbo-instruct",
          "openai_request_id": "cmpl-9yiesq3BUFotyYBXTPHSdo1c5xVzO",
          "url_path": "/v2/code/completion",
          "openai_response": {
            "created": 1724258374,
            "object": "text_completion",
            "choices": [
              "TextChoices(finish_reason='length', index=0, text='deposit->responsavel]] }}</h3>\\n    <table class=\"table table-bordered\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit', logprobs=None)"
            ],
            "id": "cmpl-9yiesq3BUFotyYBXTPHSdo1c5xVzO",
            "usage": {
              "completion_tokens": 75,
              "total_tokens": 3682,
              "prompt_tokens": 3607
            },
            "model": "gpt-3.5-turbo-instruct"
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$"
        },
        "exception": null,
        "function": "generate",
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "level": {
          "icon": "🐞",
          "no": 10,
          "name": "DEBUG"
        },
        "elapsed": {
          "repr": "1 day, 8:59:56.775137",
          "seconds": 118796.775137
        },
        "message": "OpenAI Response",
        "module": "litellm_infer_engine",
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "name": "ai.litellm.litellm_infer_engine"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.288641522Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.460604438Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.storageclasses.watch",
          "resource": "storage.k8s.io/v1/storageclasses"
        }
      ],
      "methodName": "io.k8s.storage.v1.storageclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/storageclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bc094d61-9726-415a-b11d-9a980a6b121b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.288924Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bc094d61-9726-415a-b11d-9a980a6b121b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.236875666Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.podmonitors.list",
          "resource": "monitoring.coreos.com/v1/podmonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.podmonitors.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/podmonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5aa7362c-07d7-41aa-9ed7-a6817bedcf87",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.290017Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5aa7362c-07d7-41aa-9ed7-a6817bedcf87",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.403519863Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.prometheusagents.list",
          "resource": "monitoring.coreos.com/v1alpha1/prometheusagents"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.prometheusagents.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/prometheusagents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9afe9312-5513-4961-a841-8e906f03a9ab",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.290024Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9afe9312-5513-4961-a841-8e906f03a9ab",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.824731611Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedv2workloads.list",
          "resource": "auto.gke.io/v1/allowlistedv2workloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedv2workloads.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedv2workloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ceefa464-d25d-4e11-b27d-77462594e836",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.290318Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ceefa464-d25d-4e11-b27d-77462594e836",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.218217793Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.certificates.v1.certificatesigningrequests.watch",
          "resource": "certificates.k8s.io/v1/certificatesigningrequests"
        }
      ],
      "methodName": "io.k8s.certificates.v1.certificatesigningrequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "certificates.k8s.io/v1/certificatesigningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6838d5cc-cda9-4da8-b618-6b7686a33ee3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.290483Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6838d5cc-cda9-4da8-b618-6b7686a33ee3",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.603937988Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.google.cloud.v1.backendconfigs.watch",
          "resource": "cloud.google.com/v1/backendconfigs"
        }
      ],
      "methodName": "com.google.cloud.v1.backendconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cloud.google.com/v1/backendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cbb10b9c-c5bf-4ec1-afeb-2d9ade9755dc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.290964Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cbb10b9c-c5bf-4ec1-afeb-2d9ade9755dc",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.323713011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.operatorconfigs.watch",
          "resource": "monitoring.googleapis.com/v1/operatorconfigs"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.operatorconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/operatorconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b7935531-ee72-4691-9324-4ea5878b6c45",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.291064Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b7935531-ee72-4691-9324-4ea5878b6c45",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913227981Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.networkpolicies.list",
          "resource": "networking.k8s.io/v1/networkpolicies"
        }
      ],
      "methodName": "io.k8s.networking.v1.networkpolicies.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/networkpolicies",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dd985ea3-d797-4a1d-aacb-f89ded08ca27",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.295975Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dd985ea3-d797-4a1d-aacb-f89ded08ca27",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913135066Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.list",
          "resource": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses"
        }
      ],
      "methodName": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "40e42809-23d9-427f-82e2-44d0b9b6e108",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.296692Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "40e42809-23d9-427f-82e2-44d0b9b6e108",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.607188699Z"
  },
  {
    "insertId": "s1frfne1s0l0",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "remoteIp": "154.161.177.136",
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "priority": 500,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 9000,
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.15.3",
      "latency": "0.275086s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.297101Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/540e1ec69582292f4d401ecb89a130ea",
    "receiveTimestamp": "2024-08-21T16:39:36.031092685Z",
    "spanId": "e940b8222ab283b6"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.networkpolicies.watch",
          "resource": "networking.k8s.io/v1/networkpolicies"
        }
      ],
      "methodName": "io.k8s.networking.v1.networkpolicies.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/networkpolicies",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b2b7d93f-6f74-49fe-9415-516e3df0e135",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.297706Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b2b7d93f-6f74-49fe-9415-516e3df0e135",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.710275379Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.watch",
          "resource": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses"
        }
      ],
      "methodName": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e1bdcb46-17d3-4072-9715-1140a9dccdd7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.298344Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e1bdcb46-17d3-4072-9715-1140a9dccdd7",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.607188699Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.serviceattachments.watch",
          "resource": "networking.gke.io/v1/serviceattachments"
        }
      ],
      "methodName": "io.gke.networking.v1.serviceattachments.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/serviceattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "00092420-de1c-4646-adb8-4b88448825d2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.303886Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "00092420-de1c-4646-adb8-4b88448825d2",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.327027625Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1alpha1.pushsecrets.watch",
          "resource": "external-secrets.io/v1alpha1/pushsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1alpha1.pushsecrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1alpha1/pushsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "725c9b2b-cd87-4a7b-8de2-4912c48212e3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.305270Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "725c9b2b-cd87-4a7b-8de2-4912c48212e3",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.530977224Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.roles.watch",
          "resource": "rbac.authorization.k8s.io/v1/roles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.roles.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/roles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c23341f9-3a6b-40d9-9ee5-53f0af60180c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.306056Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c23341f9-3a6b-40d9-9ee5-53f0af60180c",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.149136606Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csinodes.list",
          "resource": "storage.k8s.io/v1/csinodes"
        }
      ],
      "methodName": "io.k8s.storage.v1.csinodes.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csinodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "925cf7cc-12cb-4012-b5ea-b50467fc5932",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.306659Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "925cf7cc-12cb-4012-b5ea-b50467fc5932",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.821055846Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.watch",
          "resource": "core/v1/nodes"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/nodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b886f439-fdae-4209-9249-a2c8410d65f8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.308882Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b886f439-fdae-4209-9249-a2c8410d65f8",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.428035851Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterroles.list",
          "resource": "rbac.authorization.k8s.io/v1/clusterroles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterroles.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterroles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8a6c9c0a-a68c-4807-8e36-e88db898c129",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.308973Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8a6c9c0a-a68c-4807-8e36-e88db898c129",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.436408394Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csinodes.watch",
          "resource": "storage.k8s.io/v1/csinodes"
        }
      ],
      "methodName": "io.k8s.storage.v1.csinodes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csinodes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "78fae7f0-dea5-4a6e-b24f-42224e697b26",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.309736Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "78fae7f0-dea5-4a6e-b24f-42224e697b26",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.702758462Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.certificates.v1.certificatesigningrequests.list",
          "resource": "certificates.k8s.io/v1/certificatesigningrequests"
        }
      ],
      "methodName": "io.k8s.certificates.v1.certificatesigningrequests.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "certificates.k8s.io/v1/certificatesigningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "05528a30-93b7-4ed7-a318-47c55357ef28",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.310527Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "05528a30-93b7-4ed7-a318-47c55357ef28",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.passwords.list",
          "resource": "generators.external-secrets.io/v1alpha1/passwords"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.passwords.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/passwords",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ed817888-7d26-4660-80ea-f53b89f44d79",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.311665Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ed817888-7d26-4660-80ea-f53b89f44d79",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209756429Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.certificates.v1.certificatesigningrequests.watch",
          "resource": "certificates.k8s.io/v1/certificatesigningrequests"
        }
      ],
      "methodName": "io.k8s.certificates.v1.certificatesigningrequests.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "certificates.k8s.io/v1/certificatesigningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "44ad0d7c-3b4b-45db-9b1f-ac4b946eb81e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.311945Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "44ad0d7c-3b4b-45db-9b1f-ac4b946eb81e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.605473486Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.list",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotcontents"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotcontents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ee792dda-4ece-4044-8d50-abc668b9c3d5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.312130Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ee792dda-4ece-4044-8d50-abc668b9c3d5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.607188699Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.passwords.watch",
          "resource": "generators.external-secrets.io/v1alpha1/passwords"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.passwords.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/passwords",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "76fe47e5-94f8-44e5-85c3-641820b22691",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.313303Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "76fe47e5-94f8-44e5-85c3-641820b22691",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.811396520Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.alertmanagers.list",
          "resource": "monitoring.coreos.com/v1/alertmanagers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.alertmanagers.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/alertmanagers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b132aab6-9175-4474-943d-38da7106a2a3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.314199Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b132aab6-9175-4474-943d-38da7106a2a3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.653144199Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.networks.list",
          "resource": "networking.gke.io/v1/networks"
        }
      ],
      "methodName": "io.gke.networking.v1.networks.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/networks",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "17e9e1b7-6cd1-446b-b9a7-f1d0c30bcf63",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.314486Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "17e9e1b7-6cd1-446b-b9a7-f1d0c30bcf63",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.676590341Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.podmonitorings.list",
          "resource": "monitoring.googleapis.com/v1/podmonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.podmonitorings.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/podmonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a98f8b23-9f69-4568-87c2-02836ac0561c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.314657Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a98f8b23-9f69-4568-87c2-02836ac0561c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.839357376Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.hub.v1.memberships.list",
          "resource": "hub.gke.io/v1/memberships"
        }
      ],
      "methodName": "io.gke.hub.v1.memberships.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "hub.gke.io/v1/memberships",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c58c0733-65d2-4f69-ab3c-1966ee04ff85",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.314763Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c58c0733-65d2-4f69-ab3c-1966ee04ff85",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.853127659Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotcontents"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotcontents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e4657fb2-9d6b-4de3-8cee-e05ae977bfca",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.314975Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e4657fb2-9d6b-4de3-8cee-e05ae977bfca",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.fakes.watch",
          "resource": "generators.external-secrets.io/v1alpha1/fakes"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.fakes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/fakes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d8a7a1e7-6004-4238-a8a4-73ca44929090",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.315194Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d8a7a1e7-6004-4238-a8a4-73ca44929090",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.547357192Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.challenges.watch",
          "resource": "acme.cert-manager.io/v1/challenges"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.challenges.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/challenges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "95bd4eb8-259b-482f-9328-ce9a4f5be826",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.315445Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "95bd4eb8-259b-482f-9328-ce9a4f5be826",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.986029634Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.watch",
          "resource": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses"
        }
      ],
      "methodName": "com.googleapis.containerthreatdetection.v1.containerwatcherstatuses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "containerthreatdetection.googleapis.com/v1/containerwatcherstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3a14197a-47d9-41c1-a14b-08c170fa6aec",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.315455Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3a14197a-47d9-41c1-a14b-08c170fa6aec",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.269804841Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.orders.watch",
          "resource": "acme.cert-manager.io/v1/orders"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.orders.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/orders",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "95e44e3b-fdec-48e0-b9a1-65b1a74b47e5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.315667Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "95e44e3b-fdec-48e0-b9a1-65b1a74b47e5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.760882165Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
          "resource": "internal.autoscaling.gke.io/v1/capacityrequests"
        }
      ],
      "methodName": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "internal.autoscaling.gke.io/v1/capacityrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a6db3a3a-563c-4f7e-ba33-c4b8b39548fd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.315969Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a6db3a3a-563c-4f7e-ba33-c4b8b39548fd",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.428035851Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.limitranges.watch",
          "resource": "core/v1/limitranges"
        }
      ],
      "methodName": "io.k8s.core.v1.limitranges.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/limitranges",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3a10a639-26ef-40f2-82f8-19f3068f218f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.316340Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3a10a639-26ef-40f2-82f8-19f3068f218f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.614997837Z"
  },
  {
    "insertId": "45g7xfszy451von2",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:35.315874+00:00",
          "timestamp": 1724258375.315874
        },
        "module": "inference_utils",
        "message": "Prompts and results v2",
        "line": 1112,
        "exception": null,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "function": "process",
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "elapsed": {
          "seconds": 118796.802919,
          "repr": "1 day, 8:59:56.802919"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "extra": {
          "user": {
            "optout": false,
            "tier_level": 10,
            "email": "lf0448504@gmail.com",
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_end_date": 1725287318000,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "codiumate": null,
            "email_verified": true,
            "aud": "codium-dev-360812",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "iat": 1724258137,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "name": "Luiz F",
            "firebase": {
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "exp": 1724261737,
            "organization_id": null,
            "baseUrl": null,
            "auth_time": 1724161599,
            "allowed": true
          },
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "request_id": "4c700c42-dfd3-44cc-bcae-84714e00cbcb",
          "url_path": "/v2/code/completion",
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"deposit->responsavel]] }}</h3>\\n    <table class=\\\"table table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "inference_steps": {
              "step_01_CodeCompletion": {
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$",
                "04_end_time": "2024-08-21 16:39:35.315795",
                "02_completion": "deposit->responsavel]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit",
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:33.925388"
              }
            },
            "url_path": "/v2/code/completion",
            "user_input": {
              "context_mode": "pre_pr",
              "max_repo_context": 5,
              "language": "blade",
              "user_data": "user_id=None installation_id='d9512a22-64ab-4187-87de-bc5e6405f7d3' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "context": [],
              "reference_snippet_messages": [
                {
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:",
                  "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty"
                },
                {
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "type": "Clipboard"
                },
                {
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "type": "Clipboard"
                },
                {
                  "type": "Clipboard",
                  "file_name": "Codiumate chat",
                  "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo"
                },
                {
                  "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                  "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                  "type": "File"
                }
              ],
              "relative_file_path": "resources/views/dashboards/list.blade.php",
              "is_multiline": false,
              "configuration": {},
              "remote_context": [],
              "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
              "is_file_diff": false,
              "extra_instructions": "",
              "file_diff_content": "",
              "repo_context": [],
              "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$",
              "max_remote_context": 5,
              "user_context": [],
              "task": ""
            }
          }
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:35.316582197Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.460604438Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6855f529-a9c0-4e40-b4c8-6107d4499c65",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.317496Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6855f529-a9c0-4e40-b4c8-6107d4499c65",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.760882165Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedworkloads.watch",
          "resource": "auto.gke.io/v1/allowlistedworkloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedworkloads.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedworkloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "83b6ec3f-9c96-4d28-96d1-7feef293105a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.318856Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "83b6ec3f-9c96-4d28-96d1-7feef293105a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.220720887Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.nodemanagement.v1alpha1.updateinfos.watch",
          "resource": "nodemanagement.gke.io/v1alpha1/updateinfos"
        }
      ],
      "methodName": "io.gke.nodemanagement.v1alpha1.updateinfos.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "nodemanagement.gke.io/v1alpha1/updateinfos",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72a688a2-a620-4951-b49b-4f43226b45da",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.319507Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72a688a2-a620-4951-b49b-4f43226b45da",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.830923970Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.gcraccesstokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/gcraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.gcraccesstokens.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/gcraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5e7dfe41-6d21-40c8-a421-1043ce771aaf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.320418Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5e7dfe41-6d21-40c8-a421-1043ce771aaf",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.588188827Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.podmonitors.watch",
          "resource": "monitoring.coreos.com/v1/podmonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.podmonitors.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/podmonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b8bb5457-2d6c-44b6-adcf-59e6e0c4ee8a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.322490Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b8bb5457-2d6c-44b6-adcf-59e6e0c4ee8a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.149136606Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.prometheusagents.watch",
          "resource": "monitoring.coreos.com/v1alpha1/prometheusagents"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.prometheusagents.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/prometheusagents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "55bf63be-fab0-4330-a91e-133cca288655",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.323841Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "55bf63be-fab0-4330-a91e-133cca288655",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.093691841Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedv2workloads.watch",
          "resource": "auto.gke.io/v1/allowlistedv2workloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedv2workloads.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedv2workloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "842dc052-f5d5-4cb3-8d51-1abe535c65e1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.323912Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "842dc052-f5d5-4cb3-8d51-1abe535c65e1",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.776681868Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterrolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterrolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b51000da-85ee-4a80-9a08-9df79a6ea130",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.324690Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b51000da-85ee-4a80-9a08-9df79a6ea130",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.585103569Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "44b60795-f46d-4b92-b465-992403052e3b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.328855Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "44b60795-f46d-4b92-b465-992403052e3b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.617824637Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.daemonsets.watch",
          "resource": "apps/v1/daemonsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.daemonsets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/daemonsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c305bcdb-7b1f-4162-8650-e99bf96f250a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.340144Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c305bcdb-7b1f-4162-8650-e99bf96f250a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.894919115Z"
  },
  {
    "insertId": "sqde8co1zo04wi0a",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "line": 37,
        "time": {
          "timestamp": 1724258375.344575,
          "repr": "2024-08-21 16:39:35.344575+00:00"
        },
        "message": "Request handled",
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "function": "dispatch",
        "elapsed": {
          "repr": "1 day, 8:59:56.831620",
          "seconds": 118796.83162
        },
        "name": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "exception": null,
        "module": "app",
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "extra": {
          "status_code": 200,
          "request_id": "4c700c42-dfd3-44cc-bcae-84714e00cbcb",
          "source_host": "177.69.243.97",
          "url": "https://api.codium.ai/v2/code/completion",
          "on_prem_log": true,
          "method": "POST"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.344868689Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:36.460604438Z"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:35Z\" level=info msg=\"Loading TLS configuration from secret argo-cd/argocd-server-tls\"",
    "insertId": "kpmowlb7tmgc7rom",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "argo-cd-argocd-server-6f6cd8d56d-pwptr",
        "cluster_name": "production-cluster",
        "namespace_name": "argo-cd",
        "container_name": "server",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.351452750Z",
    "severity": "ERROR",
    "labels": {
      "k8s-pod/app_kubernetes_io/name": "argocd-server",
      "k8s-pod/app_kubernetes_io/version": "v2.10.5",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "k8s-pod/app_kubernetes_io/component": "server",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "6f6cd8d56d",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:36.419760046Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csistoragecapacities.list",
          "resource": "storage.k8s.io/v1/csistoragecapacities"
        }
      ],
      "methodName": "io.k8s.storage.v1.csistoragecapacities.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csistoragecapacities",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "178228d1-547f-45fb-ac57-600979e7c43f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.355447Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "178228d1-547f-45fb-ac57-600979e7c43f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.817554627Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.watch",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2c7c8983-ef36-47e3-a885-7ea4716ea31c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.357208Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2c7c8983-ef36-47e3-a885-7ea4716ea31c",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.732953711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csistoragecapacities.watch",
          "resource": "storage.k8s.io/v1/csistoragecapacities"
        }
      ],
      "methodName": "io.k8s.storage.v1.csistoragecapacities.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csistoragecapacities",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3be12e39-83e2-4e61-a1a6-e87a3c2a9f7e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.357358Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3be12e39-83e2-4e61-a1a6-e87a3c2a9f7e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.605473486Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.networks.watch",
          "resource": "networking.gke.io/v1/networks"
        }
      ],
      "methodName": "io.gke.networking.v1.networks.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/networks",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cece41c5-407b-4f8e-8423-97fe011acb00",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.358024Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cece41c5-407b-4f8e-8423-97fe011acb00",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.588188827Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.hub.v1.memberships.watch",
          "resource": "hub.gke.io/v1/memberships"
        }
      ],
      "methodName": "io.gke.hub.v1.memberships.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "hub.gke.io/v1/memberships",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e25ece39-451e-4968-935c-ac988a2da85a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.358024Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e25ece39-451e-4968-935c-ac988a2da85a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.776681868Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.podmonitorings.watch",
          "resource": "monitoring.googleapis.com/v1/podmonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.podmonitorings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/podmonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "550244e0-5d18-4cef-8cc0-0254a507b256",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.358364Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "550244e0-5d18-4cef-8cc0-0254a507b256",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.771704198Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.alertmanagers.watch",
          "resource": "monitoring.coreos.com/v1/alertmanagers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.alertmanagers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/alertmanagers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "963c32c1-f5f2-4cb9-8a28-9a76d8fdd010",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.358830Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "963c32c1-f5f2-4cb9-8a28-9a76d8fdd010",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.735273901Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusterpodmonitorings.list",
          "resource": "monitoring.googleapis.com/v1/clusterpodmonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusterpodmonitorings.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusterpodmonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fc7bdea3-0640-4a64-80ab-e7b22844dd10",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.360077Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fc7bdea3-0640-4a64-80ab-e7b22844dd10",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.223428243Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c8b2ed66-2cf4-440f-96c6-cce8650cd986",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.360200Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c8b2ed66-2cf4-440f-96c6-cce8650cd986",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.818497303Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshots.list",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshots"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshots.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshots",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e5db1291-c609-4f71-875c-df9d8a70c5cb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.363571Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e5db1291-c609-4f71-875c-df9d8a70c5cb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.894919115Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kube-scheduler",
              "operation": "Update",
              "time": "2024-08-21T16:39:35Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "19951b03-9e12-40a7-a030-de337b59759f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.363735Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "19951b03-9e12-40a7-a030-de337b59759f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.003957296Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.globalrules.list",
          "resource": "monitoring.googleapis.com/v1/globalrules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.globalrules.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/globalrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ce01471f-7f97-41d1-8dde-0f07a0e2321a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.363891Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ce01471f-7f97-41d1-8dde-0f07a0e2321a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.511564987Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.statefulsets.list",
          "resource": "apps/v1/statefulsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.statefulsets.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/statefulsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8207e314-1132-42ed-aabb-c872def266de",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.364421Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8207e314-1132-42ed-aabb-c872def266de",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.906110680Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.x-k8s.autoscaling.v1beta1.provisioningrequests.list",
          "resource": "autoscaling.x-k8s.io/v1beta1/provisioningrequests"
        }
      ],
      "methodName": "io.x-k8s.autoscaling.v1beta1.provisioningrequests.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling.x-k8s.io/v1beta1/provisioningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3454da46-ef0d-44b1-91db-a0bbe9178ab8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.365623Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3454da46-ef0d-44b1-91db-a0bbe9178ab8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.727722301Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.fakes.list",
          "resource": "generators.external-secrets.io/v1alpha1/fakes"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.fakes.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/fakes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7c052a38-3b30-4279-9d76-712dd6f5f215",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.365843Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7c052a38-3b30-4279-9d76-712dd6f5f215",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.volumeattachments.list",
          "resource": "storage.k8s.io/v1/volumeattachments"
        }
      ],
      "methodName": "io.k8s.storage.v1.volumeattachments.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/volumeattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e6fc98c1-2fb2-457e-b434-acdc8cb5333f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.366649Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e6fc98c1-2fb2-457e-b434-acdc8cb5333f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209817616Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusternodemonitorings.list",
          "resource": "monitoring.googleapis.com/v1/clusternodemonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusternodemonitorings.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusternodemonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2c5f2788-08e7-441b-a3d4-ba6cb83507af",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.366716Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2c5f2788-08e7-441b-a3d4-ba6cb83507af",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.537966659Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.fakes.watch",
          "resource": "generators.external-secrets.io/v1alpha1/fakes"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.fakes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/fakes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c1c6163d-f527-416a-9a8f-a00eef57cfc0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.367709Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c1c6163d-f527-416a-9a8f-a00eef57cfc0",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.702758462Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72a72095-c1fb-432e-8c71-41c1df215a55",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.367859Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72a72095-c1fb-432e-8c71-41c1df215a55",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.417119029Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clustersecretstores.list",
          "resource": "external-secrets.io/v1beta1/clustersecretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clustersecretstores.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clustersecretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e761e1a2-9e7b-4ac1-8b6f-8c0166424c40",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.367949Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e761e1a2-9e7b-4ac1-8b6f-8c0166424c40",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.130453525Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.servicenetworkendpointgroups.list",
          "resource": "networking.gke.io/v1beta1/servicenetworkendpointgroups"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.servicenetworkendpointgroups.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/servicenetworkendpointgroups",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "888686f8-9f65-4f07-bb1e-bda143e7e19f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.368039Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "888686f8-9f65-4f07-bb1e-bda143e7e19f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.109013085Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.volumeattachments.watch",
          "resource": "storage.k8s.io/v1/volumeattachments"
        }
      ],
      "methodName": "io.k8s.storage.v1.volumeattachments.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/volumeattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8261ba2a-066e-43b3-be4f-0b22cc7822cf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.368486Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8261ba2a-066e-43b3-be4f-0b22cc7822cf",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.issuers.list",
          "resource": "cert-manager.io/v1/issuers"
        }
      ],
      "methodName": "io.cert-manager.v1.issuers.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/issuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f123cf69-1700-4a36-b30e-6877b0e7216c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.371458Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f123cf69-1700-4a36-b30e-6877b0e7216c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.676590341Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.list",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotclasses"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.list",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4a90b69c-1115-4c5a-ae36-5f4f0c94f8c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.371917Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4a90b69c-1115-4c5a-ae36-5f4f0c94f8c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.327027625Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.statefulsets.watch",
          "resource": "apps/v1/statefulsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.statefulsets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/statefulsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eaceb256-cb59-4ee9-8b48-4dd3ba8ad685",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.371969Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eaceb256-cb59-4ee9-8b48-4dd3ba8ad685",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.servicenetworkendpointgroups.watch",
          "resource": "networking.gke.io/v1beta1/servicenetworkendpointgroups"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.servicenetworkendpointgroups.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/servicenetworkendpointgroups",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e2aafc5f-78b3-4e97-9060-04b472be6b1d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.372697Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e2aafc5f-78b3-4e97-9060-04b472be6b1d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.520265807Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csidrivers.list",
          "resource": "storage.k8s.io/v1/csidrivers"
        }
      ],
      "methodName": "io.k8s.storage.v1.csidrivers.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csidrivers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6d55fcae-8da2-4e82-8b66-5989a6b56578",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.372763Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6d55fcae-8da2-4e82-8b66-5989a6b56578",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.037813009Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csidrivers.watch",
          "resource": "storage.k8s.io/v1/csidrivers"
        }
      ],
      "methodName": "io.k8s.storage.v1.csidrivers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csidrivers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "21a43e7f-a89f-4963-bb5c-5cbe3b7f6924",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.374311Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "21a43e7f-a89f-4963-bb5c-5cbe3b7f6924",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.811396520Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterroles.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterroles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterroles.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterroles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f4acb66d-6dbf-411b-b125-7f03c5f27490",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.374331Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f4acb66d-6dbf-411b-b125-7f03c5f27490",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.149136606Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.storageclasses.list",
          "resource": "storage.k8s.io/v1/storageclasses"
        }
      ],
      "methodName": "io.k8s.storage.v1.storageclasses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/storageclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "23141bd9-8c5b-4368-8979-f61cc4d164f6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.379391Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "23141bd9-8c5b-4368-8979-f61cc4d164f6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.623591538Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.storageclasses.watch",
          "resource": "storage.k8s.io/v1/storageclasses"
        }
      ],
      "methodName": "io.k8s.storage.v1.storageclasses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/storageclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d3f10231-bf62-4fc3-a0ff-0f4f235131ff",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.381851Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d3f10231-bf62-4fc3-a0ff-0f4f235131ff",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906785501Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.appprojects.list",
          "resource": "argoproj.io/v1alpha1/appprojects"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.appprojects.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/appprojects",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2859c4ad-6ef1-48cc-965c-f77f40a2bb75",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.388377Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2859c4ad-6ef1-48cc-965c-f77f40a2bb75",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificates.list",
          "resource": "cert-manager.io/v1/certificates"
        }
      ],
      "methodName": "io.cert-manager.v1.certificates.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "41df6f2d-240d-43a6-843b-9e0213d0e481",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.388414Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "41df6f2d-240d-43a6-843b-9e0213d0e481",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.607188699Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.appprojects.watch",
          "resource": "argoproj.io/v1alpha1/appprojects"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.appprojects.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/appprojects",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7ab3588-d5ca-445f-9883-0f1229ef85d1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.390289Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7ab3588-d5ca-445f-9883-0f1229ef85d1",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.022106545Z"
  },
  {
    "insertId": "34ufmxxrl4dgancr",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "time": {
          "timestamp": 1724258375.390989,
          "repr": "2024-08-21 16:39:35.390989+00:00"
        },
        "elapsed": {
          "repr": "1 day, 8:52:40.349486",
          "seconds": 118360.349486
        },
        "thread": {
          "id": 134622713206464,
          "name": "AnyIO worker thread"
        },
        "function": "verify_user_token",
        "extra": {},
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "module": "core",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "name": "copilot_proxy.auth.core",
        "line": 156,
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.391261254Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "neqcrhijjohvf81n",
    "jsonPayload": {
      "record": {
        "exception": null,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "message": "Incoming request to get feature flags",
        "module": "v2",
        "time": {
          "timestamp": 1724258375.391535,
          "repr": "2024-08-21 16:39:35.391535+00:00"
        },
        "extra": {
          "tier_level": 1,
          "request_id": "c21881fc-cae2-4c30-8dab-65746c117ce5",
          "user": {
            "tier_level": 1,
            "iat": 1724257614,
            "email": "emmanuelanthonio62@gmail.com",
            "email_verified": false,
            "exp": 1724261214,
            "auth_time": 1724238906,
            "name": "Emmanuel Kafui Anthonio",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ],
                "github.com": [
                  "64821369"
                ]
              }
            },
            "allowed": true,
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "aud": "codium-dev-360812",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "codiumate": null,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4"
          }
        },
        "line": 60,
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "function": "get_features",
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "elapsed": {
          "seconds": 118360.350032,
          "repr": "1 day, 8:52:40.350032"
        },
        "name": "copilot_proxy.api.users.v2",
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        }
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.391774474Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusterpodmonitorings.watch",
          "resource": "monitoring.googleapis.com/v1/clusterpodmonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusterpodmonitorings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusterpodmonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c2994d5f-5262-4adb-ac50-09c5cf09d8f8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.393049Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c2994d5f-5262-4adb-ac50-09c5cf09d8f8",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.518091592Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.globalrules.watch",
          "resource": "monitoring.googleapis.com/v1/globalrules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.globalrules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/globalrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0faba551-583d-4053-aece-0eec3e32032d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.398237Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0faba551-583d-4053-aece-0eec3e32032d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.839357376Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.prometheusagents.list",
          "resource": "monitoring.coreos.com/v1alpha1/prometheusagents"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.prometheusagents.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/prometheusagents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8463c636-c479-46ef-b28f-65850e4a61ba",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.399115Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8463c636-c479-46ef-b28f-65850e4a61ba",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.707662821Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificates.watch",
          "resource": "cert-manager.io/v1/certificates"
        }
      ],
      "methodName": "io.cert-manager.v1.certificates.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ec8ed527-cbbf-4e85-a5f2-0fd6bd931d50",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.399780Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ec8ed527-cbbf-4e85-a5f2-0fd6bd931d50",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205644011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.prometheusagents.watch",
          "resource": "monitoring.coreos.com/v1alpha1/prometheusagents"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.prometheusagents.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/prometheusagents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "962ba24a-c9e3-4247-85f3-2969b4671443",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.400419Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "962ba24a-c9e3-4247-85f3-2969b4671443",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.417959166Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e6443740-7cd7-437d-9c9d-29b66f978956",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.400420Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e6443740-7cd7-437d-9c9d-29b66f978956",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.444845089Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5d3e89a4-b6ce-4916-bd41-29fdd59bdde8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.401748Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5d3e89a4-b6ce-4916-bd41-29fdd59bdde8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.019865588Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.gcraccesstokens.list",
          "resource": "generators.external-secrets.io/v1alpha1/gcraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.gcraccesstokens.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/gcraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8c9e1aeb-5ab6-4d89-a6fa-d1301c35b439",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.402777Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8c9e1aeb-5ab6-4d89-a6fa-d1301c35b439",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.901376071Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.gcraccesstokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/gcraccesstokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.gcraccesstokens.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/gcraccesstokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "47d73f1a-b840-4c83-a693-6ca2775db9a1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.404556Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "47d73f1a-b840-4c83-a693-6ca2775db9a1",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.417959166Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedworkloads.list",
          "resource": "auto.gke.io/v1/allowlistedworkloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedworkloads.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedworkloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "11fa6b9b-f14d-4735-88a5-2643da80d015",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.404783Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "11fa6b9b-f14d-4735-88a5-2643da80d015",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.605473486Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.roles.list",
          "resource": "rbac.authorization.k8s.io/v1/roles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.roles.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/roles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "da60c601-e5ab-4672-90f1-0d25efff8038",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.405381Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "da60c601-e5ab-4672-90f1-0d25efff8038",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.623591538Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedworkloads.watch",
          "resource": "auto.gke.io/v1/allowlistedworkloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedworkloads.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedworkloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7271c0cb-b781-463d-a8e6-8c08cc346266",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.406285Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7271c0cb-b781-463d-a8e6-8c08cc346266",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.408975016Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshots.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshots"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshots.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshots",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ae49d2d9-6b1e-4125-934c-bbe60015710b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.406367Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ae49d2d9-6b1e-4125-934c-bbe60015710b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.382214426Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.rules.watch",
          "resource": "monitoring.googleapis.com/v1/rules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.rules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/rules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7af30ef6-5390-4eff-8d9a-763bcea1d882",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.407638Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7af30ef6-5390-4eff-8d9a-763bcea1d882",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.895133097Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clustersecretstores.watch",
          "resource": "external-secrets.io/v1beta1/clustersecretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clustersecretstores.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clustersecretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2d1cb936-c8c9-46b9-8534-a5abdf62baee",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.408345Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2d1cb936-c8c9-46b9-8534-a5abdf62baee",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.471073781Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheuses.watch",
          "resource": "monitoring.coreos.com/v1/prometheuses"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheuses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bf391365-8d9e-4ebb-b1b7-aca280e84e67",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.408418Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bf391365-8d9e-4ebb-b1b7-aca280e84e67",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.220720887Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.issuers.watch",
          "resource": "cert-manager.io/v1/issuers"
        }
      ],
      "methodName": "io.cert-manager.v1.issuers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/issuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c4703ed6-fa74-4fdb-902c-5be3cc014020",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.409117Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c4703ed6-fa74-4fdb-902c-5be3cc014020",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.327027625Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.roles.watch",
          "resource": "rbac.authorization.k8s.io/v1/roles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.roles.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/roles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0a284d78-af50-40bb-9832-d87063d9e0fa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.409266Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0a284d78-af50-40bb-9832-d87063d9e0fa",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205644011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusternodemonitorings.watch",
          "resource": "monitoring.googleapis.com/v1/clusternodemonitorings"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusternodemonitorings.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusternodemonitorings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9e99f1a4-fdc8-4c4c-b3ed-06f899bf0154",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.409331Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9e99f1a4-fdc8-4c4c-b3ed-06f899bf0154",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.621305746Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.probes.watch",
          "resource": "monitoring.coreos.com/v1/probes"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.probes.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/probes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d4cb22e1-3f5a-4948-8ef4-7848dc4d2f6f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.409893Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d4cb22e1-3f5a-4948-8ef4-7848dc4d2f6f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320412971Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.x-k8s.autoscaling.v1beta1.provisioningrequests.watch",
          "resource": "autoscaling.x-k8s.io/v1beta1/provisioningrequests"
        }
      ],
      "methodName": "io.x-k8s.autoscaling.v1beta1.provisioningrequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "autoscaling.x-k8s.io/v1beta1/provisioningrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "65587e9e-8f14-45ee-a90a-db41593ebf71",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.409994Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "65587e9e-8f14-45ee-a90a-db41593ebf71",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.236875666Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotclasses"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3f39eff7-b6d0-49b8-8b9a-a1fa84a96fe8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.410427Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3f39eff7-b6d0-49b8-8b9a-a1fa84a96fe8",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.537966659Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.gkenetworkparamsets.watch",
          "resource": "networking.gke.io/v1/gkenetworkparamsets"
        }
      ],
      "methodName": "io.gke.networking.v1.gkenetworkparamsets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/gkenetworkparamsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f0d87c4e-9b4c-48a6-8dbc-e846f9cfbc7f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.410620Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f0d87c4e-9b4c-48a6-8dbc-e846f9cfbc7f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.712862180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.node.v1.runtimeclasses.watch",
          "resource": "node.k8s.io/v1/runtimeclasses"
        }
      ],
      "methodName": "io.k8s.node.v1.runtimeclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "node.k8s.io/v1/runtimeclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "63f12a6a-a390-4e8a-a1c0-3af795136e80",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.411331Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "63f12a6a-a390-4e8a-a1c0-3af795136e80",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.952786898Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificaterequests.watch",
          "resource": "cert-manager.io/v1/certificaterequests"
        }
      ],
      "methodName": "io.cert-manager.v1.certificaterequests.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificaterequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "29132e10-2ac7-402b-be69-6cb5b03900db",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.411749Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "29132e10-2ac7-402b-be69-6cb5b03900db",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.570985047Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.servicenetworkendpointgroups.watch",
          "resource": "networking.gke.io/v1beta1/servicenetworkendpointgroups"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.servicenetworkendpointgroups.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/servicenetworkendpointgroups",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2bffbc60-de24-4f55-9aa3-a627273233c5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.412430Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2bffbc60-de24-4f55-9aa3-a627273233c5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.693197027Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.googleapis.monitoring.v1.clusterrules.watch",
          "resource": "monitoring.googleapis.com/v1/clusterrules"
        }
      ],
      "methodName": "com.googleapis.monitoring.v1.clusterrules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.googleapis.com/v1/clusterrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "62d0d78f-1896-494a-bc95-dfff65d423d5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.412617Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "62d0d78f-1896-494a-bc95-dfff65d423d5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.907706504Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.watch",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8376062e-16cf-4ea6-975c-3bee9af4039d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.413034Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8376062e-16cf-4ea6-975c-3bee9af4039d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.750079702Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.serviceaccounts.watch",
          "resource": "core/v1/serviceaccounts"
        }
      ],
      "methodName": "io.k8s.core.v1.serviceaccounts.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/serviceaccounts",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8e53d1cb-3f4f-48b2-b642-e5d2a2a9a298",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.413281Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8e53d1cb-3f4f-48b2-b642-e5d2a2a9a298",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.845531200Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c9fe8947-4f92-4836-9d60-d51e81208a77",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.413620Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c9fe8947-4f92-4836-9d60-d51e81208a77",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.930316705Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingressclasses.list",
          "resource": "networking.k8s.io/v1/ingressclasses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingressclasses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingressclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9f175126-36c4-462e-8faa-c5dc57805c07",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.414300Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9f175126-36c4-462e-8faa-c5dc57805c07",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205494Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingressclasses.watch",
          "resource": "networking.k8s.io/v1/ingressclasses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingressclasses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingressclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1c9367c8-90b9-47aa-8faf-6b7c2c25f3b7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.416962Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1c9367c8-90b9-47aa-8faf-6b7c2c25f3b7",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.022106545Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshots.list",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshots"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshots.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshots",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72e1debc-5474-4238-946f-cea67358bd02",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.418725Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72e1debc-5474-4238-946f-cea67358bd02",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320036711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotcontents"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotcontents.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotcontents",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3289cc15-c7d2-49e2-a5f5-dafec410cb72",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.419738Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3289cc15-c7d2-49e2-a5f5-dafec410cb72",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.708639481Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.frontendconfigs.watch",
          "resource": "networking.gke.io/v1beta1/frontendconfigs"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.frontendconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/frontendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6b6da077-bd51-4833-aaac-14c805c38312",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.419744Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6b6da077-bd51-4833-aaac-14c805c38312",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.181209124Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b28944f-6292-4227-ab7e-592d2021471d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.419815Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b28944f-6292-4227-ab7e-592d2021471d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.109013085Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.daemonsets.list",
          "resource": "apps/v1/daemonsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.daemonsets.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/daemonsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3e809be0-6cac-4739-804c-02d96614c5ce",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.420969Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3e809be0-6cac-4739-804c-02d96614c5ce",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.912390880Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshots.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshots"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshots.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshots",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5f6dccd2-eadd-4daf-bd20-0736ad0ffd6e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.421133Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5f6dccd2-eadd-4daf-bd20-0736ad0ffd6e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.914075217Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "39067f31-0ab8-4a6f-a754-d5d04518cba5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.421931Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "39067f31-0ab8-4a6f-a754-d5d04518cba5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.436408394Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1.prioritylevelconfigurations.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1.prioritylevelconfigurations.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1/prioritylevelconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f9924315-7d4e-4e42-bd28-4f6c3ff9c47a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.423161Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f9924315-7d4e-4e42-bd28-4f6c3ff9c47a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.832324079Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.scheduling.v1.priorityclasses.watch",
          "resource": "scheduling.k8s.io/v1/priorityclasses"
        }
      ],
      "methodName": "io.k8s.scheduling.v1.priorityclasses.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "scheduling.k8s.io/v1/priorityclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0d75b9a6-d0ba-4070-a2df-9393b5d9c75b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.423379Z",
    "labels": {
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0d75b9a6-d0ba-4070-a2df-9393b5d9c75b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.318001473Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.managedcertificates.watch",
          "resource": "networking.gke.io/v1/managedcertificates"
        }
      ],
      "methodName": "io.gke.networking.v1.managedcertificates.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/managedcertificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e4d86b1d-f9ce-4e83-a83b-71c4231a4c9e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.423728Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e4d86b1d-f9ce-4e83-a83b-71c4231a4c9e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.930316705Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.v1.csidrivers.watch",
          "resource": "storage.k8s.io/v1/csidrivers"
        }
      ],
      "methodName": "io.k8s.storage.v1.csidrivers.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "storage.k8s.io/v1/csidrivers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "60e1fc8b-0a10-4122-bece-19d60a760388",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.423987Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "60e1fc8b-0a10-4122-bece-19d60a760388",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.229870938Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.servicemonitors.watch",
          "resource": "monitoring.coreos.com/v1/servicemonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.servicemonitors.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/servicemonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ee9d4111-f499-4cbb-8713-41eb0ea8be77",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.425586Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ee9d4111-f499-4cbb-8713-41eb0ea8be77",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.712862180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1.flowschemas.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1/flowschemas"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1.flowschemas.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1/flowschemas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "db026140-0a4f-4385-8ddc-2f3ecfcf33f8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.426040Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "db026140-0a4f-4385-8ddc-2f3ecfcf33f8",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.213496547Z"
  },
  {
    "insertId": "txekf3as2ak",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "140.82.115.152",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14979",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.152",
      "serverIp": "10.164.16.11",
      "latency": "0.060007s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-github-servic-300-2ce4c0b8",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "project_id": "codium-production",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:35.427291Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/a5c90edd0972f817d40b9b4067f310c6",
    "receiveTimestamp": "2024-08-21T16:39:35.898211189Z",
    "spanId": "7832cff1d07bb7c0"
  },
  {
    "insertId": "vlp84tavudp1h2et",
    "jsonPayload": {
      "record": {
        "exception": null,
        "thread": {
          "id": 136961113226112,
          "name": "MainThread"
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "extra": {
          "on_prem_log": true
        },
        "elapsed": {
          "repr": "1 day, 9:03:20.781761",
          "seconds": 119000.781761
        },
        "time": {
          "timestamp": 1724258375.429054,
          "repr": "2024-08-21 16:39:35.429054+00:00"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "function": "live",
        "module": "app",
        "line": 164,
        "message": "Incoming request /v1/health/live"
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production-jb",
        "container_name": "proxy",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.429338987Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.792195153Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:54086 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "p5mtgy9qzt73yfgp",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.444291816Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "insertId": "1s0or1u9z19io3nw",
    "jsonPayload": {
      "text": "Received a GitHub webhook\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:35.445745+00:00",
          "timestamp": 1724258375.445745
        },
        "module": "github_app",
        "function": "handle_github_webhooks",
        "thread": {
          "name": "MainThread",
          "id": 134575525518208
        },
        "level": {
          "no": 10,
          "name": "DEBUG",
          "icon": "🐞"
        },
        "extra": {},
        "process": {
          "id": 268,
          "name": "MainProcess"
        },
        "line": 256,
        "elapsed": {
          "repr": "1:27:45.591251",
          "seconds": 5265.591251
        },
        "name": "pr_agent.servers.github_app",
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "message": "Received a GitHub webhook",
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "container_name": "main",
        "cluster_name": "production-cluster",
        "namespace_name": "pr-agent",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.446027369Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-github",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "57b9b6c95f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "633626e6-7859-439b-9a04-95b70a5cc42c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.447131Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "633626e6-7859-439b-9a04-95b70a5cc42c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.510445241Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.frontendconfigs.list",
          "resource": "networking.gke.io/v1beta1/frontendconfigs"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.frontendconfigs.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/frontendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a044e81b-744a-497f-9958-b87ccf12830b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.447362Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a044e81b-744a-497f-9958-b87ccf12830b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.607188699Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.daemonsets.watch",
          "resource": "apps/v1/daemonsets"
        }
      ],
      "methodName": "io.k8s.apps.v1.daemonsets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/daemonsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3796b136-9296-418f-bbb6-f01a20f479d3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.447709Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3796b136-9296-418f-bbb6-f01a20f479d3",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.408975016Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1beta1.frontendconfigs.watch",
          "resource": "networking.gke.io/v1beta1/frontendconfigs"
        }
      ],
      "methodName": "io.gke.networking.v1beta1.frontendconfigs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1beta1/frontendconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "371b99cd-9f5d-4fef-be21-6474f994781c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.450203Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "371b99cd-9f5d-4fef-be21-6474f994781c",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.520265807Z"
  },
  {
    "insertId": "qxy0l7f44gq5i7fx",
    "jsonPayload": {
      "record": {
        "function": "dispatch",
        "exception": null,
        "message": "Request handled",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "name": "app",
        "module": "app",
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:35.453344+00:00",
          "timestamp": 1724258375.453344
        },
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "elapsed": {
          "repr": "1 day, 8:52:40.411841",
          "seconds": 118360.411841
        },
        "extra": {
          "on_prem_log": true,
          "status_code": 200,
          "url": "https://api.codium.ai/v2/users/features",
          "request_id": "c21881fc-cae2-4c30-8dab-65746c117ce5",
          "source_host": "154.161.177.136",
          "method": "GET"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:35.453638569Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheusrules.watch",
          "resource": "monitoring.coreos.com/v1/prometheusrules"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheusrules.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheusrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a3bce450-4a15-4743-81a6-767009e4c140",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.456509Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a3bce450-4a15-4743-81a6-767009e4c140",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.428035851Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1beta3.flowschemas.list",
          "resource": "flowcontrol.apiserver.k8s.io/v1beta3/flowschemas"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1beta3.flowschemas.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1beta3/flowschemas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "86ab5f7b-cb8c-4b72-a9e9-17b71c87aef2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.459826Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "86ab5f7b-cb8c-4b72-a9e9-17b71c87aef2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.623591538Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a7f9fba1-4737-474a-9a42-a61a739b24f6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.461578Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a7f9fba1-4737-474a-9a42-a61a739b24f6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.707466885Z"
  },
  {
    "insertId": "wr1wt8axoos3nx8s",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:35.463082+00:00",
          "timestamp": 1724258375.463082
        },
        "elapsed": {
          "repr": "1 day, 9:03:20.815789",
          "seconds": 119000.815789
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "function": "dispatch",
        "extra": {
          "url": "http://10.164.17.15:5432/v1/health/live",
          "method": "GET",
          "request_id": "N/A",
          "status_code": 200,
          "source_host": "10.164.17.1",
          "on_prem_log": true
        },
        "name": "app",
        "exception": null,
        "thread": {
          "id": 136961113226112,
          "name": "MainThread"
        },
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production-jb",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7"
      }
    },
    "timestamp": "2024-08-21T16:39:35.463392824Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.792195153Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1beta3.flowschemas.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1beta3/flowschemas"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1beta3.flowschemas.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1beta3/flowschemas",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7a7cfa8d-9733-4087-91ab-571c465e5153",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.464943Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7a7cfa8d-9733-4087-91ab-571c465e5153",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209756429Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingresses.list",
          "resource": "networking.k8s.io/v1/ingresses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingresses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingresses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c7c59936-4188-459c-8579-cb7ea3f6ddb5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.465125Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c7c59936-4188-459c-8579-cb7ea3f6ddb5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.815616214Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.serviceattachments.list",
          "resource": "networking.gke.io/v1/serviceattachments"
        }
      ],
      "methodName": "io.gke.networking.v1.serviceattachments.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/serviceattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "294593f3-6976-4274-8f41-d49ec6cb7709",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.471243Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "294593f3-6976-4274-8f41-d49ec6cb7709",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.817554627Z"
  },
  {
    "insertId": "qtynuhzdcmnx3gam",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "line": 804,
        "extra": {
          "on_prem_log": true,
          "status_code": 200,
          "method": "POST",
          "source_host": "140.82.115.152",
          "url": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks"
        },
        "module": "github_app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "file": {
          "name": "github_app.py",
          "path": "/app/pr_agent/servers/github_app.py"
        },
        "name": "pr_agent.servers.github_app",
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        },
        "exception": null,
        "time": {
          "timestamp": 1724258375.471891,
          "repr": "2024-08-21 16:39:35.471891+00:00"
        },
        "elapsed": {
          "seconds": 5265.617397,
          "repr": "1:27:45.617397"
        },
        "process": {
          "id": 268,
          "name": "MainProcess"
        },
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "main",
        "namespace_name": "pr-agent",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt"
      }
    },
    "timestamp": "2024-08-21T16:39:35.472154473Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "k8s-pod/app": "pr-agent-free-github"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.serviceattachments.watch",
          "resource": "networking.gke.io/v1/serviceattachments"
        }
      ],
      "methodName": "io.gke.networking.v1.serviceattachments.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/serviceattachments",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f0d1d14b-0a22-466a-b9b0-b0ba7eade18e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.473039Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f0d1d14b-0a22-466a-b9b0-b0ba7eade18e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.707662821Z"
  },
  {
    "insertId": "v2te3uf14b8vn",
    "jsonPayload": {
      "remoteIp": "177.69.243.97",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "outcome": "ACCEPT",
        "priority": 500,
        "name": "codium-app-cloud-armor-policy"
      },
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "priority": 14000,
        "outcome": "ACCEPT"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "17242",
      "status": 200,
      "responseSize": "766",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.69.243.97",
      "serverIp": "10.164.17.14",
      "latency": "1.766332s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:35.473945Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/cd1fe55d92e649fb3665f94f63cbcfd7",
    "receiveTimestamp": "2024-08-21T16:39:38.126826936Z",
    "spanId": "f8322c52ca8fdf1b"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.networking.v1.ingresses.watch",
          "resource": "networking.k8s.io/v1/ingresses"
        }
      ],
      "methodName": "io.k8s.networking.v1.ingresses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.k8s.io/v1/ingresses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72df5b02-9601-478a-8d6b-8a258be448a0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.477704Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72df5b02-9601-478a-8d6b-8a258be448a0",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.414395155Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b6039cfb-debc-438a-acbc-fd89ba768d8d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.477807Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b6039cfb-debc-438a-acbc-fd89ba768d8d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114626256Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e135dc1f-25b8-4c61-ab11-df06a9093682",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.483556Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e135dc1f-25b8-4c61-ab11-df06a9093682",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.111963262Z"
  },
  {
    "insertId": "ayfyi3f1afkww6u3",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258375.486356,
          "repr": "2024-08-21 16:39:35.486356+00:00"
        },
        "exception": null,
        "line": 131,
        "extra": {
          "request_id": "64a8adda-e9ca-43d5-a491-36c8df778054",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">",
          "completion": "Ссылка</a>\n                </li>",
          "user": {
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "auth_time": 1724251717,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "allowed": true,
            "exp": 1724258892,
            "tier_end_date": 1701693510000,
            "email_verified": false,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_level": 10,
            "codiumate": null,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "aud": "codium-dev-360812",
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            },
            "iat": 1724255292,
            "email": "y.borozna81@internet.ru"
          },
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "openai_request_id": "cmpl-9yietWfRbb9EUtOKCg3C1NAqZ8COw",
          "model": "gpt-3.5-turbo-instruct",
          "url_path": "/v2/code/completion",
          "openai_response": {
            "id": "cmpl-9yietWfRbb9EUtOKCg3C1NAqZ8COw",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='Ссылка</a>\\n                </li>', logprobs=None)"
            ],
            "created": 1724258375,
            "usage": {
              "prompt_tokens": 1758,
              "completion_tokens": 10,
              "total_tokens": 1768
            },
            "model": "gpt-3.5-turbo-instruct",
            "object": "text_completion"
          }
        },
        "elapsed": {
          "seconds": 119305.282111,
          "repr": "1 day, 9:08:25.282111"
        },
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "function": "generate",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "module": "litellm_infer_engine",
        "name": "ai.litellm.litellm_infer_engine",
        "message": "OpenAI Response"
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.486839674Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "cloud-controller-manager",
              "operation": "Update",
              "time": "2024-08-21T16:39:35Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "091558af-25cc-48a4-b58a-b1089cda7ec1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.488175Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "091558af-25cc-48a4-b58a-b1089cda7ec1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.009278428Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.493387501Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "ul0tphf34j00x",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:35.489508071Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.305029633Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.scrapeconfigs.list",
          "resource": "monitoring.coreos.com/v1alpha1/scrapeconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.scrapeconfigs.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/scrapeconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cc652df8-095a-4ef7-9588-73993f32a19f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.498542Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cc652df8-095a-4ef7-9588-73993f32a19f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.320036711Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clustersecretstores.list",
          "resource": "external-secrets.io/v1beta1/clustersecretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clustersecretstores.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clustersecretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2b6acd36-83eb-4a74-be9f-0991ac627158",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.500829Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2b6acd36-83eb-4a74-be9f-0991ac627158",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.scrapeconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/scrapeconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.scrapeconfigs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/scrapeconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "857ccc21-2313-4676-a25d-aa6b45e82c1d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.500920Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "857ccc21-2313-4676-a25d-aa6b45e82c1d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.821055846Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.list",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotclasses"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "20562574-67d6-4212-92d4-bc93f912fb0b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.501431Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "20562574-67d6-4212-92d4-bc93f912fb0b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.controllerrevisions.list",
          "resource": "apps/v1/controllerrevisions"
        }
      ],
      "methodName": "io.k8s.apps.v1.controllerrevisions.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/controllerrevisions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "77f5bdcb-c6ee-4b75-bd4f-defbc7610d07",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.502804Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "77f5bdcb-c6ee-4b75-bd4f-defbc7610d07",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.029979757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1beta1.clustersecretstores.watch",
          "resource": "external-secrets.io/v1beta1/clustersecretstores"
        }
      ],
      "methodName": "io.external-secrets.v1beta1.clustersecretstores.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1beta1/clustersecretstores",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1f974478-231a-4b61-b352-1c3d90200060",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.503126Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1f974478-231a-4b61-b352-1c3d90200060",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.202237449Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.watch",
          "resource": "snapshot.storage.k8s.io/v1/volumesnapshotclasses"
        }
      ],
      "methodName": "io.k8s.storage.snapshot.v1.volumesnapshotclasses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "snapshot.storage.k8s.io/v1/volumesnapshotclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8e42edb2-9ec0-48af-8e6d-3301806228d9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.503439Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8e42edb2-9ec0-48af-8e6d-3301806228d9",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.801340795Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedv2workloads.list",
          "resource": "auto.gke.io/v1/allowlistedv2workloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedv2workloads.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedv2workloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c235b8ce-fc2f-4388-a372-3746bf441775",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.504107Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c235b8ce-fc2f-4388-a372-3746bf441775",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.202237449Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c55023bb-c85e-4aa3-8726-bf84dec89559",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.504382Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c55023bb-c85e-4aa3-8726-bf84dec89559",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.485434220Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.auto.v1.allowlistedv2workloads.watch",
          "resource": "auto.gke.io/v1/allowlistedv2workloads"
        }
      ],
      "methodName": "io.gke.auto.v1.allowlistedv2workloads.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "auto.gke.io/v1/allowlistedv2workloads",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "91f87c60-2862-4407-9b47-411d5249c67f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.505506Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "91f87c60-2862-4407-9b47-411d5249c67f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.723594244Z"
  },
  {
    "insertId": "a4r4xsur1rc0ynwk",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "extra": {
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "results": {
            "user_input": {
              "context": [],
              "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
              "relative_file_path": "dish/templates/core/frontpage.html",
              "is_multiline": false,
              "user_context": [],
              "max_repo_context": 5,
              "language": "django-html",
              "task": "",
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">",
              "repo_context": [],
              "file_diff_content": "",
              "max_remote_context": 5,
              "context_mode": "pre_pr",
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "is_file_diff": false,
              "configuration": {},
              "remote_context": [],
              "reference_snippet_messages": [
                {
                  "file_name": "Project directory structure:",
                  "type": "DirectoryStructure",
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html"
                },
                {
                  "file_name": "templates\\base.html",
                  "type": "File",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "type": "Clipboard",
                  "file_name": "templates\\base.html"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "type": "Clipboard",
                  "file_name": "templates\\base.html"
                }
              ],
              "extra_instructions": ""
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"\\u0421\\u0441\\u044b\\u043b\\u043a\\u0430</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "inference_steps": {
              "step_01_CodeCompletion": {
                "03_start_time": "2024-08-21 16:39:34.943390",
                "04_end_time": "2024-08-21 16:39:35.516791",
                "02_completion": "Ссылка</a>\n                </li>",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">",
                "00_system": null
              }
            },
            "url_path": "/v2/code/completion"
          },
          "user": {
            "aud": "codium-dev-360812",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "codiumate": null,
            "iat": 1724255292,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "email": "y.borozna81@internet.ru",
            "tier_end_date": 1701693510000,
            "tier_level": 10,
            "exp": 1724258892,
            "allowed": true,
            "auth_time": 1724251717,
            "email_verified": false
          },
          "url_path": "/v2/code/completion",
          "request_id": "64a8adda-e9ca-43d5-a491-36c8df778054"
        },
        "exception": null,
        "module": "inference_utils",
        "message": "Prompts and results v2",
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "time": {
          "repr": "2024-08-21 16:39:35.516988+00:00",
          "timestamp": 1724258375.516988
        },
        "function": "process",
        "line": 1112,
        "elapsed": {
          "seconds": 119305.312743,
          "repr": "1 day, 9:08:25.312743"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8"
      }
    },
    "timestamp": "2024-08-21T16:39:35.517547282Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.clusterissuers.list",
          "resource": "cert-manager.io/v1/clusterissuers"
        }
      ],
      "methodName": "io.cert-manager.v1.clusterissuers.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/clusterissuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ff0c1c54-b7d7-4903-870a-bc6773f8ba72",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.518309Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ff0c1c54-b7d7-4903-870a-bc6773f8ba72",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.707662821Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.clusterissuers.watch",
          "resource": "cert-manager.io/v1/clusterissuers"
        }
      ],
      "methodName": "io.cert-manager.v1.clusterissuers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/clusterissuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "35ef82cc-8b46-4c02-81c4-674e8e4fa724",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.520698Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "35ef82cc-8b46-4c02-81c4-674e8e4fa724",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.808639544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.scheduling.v1.priorityclasses.list",
          "resource": "scheduling.k8s.io/v1/priorityclasses"
        }
      ],
      "methodName": "io.k8s.scheduling.v1.priorityclasses.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "scheduling.k8s.io/v1/priorityclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1399cbe3-116f-47b7-9e34-2b28a5271c0d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.523373Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1399cbe3-116f-47b7-9e34-2b28a5271c0d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.913135066Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/configmaps"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/configmaps",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7bf83041-46bf-4897-85c8-b5981701c25e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.524317Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7bf83041-46bf-4897-85c8-b5981701c25e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.101797421Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.scheduling.v1.priorityclasses.watch",
          "resource": "scheduling.k8s.io/v1/priorityclasses"
        }
      ],
      "methodName": "io.k8s.scheduling.v1.priorityclasses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "scheduling.k8s.io/v1/priorityclasses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3d7a953d-5e61-421c-b133-fec8a70c1193",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.525266Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3d7a953d-5e61-421c-b133-fec8a70c1193",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.111963262Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.issuers.list",
          "resource": "cert-manager.io/v1/issuers"
        }
      ],
      "methodName": "io.cert-manager.v1.issuers.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/issuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d751716a-ae1c-4929-8efa-017ef1ffe824",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.528361Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d751716a-ae1c-4929-8efa-017ef1ffe824",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.901376071Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.issuers.watch",
          "resource": "cert-manager.io/v1/issuers"
        }
      ],
      "methodName": "io.cert-manager.v1.issuers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/issuers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3a3a0e3e-d14a-487f-a58b-6f4dc2477687",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.530111Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3a3a0e3e-d14a-487f-a58b-6f4dc2477687",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.723594244Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.list",
          "resource": "core/v1/configmaps"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/configmaps",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f23dac00-aa9c-4b9f-b61f-389e0303fb05",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.534481Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f23dac00-aa9c-4b9f-b61f-389e0303fb05",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.706965687Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.list",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "742c43be-4276-433f-8f13-0dac1b2a415a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.534814Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "742c43be-4276-433f-8f13-0dac1b2a415a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906785501Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.list",
          "resource": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d865da5a-8bae-4d93-a410-f29361388f31",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.537296Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d865da5a-8bae-4d93-a410-f29361388f31",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.905866659Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
          "resource": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens"
        }
      ],
      "methodName": "io.external-secrets.generators.v1alpha1.ecrauthorizationtokens.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "generators.external-secrets.io/v1alpha1/ecrauthorizationtokens",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "90680677-91d5-4f6d-9636-f4254ec83d27",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.539023Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "90680677-91d5-4f6d-9636-f4254ec83d27",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.814725662Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.watch",
          "resource": "discovery.k8s.io/v1/endpointslices"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "discovery.k8s.io/v1/endpointslices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0686a20f-8b94-41a7-9fb6-51905629661e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.542219Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0686a20f-8b94-41a7-9fb6-51905629661e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "insertId": "g3qjagu0rjsrfyvy",
    "jsonPayload": {
      "record": {
        "exception": null,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "extra": {
          "method": "POST",
          "source_host": "37.214.22.173",
          "status_code": 200,
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/code/completion",
          "request_id": "64a8adda-e9ca-43d5-a491-36c8df778054"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "function": "dispatch",
        "message": "Request handled",
        "module": "app",
        "name": "app",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "line": 37,
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "time": {
          "repr": "2024-08-21 16:39:35.544188+00:00",
          "timestamp": 1724258375.544188
        },
        "elapsed": {
          "seconds": 119305.339943,
          "repr": "1 day, 9:08:25.339943"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.544489334Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.thanosrulers.list",
          "resource": "monitoring.coreos.com/v1/thanosrulers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.thanosrulers.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/thanosrulers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "51abf9f8-3726-462d-a532-01db042146eb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.550323Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "51abf9f8-3726-462d-a532-01db042146eb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.022106545Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7a89860f-1df0-4c3d-ab76-6d886605c33a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.551677Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:gke-ccm-migration-leader-election/kube-system\" of Role \"system:gke-ccm-migration-leader-election\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7a89860f-1df0-4c3d-ab76-6d886605c33a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.037813009Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheusrules.list",
          "resource": "monitoring.coreos.com/v1/prometheusrules"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheusrules.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheusrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "116cd022-6162-4208-9c11-322d9799ff50",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.552114Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "116cd022-6162-4208-9c11-322d9799ff50",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.thanosrulers.watch",
          "resource": "monitoring.coreos.com/v1/thanosrulers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.thanosrulers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/thanosrulers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2fdc09a7-9315-4d0d-97d3-a24eb7ef43a6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.552575Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2fdc09a7-9315-4d0d-97d3-a24eb7ef43a6",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.414395155Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.applicationsets.list",
          "resource": "argoproj.io/v1alpha1/applicationsets"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.applicationsets.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/applicationsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c27f03da-1fad-44ba-89e6-d6c346850855",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.554780Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c27f03da-1fad-44ba-89e6-d6c346850855",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.applicationsets.watch",
          "resource": "argoproj.io/v1alpha1/applicationsets"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.applicationsets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/applicationsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bdf1cd2e-0175-4fc9-8086-e80800949861",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.556393Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bdf1cd2e-0175-4fc9-8086-e80800949861",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.723594244Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.managedcertificates.list",
          "resource": "networking.gke.io/v1/managedcertificates"
        }
      ],
      "methodName": "io.gke.networking.v1.managedcertificates.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/managedcertificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b0791af1-f62f-473b-adc0-e5229fc363cd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.560752Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b0791af1-f62f-473b-adc0-e5229fc363cd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.109013085Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.autoscaling.internal.v1.capacityrequests.list",
          "resource": "internal.autoscaling.gke.io/v1/capacityrequests"
        }
      ],
      "methodName": "io.gke.autoscaling.internal.v1.capacityrequests.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "internal.autoscaling.gke.io/v1/capacityrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5adf53b5-07e7-4e8c-8a75-8559aa7c808e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.561930Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5adf53b5-07e7-4e8c-8a75-8559aa7c808e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.209756429Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
          "resource": "internal.autoscaling.gke.io/v1/capacityrequests"
        }
      ],
      "methodName": "io.gke.autoscaling.internal.v1.capacityrequests.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "internal.autoscaling.gke.io/v1/capacityrequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7f9db63d-efaf-4c58-851d-e7954e76e004",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.563770Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7f9db63d-efaf-4c58-851d-e7954e76e004",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.803629166Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.managedcertificates.watch",
          "resource": "networking.gke.io/v1/managedcertificates"
        }
      ],
      "methodName": "io.gke.networking.v1.managedcertificates.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/managedcertificates",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7c81a642-eef2-4af5-8d9f-fbe4f189d569",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.564134Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7c81a642-eef2-4af5-8d9f-fbe4f189d569",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.906554180Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheusrules.watch",
          "resource": "monitoring.coreos.com/v1/prometheusrules"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheusrules.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheusrules",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5ff67aaf-e6cb-4999-ac64-a4caa657d8a1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.568262Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5ff67aaf-e6cb-4999-ac64-a4caa657d8a1",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.520265807Z"
  },
  {
    "insertId": "77uaasf75qytr",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 1000,
        "configuredAction": "ALLOW"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "181.115.166.142",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BO"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1519",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "181.115.166.142",
      "serverIp": "10.164.17.14",
      "latency": "0.206253s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:35.568972Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/a662aa8b5bc028369d82c7cf7de5850a",
    "receiveTimestamp": "2024-08-21T16:39:38.739597418Z",
    "spanId": "e9fccdafd90a11ab"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.44.18.133",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.576170310Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1nfotgye7d1a6",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:35.570337150Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.010147915Z"
  },
  {
    "insertId": "sdqd9wi32me6rf5j",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:35.570240+00:00",
          "timestamp": 1724258375.57024
        },
        "function": "verify_user_token",
        "thread": {
          "id": 134586121828032,
          "name": "AnyIO worker thread"
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "elapsed": {
          "seconds": 119072.137541,
          "repr": "1 day, 9:04:32.137541"
        },
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "exception": null,
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.auth.core",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "line": 156,
        "extra": {},
        "module": "core"
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:35.570534125Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "6rgrl3qbrbb0sk97",
    "jsonPayload": {
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "exception": null,
        "module": "core",
        "name": "copilot_proxy.auth.core",
        "time": {
          "timestamp": 1724258375.570646,
          "repr": "2024-08-21 16:39:35.570646+00:00"
        },
        "line": 106,
        "extra": {},
        "thread": {
          "id": 134586121828032,
          "name": "AnyIO worker thread"
        },
        "elapsed": {
          "seconds": 119072.137947,
          "repr": "1 day, 9:04:32.137947"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "function": "verify_minimum_tier_level",
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:35.570826788Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.protect.vulnerabilities.v1.extractionresults.list",
          "resource": "vulnerabilities.protect.gke.io/v1/extractionresults"
        }
      ],
      "methodName": "io.gke.protect.vulnerabilities.v1.extractionresults.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "vulnerabilities.protect.gke.io/v1/extractionresults",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fd1f1d18-5624-4ed4-af30-e9f81bdc2036",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.571902Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fd1f1d18-5624-4ed4-af30-e9f81bdc2036",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:35.914075217Z"
  },
  {
    "insertId": "2wchf9hbqexay574",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:04:32.142492",
          "seconds": 119072.142492
        },
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "line": 513,
        "time": {
          "timestamp": 1724258375.575191,
          "repr": "2024-08-21 16:39:35.575191+00:00"
        },
        "extra": {
          "data": {
            "user_data": {
              "editor_sub_version": null,
              "installation_id": "d9512a22-64ab-4187-87de-bc5e6405f7d3",
              "os_version": "v20.14.0",
              "extension_version": "0.9.13",
              "os_platform": "win32",
              "editor_version": "1.92.2",
              "editor_type": "vscode",
              "user_id": null
            },
            "max_repo_context": 5,
            "remote_context": [],
            "task": "",
            "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
            "reference_snippet_messages": [
              {
                "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty",
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure"
              },
              {
                "file_name": "resources\\views\\dashboards\\list.blade.php",
                "type": "Clipboard",
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData"
              },
              {
                "type": "Clipboard",
                "file_name": "resources\\views\\dashboards\\list.blade.php",
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData"
              },
              {
                "file_name": "Codiumate chat",
                "type": "Clipboard",
                "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo"
              },
              {
                "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                "type": "File",
                "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\","
              }
            ],
            "language": "blade",
            "repo_context": [],
            "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contact",
            "is_file_diff": false,
            "context": [],
            "file_diff_content": "",
            "user_context": [],
            "context_mode": "pre_pr",
            "extra_instructions": "",
            "max_remote_context": 5,
            "relative_file_path": "resources/views/dashboards/list.blade.php",
            "is_multiline": false
          },
          "user": {
            "allowed": true,
            "exp": 1724261737,
            "email_verified": true,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "aud": "codium-dev-360812",
            "tier_level": 10,
            "tier_end_date": 1725287318000,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "name": "Luiz F",
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email": "lf0448504@gmail.com",
            "optout": false,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "organization_id": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "baseUrl": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "auth_time": 1724161599,
            "codiumate": null,
            "iat": 1724258137
          },
          "request_id": "c6c2e7b6-c83c-4f40-8272-2a87ec8fddf3",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "on_prem_log": true
        },
        "name": "copilot_proxy.api.code.v2",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "message": "Incoming request /v2/code/completion",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "function": "run_code_completion",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "module": "v2",
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.575609042Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b4ecd823-fb42-4c5c-8985-96a7b36f917b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.576350Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b4ecd823-fb42-4c5c-8985-96a7b36f917b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.517150700Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.protect.vulnerabilities.v1.extractionresults.watch",
          "resource": "vulnerabilities.protect.gke.io/v1/extractionresults"
        }
      ],
      "methodName": "io.gke.protect.vulnerabilities.v1.extractionresults.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "vulnerabilities.protect.gke.io/v1/extractionresults",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eace2abc-6059-4dd5-9d0e-f1e69b1aae02",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.576644Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eace2abc-6059-4dd5-9d0e-f1e69b1aae02",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205644011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterrolebindings.list",
          "resource": "rbac.authorization.k8s.io/v1/clusterrolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterrolebindings.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterrolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "280204d9-f48d-437f-9b3c-53b58f4b36f6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.585657Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "280204d9-f48d-437f-9b3c-53b58f4b36f6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.029979757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiregistration.v1.apiservices.list",
          "resource": "apiregistration.k8s.io/v1/apiservices"
        }
      ],
      "methodName": "io.k8s.apiregistration.v1.apiservices.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiregistration.k8s.io/v1/apiservices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "22c033dc-e8cd-4e9b-bc46-356096a54cbc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.586831Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "22c033dc-e8cd-4e9b-bc46-356096a54cbc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.205644011Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/configmaps"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/configmaps",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "36ba419f-8d88-480f-bb2a-c8a3375067c2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.588558Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "36ba419f-8d88-480f-bb2a-c8a3375067c2",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.109013085Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.list",
          "resource": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.list",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e3115c80-de08-42a5-8ff1-92465b390e45",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.589969Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e3115c80-de08-42a5-8ff1-92465b390e45",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.110252348Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiregistration.v1.apiservices.watch",
          "resource": "apiregistration.k8s.io/v1/apiservices"
        }
      ],
      "methodName": "io.k8s.apiregistration.v1.apiservices.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiregistration.k8s.io/v1/apiservices",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "872b6c3d-8c47-48ee-a97a-c78812ecae18",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.595014Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "872b6c3d-8c47-48ee-a97a-c78812ecae18",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.901376071Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-analysis.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "private",
        "callerSuppliedUserAgent": "stubby_client",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.436194004Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "containeranalysis.googleapis.com",
      "methodName": "grafeas.v1.Grafeas.ListOccurrences",
      "authorizationInfo": [
        {
          "resource": "projects/0000000fbcb1f9b6",
          "permission": "containeranalysis.occurrences.list",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/grafeas.v1.ListOccurrencesRequest",
        "parent": "projects/codium-production",
        "filter": "kind = \"DISCOVERY\" AND noteProjectId = \"goog-analysis\" AND noteId = \"PACKAGE_VULNERABILITY\" AND resourceUrl = \"https://us-central1-docker.pkg.dev/codium-production/codium-repo/pr-agent@sha256:d6b880ea92fd5caf7f3afe4365a142e658b2c4ae40aeb948385197b6e68fbf2a\""
      }
    },
    "insertId": "16r0ixrf1ci6ds",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "containeranalysis.googleapis.com",
        "method": "grafeas.v1.Grafeas.ListOccurrences",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.595654505Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:35.595654505Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.validatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/validatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d548338f-c123-4169-b2bc-4a2b8a5f4e7a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.595845Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d548338f-c123-4169-b2bc-4a2b8a5f4e7a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.910849395Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterrolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterrolebindings.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterrolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7aeafa5e-f269-44f2-a7ed-f6b6ebda2cf8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.597628Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7aeafa5e-f269-44f2-a7ed-f6b6ebda2cf8",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.109013085Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.controllerrevisions.watch",
          "resource": "apps/v1/controllerrevisions"
        }
      ],
      "methodName": "io.k8s.apps.v1.controllerrevisions.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/controllerrevisions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1343abe7-c53b-4cee-9408-4d680dc9b424",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.599235Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1343abe7-c53b-4cee-9408-4d680dc9b424",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.706965687Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.replicasets.watch",
          "resource": "apps/v1/replicasets"
        }
      ],
      "methodName": "io.k8s.apps.v1.replicasets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/replicasets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "11cb4cd2-a889-4b04-bdea-5bc51b947067",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.601011Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authorization.k8s.io/decision": "allow",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "11cb4cd2-a889-4b04-bdea-5bc51b947067",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.405159079Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.podmonitors.watch",
          "resource": "monitoring.coreos.com/v1/podmonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.podmonitors.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/podmonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "658344d4-e4f9-454e-a411-c52a1b71d068",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.606188Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "658344d4-e4f9-454e-a411-c52a1b71d068",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.811396520Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.external-secrets.v1alpha1.pushsecrets.watch",
          "resource": "external-secrets.io/v1alpha1/pushsecrets"
        }
      ],
      "methodName": "io.external-secrets.v1alpha1.pushsecrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "external-secrets.io/v1alpha1/pushsecrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "58924d50-1aab-4b79-8cdd-b58dedf1c37a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.607084Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "58924d50-1aab-4b79-8cdd-b58dedf1c37a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.710275379Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.gkenetworkparamsets.watch",
          "resource": "networking.gke.io/v1/gkenetworkparamsets"
        }
      ],
      "methodName": "io.gke.networking.v1.gkenetworkparamsets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/gkenetworkparamsets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8cd938c4-1d94-4244-8107-e94090e7407a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.607922Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8cd938c4-1d94-4244-8107-e94090e7407a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.406142923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
          "resource": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs"
        }
      ],
      "methodName": "com.coreos.monitoring.v1alpha1.alertmanagerconfigs.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1alpha1/alertmanagerconfigs",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "059b7583-3839-47bb-afe3-8663556d61dc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.609839Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "059b7583-3839-47bb-afe3-8663556d61dc",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.110252348Z"
  },
  {
    "insertId": "aa2s0g112bvz0",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "140.82.115.240"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14654",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.240",
      "serverIp": "10.164.12.3",
      "latency": "0.059914s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9"
      }
    },
    "timestamp": "2024-08-21T16:39:35.613671Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/790d4ebd83310b5d303cca7e07b987ef",
    "receiveTimestamp": "2024-08-21T16:39:35.921807718Z",
    "spanId": "54196415aa8624d2"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.prometheuses.watch",
          "resource": "monitoring.coreos.com/v1/prometheuses"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.prometheuses.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/prometheuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ab6d41be-3817-418b-baaf-c037a32e5db0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.615083Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ab6d41be-3817-418b-baaf-c037a32e5db0",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.202237449Z"
  },
  {
    "insertId": "1d49fs1f3sjh74",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "35.185.252.44",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/",
      "requestSize": "162",
      "status": 200,
      "responseSize": "136",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.185.252.44",
      "serverIp": "10.164.6.4",
      "latency": "0.036983s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.620844Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/9997c8e9fd4a7e9cd5f73eda31da44f1",
    "receiveTimestamp": "2024-08-21T16:39:36.981950031Z",
    "spanId": "fb083838aa743b1f"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8054f9ec-79ac-4d6b-a2e1-c51f2ede3d91",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.632228Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8054f9ec-79ac-4d6b-a2e1-c51f2ede3d91",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.072234803Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.alertmanagers.watch",
          "resource": "monitoring.coreos.com/v1/alertmanagers"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.alertmanagers.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/alertmanagers",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6e970efd-d2e1-40c1-8e57-756183938d75",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.633097Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6e970efd-d2e1-40c1-8e57-756183938d75",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.037813009Z"
  },
  {
    "insertId": "n8eusx4rofovmtc6",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 37,
        "exception": null,
        "function": "dispatch",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "elapsed": {
          "seconds": 119072.656507,
          "repr": "1 day, 9:04:32.656507"
        },
        "module": "app",
        "message": "Request handled",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "time": {
          "repr": "2024-08-21 16:39:35.638875+00:00",
          "timestamp": 1724258375.638875
        },
        "process": {
          "name": "MainProcess",
          "id": 18
        },
        "extra": {
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "status_code": 200,
          "method": "POST",
          "request_id": "N/A",
          "source_host": "181.115.166.142",
          "on_prem_log": true
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:35.639130278Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.warden.v1.audits.watch",
          "resource": "warden.gke.io/v1/audits"
        }
      ],
      "methodName": "io.gke.warden.v1.audits.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "warden.gke.io/v1/audits",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1aa0337d-e3f8-42ed-90e7-5a0fb1daec0b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.639804Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1aa0337d-e3f8-42ed-90e7-5a0fb1daec0b",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.202237449Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.gke.networking.v1.networks.watch",
          "resource": "networking.gke.io/v1/networks"
        }
      ],
      "methodName": "io.gke.networking.v1.networks.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "networking.gke.io/v1/networks",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1e9dfbd5-1cac-491e-a35a-85e20d7a46e5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.640804Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1e9dfbd5-1cac-491e-a35a-85e20d7a46e5",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.924817923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cbc4db98-66b6-484d-b52e-be1c8add14c1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.643362Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cbc4db98-66b6-484d-b52e-be1c8add14c1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.114107415Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.probes.watch",
          "resource": "monitoring.coreos.com/v1/probes"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.probes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/probes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e9bfaa41-57aa-4279-82c5-65b69ce44cc0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.643793Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e9bfaa41-57aa-4279-82c5-65b69ce44cc0",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.414395155Z"
  },
  {
    "insertId": "11p9ax6vq28owrzo",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "seconds": 5265.261925,
          "repr": "1:27:45.261925"
        },
        "extra": {
          "source_host": "35.191.206.98",
          "method": "GET",
          "url": "http://10.164.16.11/",
          "on_prem_log": true,
          "status_code": 200
        },
        "exception": null,
        "module": "github_app",
        "message": "Request handled",
        "line": 804,
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        },
        "name": "pr_agent.servers.github_app",
        "function": "dispatch",
        "file": {
          "name": "github_app.py",
          "path": "/app/pr_agent/servers/github_app.py"
        },
        "time": {
          "timestamp": 1724258375.64668,
          "repr": "2024-08-21 16:39:35.646680+00:00"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "process": {
          "name": "MainProcess",
          "id": 234
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "namespace_name": "pr-agent",
        "container_name": "main",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.646956042Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-github",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "57b9b6c95f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "812f816f-70e8-42b8-acad-5ad5a11619c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.650242Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "812f816f-70e8-42b8-acad-5ad5a11619c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.924817923Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/secrets"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/secrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5c059c34-1114-4b11-981d-dda1f0e440ad",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.658697Z",
    "labels": {
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5c059c34-1114-4b11-981d-dda1f0e440ad",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.088975875Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.44.18.133",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.668811377Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "i3jvq3f2gpiqz",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:35.664344587Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:35.810564337Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "be56b60f-0b09-433c-80b4-132d6354dc42",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.667485Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "be56b60f-0b09-433c-80b4-132d6354dc42",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.918390399Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4e777a82-39e1-4984-9ac9-2d6a4e7f077e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.670338Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4e777a82-39e1-4984-9ac9-2d6a4e7f077e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.619949840Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:master-prom-to-sd-monitor"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "metrics"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "Go-http-client/2.0"
      },
      "resourceName": "metrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "541973b1-f4ed-4491-a905-c9fc8a88d028",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.676663Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "541973b1-f4ed-4491-a905-c9fc8a88d028",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.608855274Z"
  },
  {
    "insertId": "186881rf5weif7",
    "jsonPayload": {
      "remoteIp": "140.82.115.175",
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14652",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.175",
      "serverIp": "10.164.12.3",
      "latency": "0.054746s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d"
      }
    },
    "timestamp": "2024-08-21T16:39:35.681643Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/e762c37992cd961582cb42d0d2515458",
    "receiveTimestamp": "2024-08-21T16:39:36.894680513Z",
    "spanId": "f9c3d8ba1a9c22ea"
  },
  {
    "insertId": "1sduhl9f1lwmis",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "140.82.115.255",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14659",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.255",
      "serverIp": "10.164.6.4",
      "latency": "0.070777s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:35.685833Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/d3a156c194e3b17cf18ec7c7431fad14",
    "receiveTimestamp": "2024-08-21T16:39:36.932409749Z",
    "spanId": "47ba389c6e88b546"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.controllerrevisions.watch",
          "resource": "apps/v1/controllerrevisions"
        }
      ],
      "methodName": "io.k8s.apps.v1.controllerrevisions.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/controllerrevisions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ad4a69a4-7c71-4b93-a6f4-4d34e22999e1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.693884Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ad4a69a4-7c71-4b93-a6f4-4d34e22999e1",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.248485878Z"
  },
  {
    "insertId": "13yskmmek4vh5",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "140.82.115.242",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14657",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.242",
      "serverIp": "10.164.12.3",
      "latency": "0.063282s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "zone": "global",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9"
      }
    },
    "timestamp": "2024-08-21T16:39:35.709171Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/74dd302ffd9a6c68498b7eaf614c3626",
    "receiveTimestamp": "2024-08-21T16:39:36.964969500Z",
    "spanId": "92e4b0b7ca2caa69"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "91564bb8-f2ac-45ff-b5c2-b88a8e754d3b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.718376Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "91564bb8-f2ac-45ff-b5c2-b88a8e754d3b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.706965687Z"
  },
  {
    "insertId": "t7d8ejln6j7knrso",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-2n44x",
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver"
      }
    },
    "timestamp": "2024-08-21T16:39:35.719697441Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:39.087487951Z"
  },
  {
    "insertId": "f9v0n86xqqzj0fet",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "namespace_name": "kube-system",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "gcp-filestore-driver",
        "pod_name": "filestore-node-2n44x"
      }
    },
    "timestamp": "2024-08-21T16:39:35.719748414Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:39.087487951Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "com.coreos.monitoring.v1.servicemonitors.watch",
          "resource": "monitoring.coreos.com/v1/servicemonitors"
        }
      ],
      "methodName": "com.coreos.monitoring.v1.servicemonitors.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "monitoring.coreos.com/v1/servicemonitors",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5096e65d-0038-4ed5-a89e-742c11fcf067",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.723046Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5096e65d-0038-4ed5-a89e-742c11fcf067",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.706965687Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b076573-6762-4855-8c5a-98372461d10f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.731927Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b076573-6762-4855-8c5a-98372461d10f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.408975016Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b440fc76-4ce5-4aaf-9d76-edb24e0e9a13",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.739625Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b440fc76-4ce5-4aaf-9d76-edb24e0e9a13",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.025140990Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a91c3149-7ab8-48cf-9c74-5a674bd1aba0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.765901Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a91c3149-7ab8-48cf-9c74-5a674bd1aba0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.616026519Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.793113184Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1mvg1pwesi2a1",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.787723524Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.207344129Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--202a0f65-yyo1"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/namespaces/gmp-system/configmaps/collector"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "10.20.10.24",
        "callerSuppliedUserAgent": "kubelet/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "core/v1/namespaces/gmp-system/configmaps/collector",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b3eff8e7-4d30-4597-92b7-e9883521ebf4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.808990Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b3eff8e7-4d30-4597-92b7-e9883521ebf4",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.000055559Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--202a0f65-yyo1"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/namespaces/gmp-system/configmaps/collector"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "10.20.10.24",
        "callerSuppliedUserAgent": "kubelet/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "core/v1/namespaces/gmp-system/configmaps/collector",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "27244930-ab14-4e4b-863a-3ea63c4d2733",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.811284Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "27244930-ab14-4e4b-863a-3ea63c4d2733",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.359989594Z"
  },
  {
    "insertId": "5onlzc8xtx9l7z9x",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "message": "OpenAI Response",
        "time": {
          "repr": "2024-08-21 16:39:35.827143+00:00",
          "timestamp": 1724258375.827143
        },
        "line": 131,
        "elapsed": {
          "seconds": 118102.490299,
          "repr": "1 day, 8:48:22.490299"
        },
        "process": {
          "id": 15,
          "name": "MainProcess"
        },
        "extra": {
          "url_path": "/v2/code/completion",
          "openai_request_id": "cmpl-9yierEyYnGkTvY8swLHiTZS2CKbWx",
          "request_id": "93f2e874-da41-4c51-b2d6-7b64517aff0a",
          "openai_response": {
            "model": "gpt-3.5-turbo-instruct",
            "id": "cmpl-9yierEyYnGkTvY8swLHiTZS2CKbWx",
            "object": "text_completion",
            "created": 1724258373,
            "usage": {
              "total_tokens": 3016,
              "completion_tokens": 193,
              "prompt_tokens": 2823
            },
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='0]] }}</h3>\\n    <h3>Modelos</h3>\\n    <table class=\"table table-bordered\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid]))\\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\\n                        <tr>\\n                            <td>{{ $deviceGroup[\\'modelname\\'] }}</td>\\n                            <td>{{ $modelId }}</td>\\n                            <td>{{ $deviceGroup[\\'quantity\\'] }}</td>\\n                        </tr>\\n                    @endforeach\\n                @endif\\n            </tbody>\\n        </table>\\n    }\\n    @endforeach\\n{{--    @php\\n     var_dump($responsavel);   \\n    @endphp\\n--}}', logprobs=None)"
            ]
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[",
          "completion": "0]] }}</h3>\n    <h3>Modelos</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}",
          "model": "gpt-3.5-turbo-instruct",
          "user": {
            "tier_end_date": 1725287318000,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "codiumate": null,
            "optout": false,
            "organization_id": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "exp": 1724261737,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email": "lf0448504@gmail.com",
            "iat": 1724258137,
            "baseUrl": null,
            "tier_level": 10,
            "email_verified": true,
            "auth_time": 1724161599,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "aud": "codium-dev-360812",
            "allowed": true,
            "name": "Luiz F"
          },
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          }
        },
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "module": "litellm_infer_engine",
        "name": "ai.litellm.litellm_infer_engine",
        "exception": null,
        "function": "generate",
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:35.827661897Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.834126492Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "7k1ktaf34ild6",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:35.829943462Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.508889568Z"
  },
  {
    "insertId": "l4j2iqfklq8j1",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "priority": 500
      },
      "remoteIp": "37.214.22.173",
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BY"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 14000,
        "configuredAction": "ALLOW"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8896",
      "status": 200,
      "responseSize": "499",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.15.3",
      "latency": "0.748085s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:35.856372Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/31e447704a92558dd370ccf308cda827",
    "receiveTimestamp": "2024-08-21T16:39:37.058994452Z",
    "spanId": "644759b0699af127"
  },
  {
    "insertId": "ea5zc158wwk1w7vq",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "line": 1112,
        "name": "copilot_proxy.utils.inference_utils",
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "process": {
          "name": "MainProcess",
          "id": 15
        },
        "level": {
          "no": 10,
          "name": "DEBUG",
          "icon": "🐞"
        },
        "function": "process",
        "message": "Prompts and results v2",
        "elapsed": {
          "repr": "1 day, 8:48:22.520911",
          "seconds": 118102.520911
        },
        "time": {
          "timestamp": 1724258375.857755,
          "repr": "2024-08-21 16:39:35.857755+00:00"
        },
        "extra": {
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "user": {
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "exp": 1724261737,
            "codiumate": null,
            "allowed": true,
            "tier_level": 10,
            "aud": "codium-dev-360812",
            "organization_id": null,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email_verified": true,
            "optout": false,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "name": "Luiz F",
            "tier_end_date": 1725287318000,
            "iat": 1724258137,
            "baseUrl": null,
            "email": "lf0448504@gmail.com",
            "auth_time": 1724161599,
            "iss": "https://securetoken.google.com/codium-dev-360812"
          },
          "request_id": "93f2e874-da41-4c51-b2d6-7b64517aff0a",
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"0]] }}</h3>\\n    <h3>Modelos</h3>\\n    <table class=\\\"table table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid]))\\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\\n                        <tr>\\n                            <td>{{ $deviceGroup['modelname'] }}</td>\\n                            <td>{{ $modelId }}</td>\\n                            <td>{{ $deviceGroup['quantity'] }}</td>\\n                        </tr>\\n                    @endforeach\\n                @endif\\n            </tbody>\\n        </table>\\n    }\\n    @endforeach\\n{{--    @php\\n     var_dump($responsavel);   \\n    @endphp\\n--}}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "inference_steps": {
              "step_01_CodeCompletion": {
                "02_completion": "0]] }}</h3>\n    <h3>Modelos</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}",
                "03_start_time": "2024-08-21 16:39:33.072730",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[",
                "04_end_time": "2024-08-21 16:39:35.857673",
                "00_system": null
              }
            },
            "user_input": {
              "relative_file_path": "resources/views/dashboards/list.blade.php",
              "context_mode": "pre_pr",
              "is_multiline": true,
              "file_diff_content": "",
              "context": [],
              "reference_snippet_messages": [
                {
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:",
                  "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty"
                },
                {
                  "type": "Clipboard",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "file_name": "resources\\views\\dashboards\\list.blade.php"
                },
                {
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "type": "Clipboard"
                },
                {
                  "type": "Clipboard",
                  "file_name": "Codiumate chat",
                  "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo"
                },
                {
                  "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                  "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                  "type": "File"
                }
              ],
              "repo_context": [],
              "extra_instructions": "",
              "remote_context": [],
              "max_remote_context": 5,
              "language": "blade",
              "configuration": {},
              "user_context": [],
              "max_repo_context": 5,
              "task": "",
              "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[",
              "user_data": "user_id=None installation_id='d9512a22-64ab-4187-87de-bc5e6405f7d3' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "is_file_diff": false,
              "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n"
            },
            "url_path": "/v2/code/completion"
          },
          "url_path": "/v2/code/completion"
        },
        "exception": null,
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "module": "inference_utils"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:35.858423278Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-analysis.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "private",
        "callerSuppliedUserAgent": "stubby_client",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.720878853Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "containeranalysis.googleapis.com",
      "methodName": "grafeas.v1.Grafeas.ListOccurrences",
      "authorizationInfo": [
        {
          "resource": "projects/0000000fbcb1f9b6",
          "permission": "containeranalysis.occurrences.list",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "filter": "kind = \"DISCOVERY\" AND noteProjectId = \"goog-analysis\" AND noteId = \"PACKAGE_VULNERABILITY\" AND resourceUrl = \"https://us-central1-docker.pkg.dev/codium-production/codium-repo/pr-agent@sha256:d6b880ea92fd5caf7f3afe4365a142e658b2c4ae40aeb948385197b6e68fbf2a\"",
        "parent": "projects/codium-production",
        "@type": "type.googleapis.com/grafeas.v1.ListOccurrencesRequest"
      }
    },
    "insertId": "1xok6suf1fc8yt",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "grafeas.v1.Grafeas.ListOccurrences",
        "project_id": "codium-production",
        "service": "containeranalysis.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:35.883363830Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:35.883363830Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "363862e1-9d78-481b-b597-ce1854d1d396",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.886600Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "363862e1-9d78-481b-b597-ce1854d1d396",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.517618616Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "543a2d6b-9746-4717-9658-19197e2dfc93",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.890075Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "543a2d6b-9746-4717-9658-19197e2dfc93",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.912997641Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
          "resource": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations"
        }
      ],
      "methodName": "io.k8s.admissionregistration.v1.mutatingwebhookconfigurations.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "admissionregistration.k8s.io/v1/mutatingwebhookconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d7b5f400-1249-4463-9209-c3737d320657",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.894681Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d7b5f400-1249-4463-9209-c3737d320657",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.766993853Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.rolebindings.watch",
          "resource": "rbac.authorization.k8s.io/v1/rolebindings"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.rolebindings.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/rolebindings",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f372be98-4ce2-43ce-b027-ae9169dc4b68",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.895519Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f372be98-4ce2-43ce-b027-ae9169dc4b68",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.912544758Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.policy.v1.poddisruptionbudgets.watch",
          "resource": "policy/v1/poddisruptionbudgets"
        }
      ],
      "methodName": "io.k8s.policy.v1.poddisruptionbudgets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "policy/v1/poddisruptionbudgets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72d1c9c4-55c0-4d05-ac58-aec5c3c3f17d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.896234Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72d1c9c4-55c0-4d05-ac58-aec5c3c3f17d",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.904602853Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.acme.v1.orders.watch",
          "resource": "acme.cert-manager.io/v1/orders"
        }
      ],
      "methodName": "io.cert-manager.acme.v1.orders.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "acme.cert-manager.io/v1/orders",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cfef6d56-ecca-48d1-8bc6-ad63df835485",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.896909Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cfef6d56-ecca-48d1-8bc6-ad63df835485",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.798869225Z"
  },
  {
    "insertId": "9gsw7f3grcgzxynh",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "exception": null,
        "module": "app",
        "line": 37,
        "extra": {
          "url": "https://api.codium.ai/v2/code/completion",
          "status_code": 200,
          "request_id": "93f2e874-da41-4c51-b2d6-7b64517aff0a",
          "on_prem_log": true,
          "source_host": "177.69.243.97",
          "method": "POST"
        },
        "elapsed": {
          "repr": "1 day, 8:48:22.560125",
          "seconds": 118102.560125
        },
        "time": {
          "repr": "2024-08-21 16:39:35.896969+00:00",
          "timestamp": 1724258375.896969
        },
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "message": "Request handled",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "process": {
          "name": "MainProcess",
          "id": 15
        },
        "name": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.897236624Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "54872c67-47ba-476c-878b-35beb18dbbfe",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.898566Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "54872c67-47ba-476c-878b-35beb18dbbfe",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.902295782Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiserver.flowcontrol.v1beta3.prioritylevelconfigurations.watch",
          "resource": "flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations"
        }
      ],
      "methodName": "io.k8s.apiserver.flowcontrol.v1beta3.prioritylevelconfigurations.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "flowcontrol.apiserver.k8s.io/v1beta3/prioritylevelconfigurations",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5633b1f3-c3de-4529-8c98-d7b0dea39c75",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.901366Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5633b1f3-c3de-4529-8c98-d7b0dea39c75",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.612754664Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/kube-system/endpoints/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/endpoints/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fd2673b3-849c-4acc-89b4-b57109681bd3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.904130Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fd2673b3-849c-4acc-89b4-b57109681bd3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.837959245Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.rbac.v1.clusterroles.watch",
          "resource": "rbac.authorization.k8s.io/v1/clusterroles"
        }
      ],
      "methodName": "io.k8s.authorization.rbac.v1.clusterroles.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "rbac.authorization.k8s.io/v1/clusterroles",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3bf1e41d-3d46-4190-9c7e-2bcba64e663f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.912672Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3bf1e41d-3d46-4190-9c7e-2bcba64e663f",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.415748936Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1e3beea3-56cc-4510-98de-d29781dfdf62",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:35.913971Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1e3beea3-56cc-4510-98de-d29781dfdf62",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.181209124Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "be32172a-bb7f-4675-bb3f-e1c99397c8fa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.915960Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "be32172a-bb7f-4675-bb3f-e1c99397c8fa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.211531404Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d441c9b5-4a1a-49cb-8613-33affc51d9d4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.916487Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d441c9b5-4a1a-49cb-8613-33affc51d9d4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.911450224Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "17142796-6e47-4e60-a218-06ab0222cd98",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.916703Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "17142796-6e47-4e60-a218-06ab0222cd98",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.112776413Z"
  },
  {
    "insertId": "7dq21h8wdiyn2sxr",
    "jsonPayload": {
      "record": {
        "line": 156,
        "elapsed": {
          "repr": "1 day, 8:52:40.896086",
          "seconds": 118360.896086
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "name": "copilot_proxy.auth.core",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134623895987904
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "exception": null,
        "extra": {},
        "process": {
          "name": "MainProcess",
          "id": 11
        },
        "time": {
          "timestamp": 1724258375.922115,
          "repr": "2024-08-21 16:39:35.922115+00:00"
        },
        "module": "core",
        "function": "verify_user_token"
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.922360684Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "oxgk0zzv86xvhnba",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "name": "copilot_proxy.auth.core",
        "line": 106,
        "elapsed": {
          "repr": "1 day, 8:52:40.896475",
          "seconds": 118360.896475
        },
        "thread": {
          "id": 134623895987904,
          "name": "AnyIO worker thread"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "time": {
          "timestamp": 1724258375.922504,
          "repr": "2024-08-21 16:39:35.922504+00:00"
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "module": "core",
        "exception": null,
        "extra": {},
        "function": "verify_minimum_tier_level",
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:35.922665206Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-attacher/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "023f762b-e91d-4b71-9f43-345454fcd615",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:35.923051Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "023f762b-e91d-4b71-9f43-345454fcd615",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.702763377Z"
  },
  {
    "insertId": "lirg538uzdtx5lvc",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "module": "v2",
        "elapsed": {
          "repr": "1 day, 8:52:40.900318",
          "seconds": 118360.900318
        },
        "exception": null,
        "function": "run_code_completion",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "line": 513,
        "time": {
          "timestamp": 1724258375.926347,
          "repr": "2024-08-21 16:39:35.926347+00:00"
        },
        "message": "Incoming request /v2/code/completion",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "extra": {
          "user": {
            "tier_level": 10,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "email": "y.borozna81@internet.ru",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "exp": 1724258892,
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            },
            "iat": 1724255292,
            "auth_time": 1724251717,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "codiumate": null,
            "allowed": true,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_end_date": 1701693510000,
            "aud": "codium-dev-360812",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "email_verified": false
          },
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "request_id": "134783e1-0832-4b8a-b75d-f49bc04f0c3f",
          "data": {
            "remote_context": [],
            "max_remote_context": 5,
            "context": [],
            "language": "django-html",
            "relative_file_path": "dish/templates/core/frontpage.html",
            "reference_snippet_messages": [
              {
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure",
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                "type": "File",
                "file_name": "templates\\base.html"
              },
              {
                "file_name": "templates\\base.html",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard"
              },
              {
                "type": "Clipboard",
                "file_name": "templates\\base.html",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
              }
            ],
            "is_multiline": false,
            "context_mode": "pre_pr",
            "is_file_diff": false,
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Г",
            "repo_context": [],
            "max_repo_context": 5,
            "user_context": [],
            "task": "",
            "file_diff_content": "",
            "user_data": {
              "user_id": null,
              "editor_version": "1.92.2",
              "editor_sub_version": null,
              "editor_type": "vscode",
              "os_version": "v20.14.0",
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd",
              "os_platform": "win32",
              "extension_version": "0.9.13"
            },
            "extra_instructions": "",
            "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n"
          },
          "on_prem_log": true
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.api.code.v2"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:35.926663931Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "aaef2c16-3269-4fc5-8896-cc62a5fcfd63",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.957825Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "aaef2c16-3269-4fc5-8896-cc62a5fcfd63",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.211414364Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.971070614Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1s41mj1e17h98",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:35.966346112Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.307663630Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ac2339bc-bd14-4e6f-8a29-85586a8c517b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.973606Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ac2339bc-bd14-4e6f-8a29-85586a8c517b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.046438004Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "036ea19f-215d-4123-8dba-6a29985cf8ed",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:35.975408Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "036ea19f-215d-4123-8dba-6a29985cf8ed",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.105728102Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "109f7638-c123-4291-8a6e-6e20801a2135",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:35.975577Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "109f7638-c123-4291-8a6e-6e20801a2135",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.716006844Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.173.0.178",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:36.010991472Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1ts54k6f44vism",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:36.005092602Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.707582424Z"
  },
  {
    "insertId": "10n1rehfujnku8",
    "jsonPayload": {
      "remoteIp": "140.82.115.115",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14984",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.115",
      "serverIp": "10.164.16.11",
      "latency": "0.054687s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-github-servic-300-2ce4c0b8",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "zone": "global",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw"
      }
    },
    "timestamp": "2024-08-21T16:39:36.015565Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/5f5737fe596cc937c6f224e4568473be",
    "receiveTimestamp": "2024-08-21T16:39:36.898213169Z",
    "spanId": "d03220b9e946cba0"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-analysis.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "private",
        "callerSuppliedUserAgent": "stubby_client",
        "requestAttributes": {
          "time": "2024-08-21T16:39:35.760529407Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "containeranalysis.googleapis.com",
      "methodName": "grafeas.v1.Grafeas.UpdateOccurrence",
      "authorizationInfo": [
        {
          "resource": "projects/0000000fbcb1f9b6/containeranalysis_occurrences/49aa8efc-336b-4b49-819d-1bdbcf9302a0",
          "permission": "containeranalysis.occurrences.update",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production/occurrences/49aa8efc-336b-4b49-819d-1bdbcf9302a0",
      "request": {
        "name": "projects/codium-production/occurrences/49aa8efc-336b-4b49-819d-1bdbcf9302a0",
        "@type": "type.googleapis.com/grafeas.v1.UpdateOccurrenceRequest",
        "occurrence": {
          "resourceUri": "https://us-central1-docker.pkg.dev/codium-production/codium-repo/pr-agent@sha256:d6b880ea92fd5caf7f3afe4365a142e658b2c4ae40aeb948385197b6e68fbf2a",
          "createTime": "2024-08-06T05:03:57.281298Z",
          "name": "projects/codium-production/occurrences/49aa8efc-336b-4b49-819d-1bdbcf9302a0",
          "updateTime": "2024-08-21T12:49:30.203992Z",
          "noteName": "projects/goog-analysis/notes/PACKAGE_VULNERABILITY",
          "discovery": {
            "lastScanTime": "2024-08-21T16:39:35.695991894Z",
            "analysisCompleted": {
              "analysisType": [
                "GO",
                "OS",
                "PYPI",
                "RUBYGEMS",
                "RUST",
                "NUGET",
                "MAVEN",
                "NPM",
                "COMPOSER"
              ]
            },
            "continuousAnalysis": "ACTIVE",
            "analysisStatus": "FINISHED_SUCCESS"
          },
          "kind": "DISCOVERY"
        }
      },
      "response": {
        "discovery": {
          "analysisCompleted": {
            "analysisType": [
              "GO",
              "OS",
              "PYPI",
              "RUBYGEMS",
              "RUST",
              "NUGET",
              "MAVEN",
              "NPM",
              "COMPOSER"
            ]
          },
          "lastScanTime": "2024-08-21T16:39:35.695991894Z",
          "continuousAnalysis": "ACTIVE",
          "analysisStatus": "FINISHED_SUCCESS"
        },
        "@type": "type.googleapis.com/grafeas.v1.Occurrence",
        "createTime": "2024-08-06T05:03:57.281298Z",
        "noteName": "projects/goog-analysis/notes/PACKAGE_VULNERABILITY",
        "updateTime": "2024-08-21T16:39:35.795945Z",
        "resourceUri": "https://us-central1-docker.pkg.dev/codium-production/codium-repo/pr-agent@sha256:d6b880ea92fd5caf7f3afe4365a142e658b2c4ae40aeb948385197b6e68fbf2a",
        "kind": "DISCOVERY",
        "name": "projects/codium-production/occurrences/49aa8efc-336b-4b49-819d-1bdbcf9302a0"
      }
    },
    "insertId": "8d8nvvf1ghe4p",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "grafeas.v1.Grafeas.UpdateOccurrence",
        "project_id": "codium-production",
        "service": "containeranalysis.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:36.022743681Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.022743681Z"
  },
  {
    "insertId": "dnazn3vwxxqfzdhm",
    "jsonPayload": {
      "record": {
        "name": "pr_agent.servers.github_app",
        "elapsed": {
          "seconds": 5265.793397,
          "repr": "1:27:45.793397"
        },
        "thread": {
          "name": "MainThread",
          "id": 134575525518208
        },
        "time": {
          "timestamp": 1724258376.032247,
          "repr": "2024-08-21 16:39:36.032247+00:00"
        },
        "process": {
          "id": 199,
          "name": "MainProcess"
        },
        "line": 256,
        "message": "Received a GitHub webhook",
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "extra": {},
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "function": "handle_github_webhooks",
        "module": "github_app",
        "exception": null
      },
      "text": "Received a GitHub webhook\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "main",
        "cluster_name": "production-cluster",
        "namespace_name": "pr-agent"
      }
    },
    "timestamp": "2024-08-21T16:39:36.032539537Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "k8s-pod/app": "pr-agent-free-github",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/secrets"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/secrets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dc4e1b64-dc85-4d11-ae8a-953b2306f0db",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.043579Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dc4e1b64-dc85-4d11-ae8a-953b2306f0db",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.812580076Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c0c8ac06-564f-415f-bc7a-7dda1dc76106",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.052209Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c0c8ac06-564f-415f-bc7a-7dda1dc76106",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.309317716Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f45573d4-2550-4110-852d-b26df69c62ae",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.057905Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f45573d4-2550-4110-852d-b26df69c62ae",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.019858889Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "27a868b2-0cbf-4ee3-bf00-b4585ffbfd0d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.058228Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "27a868b2-0cbf-4ee3-bf00-b4585ffbfd0d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.716006844Z"
  },
  {
    "insertId": "39o3afkakz17orzx",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "name": "pr_agent.servers.github_app",
        "time": {
          "repr": "2024-08-21 16:39:36.058198+00:00",
          "timestamp": 1724258376.058198
        },
        "file": {
          "name": "github_app.py",
          "path": "/app/pr_agent/servers/github_app.py"
        },
        "message": "Request handled",
        "extra": {
          "status_code": 200,
          "source_host": "140.82.115.115",
          "method": "POST",
          "url": "https://free.github.pr-agent.codium.ai/api/v1/github_webhooks",
          "on_prem_log": true
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "module": "github_app",
        "process": {
          "id": 199,
          "name": "MainProcess"
        },
        "line": 804,
        "exception": null,
        "elapsed": {
          "repr": "1:27:45.819348",
          "seconds": 5265.819348
        },
        "function": "dispatch",
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "pr-agent",
        "container_name": "main",
        "location": "us-central1",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt"
      }
    },
    "timestamp": "2024-08-21T16:39:36.058483232Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "k8s-pod/app": "pr-agent-free-github"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.cert-manager.v1.certificaterequests.watch",
          "resource": "cert-manager.io/v1/certificaterequests"
        }
      ],
      "methodName": "io.cert-manager.v1.certificaterequests.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "cert-manager.io/v1/certificaterequests",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c7fff6e8-c81f-4b32-90e7-8aab10db6bab",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.061911Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c7fff6e8-c81f-4b32-90e7-8aab10db6bab",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.916088815Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "82abd0b6-c817-4c4b-9803-813976517341",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.078979Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "82abd0b6-c817-4c4b-9803-813976517341",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.804018123Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.argoproj.v1alpha1.applications.watch",
          "resource": "argoproj.io/v1alpha1/applications"
        }
      ],
      "methodName": "io.argoproj.v1alpha1.applications.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "argoproj.io/v1alpha1/applications",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d8d7ad7a-716c-4463-bb1a-37642124f31e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.088919Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d8d7ad7a-716c-4463-bb1a-37642124f31e",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.717815796Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "21e03b89-aca9-4c48-97a5-efd0cbc97a98",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.092852Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "21e03b89-aca9-4c48-97a5-efd0cbc97a98",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.964890852Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5a2b2980-a45f-445b-9537-4e5f4dee20c1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.120168Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5a2b2980-a45f-445b-9537-4e5f4dee20c1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.837959245Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "533dc99f-1233-482d-bdf4-b5ed6f14bfaf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.136976Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "533dc99f-1233-482d-bdf4-b5ed6f14bfaf",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.016723511Z"
  },
  {
    "insertId": "1yrrcrf3mbvo2",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "140.82.115.113",
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14659",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.113",
      "serverIp": "10.164.6.4",
      "latency": "0.059512s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "zone": "global",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9"
      }
    },
    "timestamp": "2024-08-21T16:39:36.159274Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/784a3c442548610aae1602ee8ef36742",
    "receiveTimestamp": "2024-08-21T16:39:36.715522373Z",
    "spanId": "ca439f02d380de9a"
  },
  {
    "textPayload": "INFO:     10.164.8.17:55700 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "mfcdvahwn6ew0et9",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "namespace_name": "production-recursion"
      }
    },
    "timestamp": "2024-08-21T16:39:36.161426962Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.290947673Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.watch",
          "resource": "core/v1/pods"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/pods",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ebda89af-64dd-4b71-b51e-3a6834d50925",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.161913Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ebda89af-64dd-4b71-b51e-3a6834d50925",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.705388607Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5d82366a-2a53-462c-b912-28cbcca8ce3a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.166056Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5d82366a-2a53-462c-b912-28cbcca8ce3a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.611375973Z"
  },
  {
    "insertId": "msawq7ex6a2w",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 9000,
        "name": "codium-app-cloud-armor-policy"
      },
      "remoteIp": "102.176.94.239",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "previewSecurityPolicy": {
        "priority": 500,
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE"
      },
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1609",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "102.176.94.239",
      "serverIp": "10.164.10.5",
      "latency": "0.307835s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:36.174319Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/d89a3d4a5c42372b1ae945b61877522d",
    "receiveTimestamp": "2024-08-21T16:39:37.310085139Z",
    "spanId": "bc36788f06521d8c"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "97cc8c57-2bb3-427c-977a-070db5e6ce90",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.177839Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "97cc8c57-2bb3-427c-977a-070db5e6ce90",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.818160578Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "96786c3e-4ae1-4efb-bd47-5af7ce09940a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.181757Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "96786c3e-4ae1-4efb-bd47-5af7ce09940a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.650312847Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cb9993a8-a0a8-4f49-a88a-31d42557d6ff",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.190482Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cb9993a8-a0a8-4f49-a88a-31d42557d6ff",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.211328408Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.28.2 (linux/amd64) kubernetes/353f8d7/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ece7e89e-7993-4057-a461-ac909e106e0e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.190983Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ece7e89e-7993-4057-a461-ac909e106e0e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.248485878Z"
  },
  {
    "insertId": "d01n46p1os2sqixt",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "location": "us-central1",
        "pod_name": "filestore-node-8tzrb",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "gcp-filestore-driver"
      }
    },
    "timestamp": "2024-08-21T16:39:36.191531672Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-intui-be498710-iuwb",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:36.728768757Z"
  },
  {
    "insertId": "vnhbkeoms6ow49fp",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "gcp-filestore-driver",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-8tzrb",
        "namespace_name": "kube-system",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.191583319Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-intui-be498710-iuwb",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:36.728768757Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8faa52d5-ffd2-4948-a734-e0bff2837b0f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.215606Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8faa52d5-ffd2-4948-a734-e0bff2837b0f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.505967671Z"
  },
  {
    "insertId": "a9wlsxfq6ls9n",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "140.82.115.94"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://playtika.pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14657",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.94",
      "serverIp": "10.164.6.4",
      "latency": "0.068167s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9",
        "backend_service_name": "k8s1-50a1ee7b-pr-agen-pr-agent-pro-github-playtika-300-0641482d",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agen-pr-agent-pro-github-playtika--db1ctzo9"
      }
    },
    "timestamp": "2024-08-21T16:39:36.229331Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/c1bc8bfbc2567ada6017d90426c0e150",
    "receiveTimestamp": "2024-08-21T16:39:36.524352185Z",
    "spanId": "118e967b1e60f99e"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.46.41.44",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:36.237124462Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1wlfjkhe52epq",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.231636482Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.105171408Z"
  },
  {
    "insertId": "1pddg4mtc3ilj3qf",
    "jsonPayload": {
      "record": {
        "function": "verify_user_token",
        "message": "User samuelamoh2005@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "module": "core",
        "time": {
          "repr": "2024-08-21 16:39:36.238753+00:00",
          "timestamp": 1724258376.238753
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "name": "copilot_proxy.auth.core",
        "thread": {
          "id": 132437006849728,
          "name": "AnyIO worker thread"
        },
        "line": 156,
        "elapsed": {
          "repr": "1 day, 8:59:57.588206",
          "seconds": 118797.588206
        },
        "extra": {}
      },
      "text": "User samuelamoh2005@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.239004346Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "hq6zha9pwqdq9jog",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "extra": {
          "request_id": "62282ab8-3286-4889-80c7-04d3dcc3f85a",
          "user": {
            "tier_end_date": 1718651751000,
            "tier_level": 1,
            "uid": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "codiumate": null,
            "user_id": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "organization_id": null,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "samuelamoh2005@gmail.com"
                ],
                "google.com": [
                  "107653332022728942373"
                ]
              }
            },
            "baseUrl": null,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocI_4A5HgAW_FFGSUllpNIg8MlQYP9UwP46TOURayQit7E4ThA=s96-c",
            "exp": 1724260463,
            "aud": "codium-dev-360812",
            "iat": 1724256863,
            "email_verified": true,
            "allowed": true,
            "auth_time": 1723836317,
            "email": "samuelamoh2005@gmail.com",
            "optout": false,
            "name": "Samuel Amoh"
          },
          "tier_level": 1
        },
        "line": 60,
        "time": {
          "repr": "2024-08-21 16:39:36.239303+00:00",
          "timestamp": 1724258376.239303
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "elapsed": {
          "seconds": 118797.588756,
          "repr": "1 day, 8:59:57.588756"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "module": "v2",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "name": "copilot_proxy.api.users.v2",
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "function": "get_features",
        "message": "Incoming request to get feature flags"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:36.239550403Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:argocd-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apiextensions.v1.customresourcedefinitions.watch",
          "resource": "apiextensions.k8s.io/v1/customresourcedefinitions"
        }
      ],
      "methodName": "io.k8s.apiextensions.v1.customresourcedefinitions.watch",
      "requestMetadata": {
        "callerIp": "34.45.147.4",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apiextensions.k8s.io/v1/customresourcedefinitions",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f56f669d-0e02-402d-90ea-23e26de5cc09",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.240035Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argocd-manager-role-binding\" of ClusterRole \"argocd-manager-role\" to ServiceAccount \"argocd-manager/kube-system\"",
      "authentication.k8s.io/legacy-token": "system:serviceaccount:kube-system:argocd-manager",
      "authentication.k8s.io/legacy-token-autogenerated-secret": "argocd-manager-token-6hd67"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f56f669d-0e02-402d-90ea-23e26de5cc09",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.828007170Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:argo-cd:argocd-application-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.replicasets.watch",
          "resource": "apps/v1/replicasets"
        }
      ],
      "methodName": "io.k8s.apps.v1.replicasets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "argocd-application-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/replicasets",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "47472200-42db-4055-84c4-896405df3b13",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.240657Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"argo-cd-argocd-application-controller\" of ClusterRole \"argo-cd-argocd-application-controller\" to ServiceAccount \"argocd-application-controller/argo-cd\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "47472200-42db-4055-84c4-896405df3b13",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.904602853Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "73a50267-a58c-4ee2-900b-2aac24e55b0e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.262530Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "73a50267-a58c-4ee2-900b-2aac24e55b0e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.824638182Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f23129fd-555d-43ef-ae4d-3df534ea9ac1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.285457Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f23129fd-555d-43ef-ae4d-3df534ea9ac1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.912997641Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.46.41.44",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:36.309895087Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1mavaqef34ubi0",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.301568658Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:36.605472467Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:metrics-server"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "metrics"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "pod_nanny/1.8.19"
      },
      "resourceName": "metrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7127f489-7080-4d8c-9e8f-9c3403783871",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.318923Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:metrics-server\" of ClusterRole \"system:metrics-server\" to ServiceAccount \"metrics-server/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7127f489-7080-4d8c-9e8f-9c3403783871",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.818893860Z"
  },
  {
    "insertId": "hhq192em3vom",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT",
        "priority": 500
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "priority": 14000
      },
      "remoteIp": "177.69.243.97",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "17243",
      "status": 200,
      "responseSize": "770",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.69.243.97",
      "serverIp": "10.164.9.5",
      "latency": "1.787567s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.322016Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/a7676ce11b8463d742e076b69e6f6a70",
    "receiveTimestamp": "2024-08-21T16:39:38.991329525Z",
    "spanId": "a318a60df00eb46b"
  },
  {
    "insertId": "esshsdjxa3r1k73q",
    "jsonPayload": {
      "record": {
        "function": "live",
        "message": "Incoming request /v1/health/live",
        "exception": null,
        "module": "app",
        "line": 164,
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:36.343331+00:00",
          "timestamp": 1724258376.343331
        },
        "elapsed": {
          "seconds": 118103.006487,
          "repr": "1 day, 8:48:23.006487"
        },
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "process": {
          "name": "MainProcess",
          "id": 15
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.343634467Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "531f0b80-7c28-49d5-bf3c-bd07f8230b3a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.344627Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "531f0b80-7c28-49d5-bf3c-bd07f8230b3a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.610028693Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4653b56d-1c0c-4417-9cc6-6fd9f26b6965",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.347827Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4653b56d-1c0c-4417-9cc6-6fd9f26b6965",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.657785153Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ced374b7-ca94-4efe-8ad3-8952c9222c55",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.347912Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ced374b7-ca94-4efe-8ad3-8952c9222c55",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.722302310Z"
  },
  {
    "insertId": "xemonnhgdmxjynrd",
    "jsonPayload": {
      "record": {
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:36.376667+00:00",
          "timestamp": 1724258376.376667
        },
        "extra": {
          "request_id": "N/A",
          "status_code": 200,
          "method": "GET",
          "url": "http://10.164.16.6/v1/health/live",
          "source_host": "35.191.206.99",
          "on_prem_log": true
        },
        "elapsed": {
          "repr": "1 day, 8:48:23.039823",
          "seconds": 118103.039823
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "exception": null,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "name": "app",
        "function": "dispatch",
        "message": "Request handled",
        "process": {
          "id": 15,
          "name": "MainProcess"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:36.376970720Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "51de484c-53d9-4b32-a771-a8c9f24903fe",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.377894Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "51de484c-53d9-4b32-a771-a8c9f24903fe",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.912861066Z"
  },
  {
    "insertId": "besbfx2lj4y34gwy",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "name": "app",
        "time": {
          "repr": "2024-08-21 16:39:36.401115+00:00",
          "timestamp": 1724258376.401115
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "exception": null,
        "extra": {
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "102.176.94.239",
          "request_id": "62282ab8-3286-4889-80c7-04d3dcc3f85a",
          "method": "GET",
          "url": "https://api.codium.ai/v2/users/features"
        },
        "elapsed": {
          "repr": "1 day, 8:59:57.750568",
          "seconds": 118797.750568
        },
        "function": "dispatch",
        "line": 37,
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "message": "Request handled",
        "module": "app",
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.401434922Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "44d4a2a8-cbd2-46d8-9d17-7b825b32a44e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.404126Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "44d4a2a8-cbd2-46d8-9d17-7b825b32a44e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.354253277Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:36840 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "wwk8nxs8rxacpb1v",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "location": "us-central1",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production-paychex"
      }
    },
    "timestamp": "2024-08-21T16:39:36.419057710Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.083091355Z"
  },
  {
    "insertId": "8gsfo28cd8grnhlr",
    "jsonPayload": {
      "record": {
        "extra": {},
        "name": "copilot_proxy.auth.core",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 137082722834112
        },
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "function": "verify_user_token",
        "time": {
          "repr": "2024-08-21 16:39:36.420295+00:00",
          "timestamp": 1724258376.420295
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1 day, 8:55:29.318646",
          "seconds": 118529.318646
        },
        "exception": null,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "module": "core",
        "line": 156
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:36.420583673Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "av8mh3cxifc5vdea",
    "jsonPayload": {
      "record": {
        "exception": null,
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "extra": {},
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "function": "verify_minimum_tier_level",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "line": 106,
        "module": "core",
        "thread": {
          "id": 137082722834112,
          "name": "AnyIO worker thread"
        },
        "elapsed": {
          "seconds": 118529.319014,
          "repr": "1 day, 8:55:29.319014"
        },
        "name": "copilot_proxy.auth.core",
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:36.420663+00:00",
          "timestamp": 1724258376.420663
        }
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.420818790Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "1fvkg7itg9blah6t",
    "jsonPayload": {
      "record": {
        "module": "v2",
        "message": "Incoming request /v2/code/completion",
        "elapsed": {
          "seconds": 118529.322568,
          "repr": "1 day, 8:55:29.322568"
        },
        "exception": null,
        "extra": {
          "on_prem_log": true,
          "user": {
            "tier_end_date": 1725287318000,
            "codiumate": null,
            "iat": 1724258137,
            "aud": "codium-dev-360812",
            "email_verified": true,
            "allowed": true,
            "organization_id": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email": "lf0448504@gmail.com",
            "baseUrl": null,
            "exp": 1724261737,
            "name": "Luiz F",
            "auth_time": 1724161599,
            "optout": false,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_level": 10,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              }
            }
          },
          "data": {
            "user_context": [],
            "repo_context": [],
            "language": "blade",
            "is_file_diff": false,
            "reference_snippet_messages": [
              {
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure",
                "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty"
              },
              {
                "file_name": "resources\\views\\dashboards\\list.blade.php",
                "type": "Clipboard",
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData"
              },
              {
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                "type": "Clipboard",
                "file_name": "resources\\views\\dashboards\\list.blade.php"
              },
              {
                "file_name": "Codiumate chat",
                "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo",
                "type": "Clipboard"
              },
              {
                "type": "File",
                "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\","
              }
            ],
            "context_mode": "pre_pr",
            "max_remote_context": 5,
            "extra_instructions": "",
            "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto",
            "context": [],
            "file_diff_content": "",
            "user_data": {
              "editor_version": "1.92.2",
              "os_version": "v20.14.0",
              "editor_type": "vscode",
              "editor_sub_version": null,
              "user_id": null,
              "installation_id": "d9512a22-64ab-4187-87de-bc5e6405f7d3",
              "extension_version": "0.9.13",
              "os_platform": "win32"
            },
            "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
            "is_multiline": false,
            "relative_file_path": "resources/views/dashboards/list.blade.php",
            "task": "",
            "max_repo_context": 5,
            "remote_context": []
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "request_id": "d80ab85e-c753-4e46-af8d-342326fd117d"
        },
        "line": 513,
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "function": "run_code_completion",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "name": "copilot_proxy.api.code.v2",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "time": {
          "timestamp": 1724258376.424217,
          "repr": "2024-08-21 16:39:36.424217+00:00"
        }
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:36.424661530Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bfdcf977-7116-48a6-81a8-5663f3ba1ca4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.440108Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bfdcf977-7116-48a6-81a8-5663f3ba1ca4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.910720360Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "de24839f-bd4e-4137-9eb4-12667074b3a5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.444973Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "de24839f-bd4e-4137-9eb4-12667074b3a5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.126423261Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:metrics-server"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.pods.get",
          "resource": "core/v1/namespaces/kube-system/pods/metrics-server-v0.7.0-76bfc5fbfd-7prkp"
        }
      ],
      "methodName": "io.k8s.core.v1.pods.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "pod_nanny/1.8.19"
      },
      "resourceName": "core/v1/namespaces/kube-system/pods/metrics-server-v0.7.0-76bfc5fbfd-7prkp",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5f0aa40b-c9a9-4c19-bee6-a3d2cd2f89e8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.458510Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:metrics-server\" of ClusterRole \"system:metrics-server\" to ServiceAccount \"metrics-server/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5f0aa40b-c9a9-4c19-bee6-a3d2cd2f89e8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.309317716Z"
  },
  {
    "insertId": "lsjn7rhcewncljr8",
    "jsonPayload": {
      "record": {
        "module": "litellm_infer_engine",
        "name": "ai.litellm.litellm_infer_engine",
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "function": "generate",
        "time": {
          "timestamp": 1724258376.470421,
          "repr": "2024-08-21 16:39:36.470421+00:00"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "line": 131,
        "process": {
          "name": "MainProcess",
          "id": 11
        },
        "exception": null,
        "message": "OpenAI Response",
        "extra": {
          "openai_request_id": "cmpl-9yieu0LmTgS72pkZEuD9NEOdCA9gS",
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "request_id": "134783e1-0832-4b8a-b75d-f49bc04f0c3f",
          "user": {
            "iat": 1724255292,
            "auth_time": 1724251717,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "aud": "codium-dev-360812",
            "exp": 1724258892,
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_end_date": 1701693510000,
            "tier_level": 10,
            "email_verified": false,
            "codiumate": null,
            "email": "y.borozna81@internet.ru",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "allowed": true,
            "firebase": {
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              },
              "sign_in_provider": "custom"
            }
          },
          "url_path": "/v2/code/completion",
          "model": "gpt-3.5-turbo-instruct",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Г",
          "completion": "лавная</a>\n                </li>",
          "openai_response": {
            "object": "text_completion",
            "id": "cmpl-9yieu0LmTgS72pkZEuD9NEOdCA9gS",
            "created": 1724258376,
            "model": "gpt-3.5-turbo-instruct",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='лавная</a>\\n                </li>', logprobs=None)"
            ],
            "usage": {
              "completion_tokens": 9,
              "total_tokens": 1768,
              "prompt_tokens": 1759
            }
          }
        },
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "elapsed": {
          "repr": "1 day, 8:52:41.444392",
          "seconds": 118361.444392
        }
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.470851620Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7b61fad-0a67-43f2-94f9-2bbc04a8efc1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.503865Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7b61fad-0a67-43f2-94f9-2bbc04a8efc1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.238611288Z"
  },
  {
    "insertId": "dhz4jltccn0oef3o",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "name": "copilot_proxy.utils.inference_utils",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "extra": {
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"\\u043b\\u0430\\u0432\\u043d\\u0430\\u044f</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "user_input": {
              "extra_instructions": "",
              "reference_snippet_messages": [
                {
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                  "file_name": "Project directory structure:",
                  "type": "DirectoryStructure"
                },
                {
                  "type": "File",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                  "file_name": "templates\\base.html"
                },
                {
                  "type": "Clipboard",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html"
                },
                {
                  "type": "Clipboard",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html"
                }
              ],
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "file_diff_content": "",
              "language": "django-html",
              "context_mode": "pre_pr",
              "is_multiline": false,
              "user_context": [],
              "relative_file_path": "dish/templates/core/frontpage.html",
              "max_remote_context": 5,
              "remote_context": [],
              "task": "",
              "is_file_diff": false,
              "configuration": {},
              "repo_context": [],
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Г",
              "context": [],
              "max_repo_context": 5,
              "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n"
            },
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "00_system": null,
                "04_end_time": "2024-08-21 16:39:36.507372",
                "02_completion": "лавная</a>\n                </li>",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Г",
                "03_start_time": "2024-08-21 16:39:35.951841"
              }
            }
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "url_path": "/v2/code/completion",
          "request_id": "134783e1-0832-4b8a-b75d-f49bc04f0c3f",
          "user": {
            "tier_level": 10,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "email": "y.borozna81@internet.ru",
            "auth_time": 1724251717,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "exp": 1724258892,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "codiumate": null,
            "tier_end_date": 1701693510000,
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iat": 1724255292,
            "aud": "codium-dev-360812",
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "email_verified": false
          }
        },
        "line": 1112,
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "message": "Prompts and results v2",
        "process": {
          "name": "MainProcess",
          "id": 11
        },
        "module": "inference_utils",
        "elapsed": {
          "repr": "1 day, 8:52:41.481410",
          "seconds": 118361.48141
        },
        "time": {
          "repr": "2024-08-21 16:39:36.507439+00:00",
          "timestamp": 1724258376.507439
        },
        "function": "process",
        "exception": null,
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.507982881Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "fcf81ooxa492h083",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "extra": {
          "method": "POST",
          "url": "https://api.codium.ai/v2/code/completion",
          "request_id": "134783e1-0832-4b8a-b75d-f49bc04f0c3f",
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "37.214.22.173"
        },
        "elapsed": {
          "repr": "1 day, 8:52:41.510647",
          "seconds": 118361.510647
        },
        "function": "dispatch",
        "message": "Request handled",
        "time": {
          "timestamp": 1724258376.536676,
          "repr": "2024-08-21 16:39:36.536676+00:00"
        },
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "line": 37,
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "module": "app",
        "name": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:36.536942039Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "tfy4h5fpitcbm",
    "jsonPayload": {
      "remoteIp": "102.176.94.239",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 9000
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 500,
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1609",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "102.176.94.239",
      "serverIp": "10.164.15.3",
      "latency": "0.289945s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:36.564479Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/52008011ff3037db069bc2f66df49852",
    "receiveTimestamp": "2024-08-21T16:39:38.192021205Z",
    "spanId": "4a7a6047d64de0a0"
  },
  {
    "insertId": "o52lfmf1dl2kq",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IN"
        },
        "tlsJa3Fingerprint": "b765f4534bce3740f769b0254478e9bd"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "priority": 3000
      },
      "remoteIp": "122.171.21.25"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/tests/configuration?language=java",
      "requestSize": "1072",
      "status": 200,
      "responseSize": "1838",
      "userAgent": "okhttp/4.10.0",
      "remoteIp": "122.171.21.25",
      "serverIp": "10.164.15.3",
      "latency": "0.282609s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:36.599732Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/3750e467cc425f0bf80c60d316b56163",
    "receiveTimestamp": "2024-08-21T16:39:38.007004066Z",
    "spanId": "f4c794904fe1f139"
  },
  {
    "insertId": "kqpurcbwh22mvoxk",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "thread": {
          "name": "MainThread",
          "id": 138722961107840
        },
        "line": 164,
        "function": "live",
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "elapsed": {
          "repr": "3 days, 6:29:17.594904",
          "seconds": 282557.594904
        },
        "time": {
          "timestamp": 1724258376.618069,
          "repr": "2024-08-21 16:39:36.618069+00:00"
        },
        "process": {
          "id": 19,
          "name": "MainProcess"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "extra": {
          "on_prem_log": true
        },
        "message": "Incoming request /v1/health/live",
        "module": "app",
        "name": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "namespace_name": "production-paychex",
        "location": "us-central1",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.618361177Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.083091355Z"
  },
  {
    "insertId": "c37tmpyfmmqihjpe",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:36.644828+00:00",
          "timestamp": 1724258376.644828
        },
        "thread": {
          "name": "MainThread",
          "id": 138722961107840
        },
        "message": "Request handled",
        "module": "app",
        "extra": {
          "method": "GET",
          "status_code": 200,
          "request_id": "N/A",
          "on_prem_log": true,
          "url": "http://10.164.0.6:5432/v1/health/live",
          "source_host": "10.164.0.1"
        },
        "name": "app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "exception": null,
        "function": "dispatch",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "elapsed": {
          "seconds": 282557.621663,
          "repr": "3 days, 6:29:17.621663"
        },
        "line": 37,
        "process": {
          "id": 19,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "container_name": "proxy",
        "namespace_name": "production-paychex",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.645135598Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.083091355Z"
  },
  {
    "insertId": "0dobwhwzbadghn08",
    "jsonPayload": {
      "record": {
        "line": 156,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "elapsed": {
          "repr": "1 day, 8:52:41.619310",
          "seconds": 118361.61931
        },
        "extra": {},
        "process": {
          "name": "MainProcess",
          "id": 11
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "function": "verify_user_token",
        "message": "User samuelamoh2005@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "name": "copilot_proxy.auth.core",
        "time": {
          "repr": "2024-08-21 16:39:36.645339+00:00",
          "timestamp": 1724258376.645339
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134623895987904
        },
        "module": "core",
        "exception": null
      },
      "text": "User samuelamoh2005@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.645604080Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "t44zjbfzl3qwwe8s",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "name": "copilot_proxy.api.users.v2",
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "line": 60,
        "message": "Incoming request to get feature flags",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "function": "get_features",
        "elapsed": {
          "seconds": 118361.619872,
          "repr": "1 day, 8:52:41.619872"
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "module": "v2",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:36.645901+00:00",
          "timestamp": 1724258376.645901
        },
        "extra": {
          "tier_level": 1,
          "user": {
            "exp": 1724260463,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "samuelamoh2005@gmail.com"
                ],
                "google.com": [
                  "107653332022728942373"
                ]
              }
            },
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocI_4A5HgAW_FFGSUllpNIg8MlQYP9UwP46TOURayQit7E4ThA=s96-c",
            "optout": false,
            "user_id": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "codiumate": null,
            "iat": 1724256863,
            "sub": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "allowed": true,
            "auth_time": 1723836317,
            "tier_level": 1,
            "name": "Samuel Amoh",
            "email_verified": true,
            "email": "samuelamoh2005@gmail.com",
            "uid": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "aud": "codium-dev-360812",
            "organization_id": null,
            "tier_end_date": 1718651751000,
            "baseUrl": null
          },
          "request_id": "23512b43-0fb1-43af-9f2a-9eb444be9eba"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.646122277Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "135fd61b-e320-48d5-a7eb-6f87797e4ad4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.674588Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "135fd61b-e320-48d5-a7eb-6f87797e4ad4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.695820585Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bee5302e-b8ab-41aa-8ff6-3d9374090c49",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.679912Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bee5302e-b8ab-41aa-8ff6-3d9374090c49",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.732334038Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f5eaafbe-6ae2-4f48-83cc-ef5e3e2864b3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.686259Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f5eaafbe-6ae2-4f48-83cc-ef5e3e2864b3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.425783104Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.componentstatuses.list",
          "resource": "core/v1/componentstatuses"
        }
      ],
      "methodName": "io.k8s.core.v1.componentstatuses.list",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/componentstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b16c6bfa-3d4d-45f5-b2e9-3486a1c066a5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.688210Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "k8s.io/deprecated": "true"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b16c6bfa-3d4d-45f5-b2e9-3486a1c066a5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.770022876Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.46.41.44",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:36.702762367Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1npzbxkf3499jg",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:36.697991628Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.411932483Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e1b3912a-e3de-434a-a32b-f7fdcfb4e573",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.722210Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e1b3912a-e3de-434a-a32b-f7fdcfb4e573",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.010128874Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ac550306-d44b-43b6-9a19-b7b4f963cba9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.723748Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ac550306-d44b-43b6-9a19-b7b4f963cba9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:36.918509394Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "83e3e369-539f-4742-a38e-28c2094c37d0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.725Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "83e3e369-539f-4742-a38e-28c2094c37d0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.907429541Z"
  },
  {
    "insertId": "ftbvcteq33fu0xuo",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "line": 164,
        "exception": null,
        "time": {
          "timestamp": 1724258376.725719,
          "repr": "2024-08-21 16:39:36.725719+00:00"
        },
        "extra": {
          "on_prem_log": true
        },
        "elapsed": {
          "repr": "1 day, 9:08:26.521474",
          "seconds": 119306.521474
        },
        "message": "Incoming request /v1/health/live",
        "function": "live",
        "name": "app",
        "module": "app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8"
      }
    },
    "timestamp": "2024-08-21T16:39:36.726006024Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.componentstatuses.list",
          "resource": "core/v1/componentstatuses"
        }
      ],
      "methodName": "io.k8s.core.v1.componentstatuses.list",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/componentstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6f1699d7-56d6-4774-921d-0ccd44bc2a95",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.730744Z",
    "labels": {
      "k8s.io/deprecated": "true",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6f1699d7-56d6-4774-921d-0ccd44bc2a95",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.012298524Z"
  },
  {
    "insertId": "zqk8ocw64q7ag8sh",
    "jsonPayload": {
      "text": "User anudeep_gupta@intuit.com will use enterprise openAI org. tier:30 codiumate:None optout:True\n",
      "record": {
        "module": "core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "name": "copilot_proxy.auth.core",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "time": {
          "timestamp": 1724258376.731033,
          "repr": "2024-08-21 16:39:36.731033+00:00"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134620481828544
        },
        "extra": {},
        "message": "User anudeep_gupta@intuit.com will use enterprise openAI org. tier:30 codiumate:None optout:True",
        "exception": null,
        "line": 156,
        "elapsed": {
          "seconds": 118361.553091,
          "repr": "1 day, 8:52:41.553091"
        },
        "function": "verify_user_token",
        "process": {
          "name": "MainProcess",
          "id": 14
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:36.731312963Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "98iel6jmdkqvp22n",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:36.731929+00:00",
          "timestamp": 1724258376.731929
        },
        "elapsed": {
          "repr": "1 day, 8:52:41.553987",
          "seconds": 118361.553987
        },
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "line": 37,
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "module": "app",
        "exception": null,
        "function": "dispatch",
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "extra": {
          "source_host": "122.171.21.25",
          "status_code": 200,
          "url": "https://api.codium.ai/v2/tests/configuration?language=java",
          "on_prem_log": true,
          "method": "GET",
          "request_id": "8b24f057-3767-43f9-b8ac-174a4b7db832"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.732146153Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "i3mjlyyqy8c5khbm",
    "jsonPayload": {
      "record": {
        "line": 37,
        "elapsed": {
          "repr": "1 day, 9:08:26.543561",
          "seconds": 119306.543561
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "module": "app",
        "extra": {
          "status_code": 200,
          "method": "GET",
          "on_prem_log": true,
          "request_id": "N/A",
          "source_host": "10.164.1.1",
          "url": "http://10.164.1.4:5432/v1/health/live"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "timestamp": 1724258376.747806,
          "repr": "2024-08-21 16:39:36.747806+00:00"
        },
        "name": "app",
        "function": "dispatch",
        "exception": null,
        "message": "Request handled"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:36.748099907Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "12fcf820-41ca-45ae-b200-be9413c2add9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.773761Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "12fcf820-41ca-45ae-b200-be9413c2add9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.512288886Z"
  },
  {
    "insertId": "f08rfxrcez0833jo",
    "jsonPayload": {
      "record": {
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:36.778009+00:00",
          "timestamp": 1724258376.778009
        },
        "module": "app",
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "line": 37,
        "message": "Request handled",
        "extra": {
          "status_code": 200,
          "method": "GET",
          "request_id": "23512b43-0fb1-43af-9f2a-9eb444be9eba",
          "source_host": "102.176.94.239",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/users/features"
        },
        "elapsed": {
          "repr": "1 day, 8:52:41.751980",
          "seconds": 118361.75198
        },
        "exception": null,
        "function": "dispatch"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:36.778267569Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "y4ovevf1o1bto",
    "jsonPayload": {
      "remoteIp": "187.74.57.202",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 1000,
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd",
        "remoteIpInfo": {
          "regionCode": "BR"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1475",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "187.74.57.202",
      "serverIp": "10.164.1.4",
      "latency": "0.169345s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:36.790604Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/6ec46c291f86c110de023089f95e0ddd",
    "receiveTimestamp": "2024-08-21T16:39:37.691146602Z",
    "spanId": "1df936e0e02100bd"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "01c8af78-ffe5-4c17-9881-3aee2dca14e5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.815711Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "01c8af78-ffe5-4c17-9881-3aee2dca14e5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.109807006Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ac749555-f516-4c1b-8896-4c8ec4f8ad5a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.816675Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ac749555-f516-4c1b-8896-4c8ec4f8ad5a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.903202597Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e64d94d1-50f5-435b-9f49-511a99418c8c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.828625Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e64d94d1-50f5-435b-9f49-511a99418c8c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.041624703Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "48647219-2bc5-44e8-b331-e64af2e21ae6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.852596Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "48647219-2bc5-44e8-b331-e64af2e21ae6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.709671078Z"
  },
  {
    "insertId": "i3ja8sl8ne3o8kcw",
    "jsonPayload": {
      "record": {
        "exception": null,
        "time": {
          "timestamp": 1724258376.868985,
          "repr": "2024-08-21 16:39:36.868985+00:00"
        },
        "extra": {
          "source_host": "187.74.57.202",
          "method": "POST",
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "on_prem_log": true,
          "status_code": 200,
          "request_id": "N/A"
        },
        "function": "dispatch",
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "message": "Request handled",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "line": 37,
        "module": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "elapsed": {
          "repr": "1 day, 9:08:26.664740",
          "seconds": 119306.66474
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:36.869241903Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "22c49577-08e1-47d7-a931-2839a9c507ce",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.872997Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "22c49577-08e1-47d7-a931-2839a9c507ce",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.317333839Z"
  },
  {
    "insertId": "1qgfqzig11o9r88",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "140.82.115.246",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14430",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.246",
      "serverIp": "10.164.8.25",
      "latency": "0.061802s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "project_id": "codium-production",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716"
      }
    },
    "timestamp": "2024-08-21T16:39:36.877632Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/9d426b7205a4d0f4234d3ea487a207a5",
    "receiveTimestamp": "2024-08-21T16:39:37.401830476Z",
    "spanId": "199658390d901159"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7ca6f412-737c-4728-82a1-42e30c85f5c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.885284Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7ca6f412-737c-4728-82a1-42e30c85f5c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.798869225Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:53644 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "qqm6mjv9cszxzaab",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:36.886152734Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d5d0f713-b6ab-4a6a-babd-3009743c94fa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.889600Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d5d0f713-b6ab-4a6a-babd-3009743c94fa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.110994524Z"
  },
  {
    "insertId": "up2wpvdsm23ldb6w",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:36.901719+00:00",
          "timestamp": 1724258376.901719
        },
        "elapsed": {
          "repr": "1 day, 8:48:23.065210",
          "seconds": 118103.06521
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "name": "app",
        "message": "Incoming request /v1/health/live",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "line": 164,
        "function": "live",
        "exception": null
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:36.902028457Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "insertId": "5k0a3afk7nvhe",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 14000,
        "configuredAction": "ALLOW"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 500
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "37.214.22.173",
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BY"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8902",
      "status": 200,
      "responseSize": "493",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.10.5",
      "latency": "0.708196s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:36.915649Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/9c81d628c8263c76029208540c226098",
    "receiveTimestamp": "2024-08-21T16:39:38.381299424Z",
    "spanId": "ca336af1f93668e6"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "685e2eac-e649-4d0a-90be-323daeb7333c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.917746Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "685e2eac-e649-4d0a-90be-323daeb7333c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.539099605Z"
  },
  {
    "insertId": "pmd027u1gh9q9905",
    "jsonPayload": {
      "record": {
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "function": "dispatch",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "module": "app",
        "exception": null,
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118103.087285,
          "repr": "1 day, 8:48:23.087285"
        },
        "name": "app",
        "time": {
          "repr": "2024-08-21 16:39:36.923794+00:00",
          "timestamp": 1724258376.923794
        },
        "message": "Request handled",
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "extra": {
          "url": "http://10.164.16.6/v1/health/live",
          "method": "GET",
          "source_host": "35.191.206.98",
          "request_id": "N/A",
          "status_code": 200,
          "on_prem_log": true
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh"
      }
    },
    "timestamp": "2024-08-21T16:39:36.924076750Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "insertId": "y6va4pw8g3vb3e7o",
    "jsonPayload": {
      "_CMDLINE": "/home/kubernetes/bin/kubelet --v=2 --cloud-provider=external --experimental-mounter-path=/home/kubernetes/containerized_mounter/mounter --cert-dir=/var/lib/kubelet/pki/ --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=100 --register-with-taints=client=playtika:NoSchedule --volume-plugin-dir=/home/kubernetes/flexvolume --node-status-max-images=25 --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --registry-qps=10 --registry-burst=20 --config /home/kubernetes/kubelet-config.yaml \"--pod-sysctls=net.core.somaxconn=1024,net.ipv4.conf.all.accept_redirects=0,net.ipv4.conf.all.forwarding=1,net.ipv4.conf.all.route_localnet=1,net.ipv4.conf.default.forwarding=1,net.ipv4.ip_forward=1,net.ipv4.tcp_fin_timeout=60,net.ipv4.tcp_keepalive_intvl=60,net.ipv4.tcp_keepalive_probes=5,net.ipv4.tcp_keepalive_time=300,net.ipv4.tcp_rmem=4096 87380 6291456,net.ipv4.tcp_syn_retries=6,net.ipv4.tcp_tw_reuse=0,net.ipv4.tcp_wmem=4096 16384 4194304,net.ipv4.udp_rmem_min=4096,net.ipv4.udp_wmem_min=4096,net.ipv6.conf.all.disable_ipv6=1,net.ipv6.conf.default.accept_ra=0,net.ipv6.conf.default.disable_ipv6=1,net.netfilter.nf_conntrack_generic_timeout=600,net.netfilter.nf_conntrack_tcp_be_liberal=1,net.netfilter.nf_conntrack_tcp_timeout_close_wait=3600,net.netfilter.nf_conntrack_tcp_timeout_established=86400\" --cgroup-driver=systemd --pod-infra-container-image=gke.gcr.io/pause:3.8@sha256:880e63f94b145e46f1b1082bb71b85e21f16b99b180b9996407d61240ceb9830 --version=v1.27.16-gke.1008000",
      "_HOSTNAME": "gke-production-clust-production-playt-aaebb4fb-h54t",
      "SYSLOG_IDENTIFIER": "kubelet",
      "_COMM": "kubelet",
      "_GID": "0",
      "_SYSTEMD_CGROUP": "/system.slice/kubelet.service",
      "_BOOT_ID": "8d3e46554f584fabbd35fbd880d89064",
      "_SYSTEMD_INVOCATION_ID": "38e2b6df508d44dd9842f4ab89265f7a",
      "SYSLOG_FACILITY": "3",
      "_MACHINE_ID": "f872549a0b61e9ef96a2a4a4059bf7ee",
      "_CAP_EFFECTIVE": "1ffffffffff",
      "_EXE": "/home/kubernetes/bin/kubelet",
      "_SYSTEMD_SLICE": "system.slice",
      "_SYSTEMD_UNIT": "kubelet.service",
      "PRIORITY": "6",
      "MESSAGE": "I0821 16:39:36.929188    2241 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-production-clust-production-playt-aaebb4fb-h54t\" status=Running",
      "_TRANSPORT": "stdout",
      "_RUNTIME_SCOPE": "system",
      "_STREAM_ID": "1835926b694944f4868065eedfb50d10",
      "_PID": "2241",
      "_UID": "0"
    },
    "resource": {
      "type": "k8s_node",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "node_name": "gke-production-clust-production-playt-aaebb4fb-h54t",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.929288Z",
    "logName": "projects/codium-production/logs/kubelet",
    "receiveTimestamp": "2024-08-21T16:39:40.252384098Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f91aab76-17d9-47c2-ae9d-9bc38198a324",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.945043Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f91aab76-17d9-47c2-ae9d-9bc38198a324",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.425783104Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d637e466-ad71-4fd4-b33f-ebf7c85289c6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.949280Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d637e466-ad71-4fd4-b33f-ebf7c85289c6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.214395226Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "411683fd-2611-40ce-8da1-a8a83bed236f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:36.960821Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "411683fd-2611-40ce-8da1-a8a83bed236f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.677109861Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3bd68b32-701b-4717-9a6b-8f69677aa972",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:36.963188Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3bd68b32-701b-4717-9a6b-8f69677aa972",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.811601112Z"
  },
  {
    "insertId": "sayquctck9i3mtqw",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "thread": {
          "id": 132437006849728,
          "name": "AnyIO worker thread"
        },
        "function": "verify_user_token",
        "extra": {},
        "elapsed": {
          "repr": "1 day, 8:59:58.327055",
          "seconds": 118798.327055
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "module": "core",
        "time": {
          "repr": "2024-08-21 16:39:36.977602+00:00",
          "timestamp": 1724258376.977602
        },
        "name": "copilot_proxy.auth.core",
        "exception": null,
        "line": 156,
        "process": {
          "id": 24,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:36.977875183Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "l63hk0niwy3wvsdv",
    "jsonPayload": {
      "record": {
        "exception": null,
        "function": "verify_minimum_tier_level",
        "thread": {
          "id": 132437006849728,
          "name": "AnyIO worker thread"
        },
        "line": 106,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "module": "core",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:36.978008+00:00",
          "timestamp": 1724258376.978008
        },
        "elapsed": {
          "repr": "1 day, 8:59:58.327461",
          "seconds": 118798.327461
        },
        "extra": {},
        "name": "copilot_proxy.auth.core",
        "process": {
          "name": "MainProcess",
          "id": 24
        }
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:36.978152208Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "xcaxpzrs06sbgo96",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:36.981348+00:00",
          "timestamp": 1724258376.981348
        },
        "module": "v2",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "line": 513,
        "elapsed": {
          "seconds": 118798.330801,
          "repr": "1 day, 8:59:58.330801"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "exception": null,
        "extra": {
          "request_id": "106ea659-851d-4b6d-9d2f-0b3bfef5d963",
          "on_prem_log": true,
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "data": {
            "language": "django-html",
            "user_context": [],
            "extra_instructions": "",
            "file_diff_content": "",
            "is_file_diff": false,
            "context_mode": "pre_pr",
            "repo_context": [],
            "remote_context": [],
            "doc_context_suffix": "в</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
            "is_multiline": false,
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Гла",
            "max_repo_context": 5,
            "context": [],
            "task": "",
            "user_data": {
              "editor_version": "1.92.2",
              "os_platform": "win32",
              "user_id": null,
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd",
              "extension_version": "0.9.13",
              "editor_type": "vscode",
              "os_version": "v20.14.0",
              "editor_sub_version": null
            },
            "reference_snippet_messages": [
              {
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:"
              },
              {
                "file_name": "templates\\base.html",
                "type": "File",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>"
              },
              {
                "type": "Clipboard",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "file_name": "templates\\base.html"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard",
                "file_name": "templates\\base.html"
              }
            ],
            "relative_file_path": "dish/templates/core/frontpage.html",
            "max_remote_context": 5
          },
          "user": {
            "codiumate": null,
            "email_verified": false,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "auth_time": 1724251717,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "email": "y.borozna81@internet.ru",
            "iat": 1724255292,
            "aud": "codium-dev-360812",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "exp": 1724258892,
            "tier_level": 10,
            "allowed": true,
            "tier_end_date": 1701693510000,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              }
            }
          }
        },
        "function": "run_code_completion",
        "name": "copilot_proxy.api.code.v2",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "message": "Incoming request /v2/code/completion",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        }
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:36.981661518Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9e4dafe0-3d2b-4064-aeb8-2f950e45aa8d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:36.985811Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9e4dafe0-3d2b-4064-aeb8-2f950e45aa8d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.626760717Z"
  },
  {
    "insertId": "9q4vcgf8kowmm",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "49.206.131.63",
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd",
        "remoteIpInfo": {
          "regionCode": "IN"
        }
      },
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 15000,
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1644",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "49.206.131.63",
      "serverIp": "10.164.17.14",
      "latency": "0.280614s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.021882Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/1b6f10f01a915cfaadd10435802008c4",
    "receiveTimestamp": "2024-08-21T16:39:37.557546792Z",
    "spanId": "1b0de49834705be9"
  },
  {
    "insertId": "5b0n2hvvlnbgxs9f",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "exception": null,
        "message": "Incoming request /v1/health/live",
        "module": "app",
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "line": 164,
        "time": {
          "repr": "2024-08-21 16:39:37.021915+00:00",
          "timestamp": 1724258377.021915
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "extra": {
          "on_prem_log": true
        },
        "name": "app",
        "elapsed": {
          "seconds": 118529.920266,
          "repr": "1 day, 8:55:29.920266"
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "function": "live"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.022231667Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "n0rcrnddeazaveiy",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "extra": {
          "method": "GET",
          "request_id": "N/A",
          "status_code": 200,
          "url": "http://10.164.9.5/v1/health/live",
          "source_host": "35.191.207.184",
          "on_prem_log": true
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "name": "app",
        "elapsed": {
          "seconds": 118529.94118,
          "repr": "1 day, 8:55:29.941180"
        },
        "function": "dispatch",
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:37.042829+00:00",
          "timestamp": 1724258377.042829
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.043139420Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "69584e7b-19e3-490a-9b3f-71703b089028",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.058624Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "69584e7b-19e3-490a-9b3f-71703b089028",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.923800667Z"
  },
  {
    "insertId": "pf2nvdofw0utokd2",
    "jsonPayload": {
      "text": "OpenAI returned a truncated response. Consider increasing the max_tokens.\n",
      "record": {
        "level": {
          "name": "WARNING",
          "no": 30,
          "icon": "⚠️"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "extra": {
          "user": {
            "exp": 1724261737,
            "auth_time": 1724161599,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "optout": false,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              }
            },
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email": "lf0448504@gmail.com",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "tier_end_date": 1725287318000,
            "email_verified": true,
            "baseUrl": null,
            "codiumate": null,
            "tier_level": 10,
            "name": "Luiz F",
            "organization_id": null,
            "iat": 1724258137,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "aud": "codium-dev-360812",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "allowed": true
          },
          "data": {
            "top_p": 0.9,
            "max_tokens": 75,
            "stop": [
              "\n\n"
            ],
            "frequency_penalty": 0,
            "presence_penalty": 0,
            "metadata": {
              "model_info": {
                "db_model": false,
                "id": "6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7"
              },
              "project_name": "code/completion",
              "tags": [
                "c6c2e7b6-c83c-4f40-8272-2a87ec8fddf3"
              ],
              "run_name": "CodeCompletion",
              "deployment": "gpt-3.5-turbo-instruct",
              "hidden_params": "HiddenParams(original_response='{\"id\": \"cmpl-9yiet4xZ7wl1ABwEynuOuPkCeEtXl\", \"choices\": [{\"finish_reason\": \"length\", \"index\": 0, \"logprobs\": null, \"text\": \"o]] }}</h3>\\\\n    <table class=\\\\\"table table-bordered\\\\\">\\\\n        <thead>\\\\n            <tr>\\\\n                <th>Modelo Nome</th>\\\\n                    <th>Modelo ID</th>\\\\n                    <th>Quantidade</th>\\\\n                </tr>\\\\n            </thead>\\\\n            <tbody>\\\\n                @if(isset($devices[$deposit->holderid\"}], \"created\": 1724258375, \"model\": \"gpt-3.5-turbo-instruct\", \"object\": \"text_completion\", \"system_fingerprint\": null, \"usage\": {\"completion_tokens\": 75, \"prompt_tokens\": 3608, \"total_tokens\": 3683}}', model_id='6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7', api_base=None, litellm_call_id='a5adf10b-13e4-444a-9c63-70e9dddfc010', optional_params={'temperature': 0.1, 'top_p': 0.9, 'n': 1, 'stop': ['\\n\\n'], 'max_tokens': 75, 'presence_penalty': 0, 'frequency_penalty': 0, 'max_retries': 0, 'extra_body': {}}, response_cost=0.005562)",
              "model_group": "code-completion",
              "api_base": null,
              "caching_groups": null
            },
            "temperature": 0.1,
            "n": 1,
            "suffix": null
          },
          "request_id": "c6c2e7b6-c83c-4f40-8272-2a87ec8fddf3",
          "url_path": "/v2/code/completion",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          }
        },
        "time": {
          "timestamp": 1724258377.062273,
          "repr": "2024-08-21 16:39:37.062273+00:00"
        },
        "module": "litellm_infer_engine",
        "elapsed": {
          "seconds": 119073.629574,
          "repr": "1 day, 9:04:33.629574"
        },
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "exception": null,
        "function": "generate",
        "name": "ai.litellm.litellm_infer_engine",
        "message": "OpenAI returned a truncated response. Consider increasing the max_tokens.",
        "line": 124,
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:37.062644214Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "28428961-ecfe-4d23-91a2-4097e262e7e9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.066539Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "28428961-ecfe-4d23-91a2-4097e262e7e9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.506917752Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "46f4831d-8d6c-4d50-ad3a-5bc28e8f573a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.075585Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "46f4831d-8d6c-4d50-ad3a-5bc28e8f573a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:37.711356709Z"
  },
  {
    "insertId": "5uvz0sgxtnzj6fp4",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "function": "live",
        "elapsed": {
          "repr": "3 days, 6:30:16.362809",
          "seconds": 282616.362809
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "id": 135434384432000,
          "name": "MainThread"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "name": "app",
        "message": "Incoming request /v1/health/live",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "module": "app",
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:37.076139+00:00",
          "timestamp": 1724258377.076139
        },
        "line": 164,
        "extra": {
          "on_prem_log": true
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production-recursion",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.076449115Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.290947673Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6292dd76-800e-47af-9f4a-260f24c001d8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.079689Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6292dd76-800e-47af-9f4a-260f24c001d8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.712879953Z"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:37Z\" level=info msg=\"finished unary call with code OK\" grpc.code=OK grpc.method=Check grpc.service=grpc.health.v1.Health grpc.start_time=\"2024-08-21T16:39:37Z\" grpc.time_ms=0.02 span.kind=server system=grpc",
    "insertId": "arj7myaleaiactry",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "argo-cd-argocd-repo-server-68c4fd64bb-qkr6b",
        "namespace_name": "argo-cd",
        "container_name": "repo-server",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.080081401Z",
    "severity": "ERROR",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/pod-template-hash": "68c4fd64bb",
      "k8s-pod/app_kubernetes_io/component": "repo-server",
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6",
      "k8s-pod/app_kubernetes_io/version": "v2.10.5",
      "k8s-pod/app_kubernetes_io/name": "argocd-repo-server"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:37.266790542Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "068dfea1-2559-4c96-98de-0408196fd806",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.089114Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "068dfea1-2559-4c96-98de-0408196fd806",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.514459420Z"
  },
  {
    "insertId": "a9w7k0i8kwgzq5pq",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "function": "generate",
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "line": 131,
        "name": "ai.litellm.litellm_infer_engine",
        "exception": null,
        "module": "litellm_infer_engine",
        "extra": {
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "request_id": "cb2d624e-86de-421b-9d72-d2823b039e38:985c94c5-2db8-496c-b3b6-7bb4463e690d",
          "prompts": [
            {
              "role": "system",
              "content": "You are a code tester specializing in testing sub-behaviors of code snippets.\nThe sub-behaviours should be short, diverse, insightful, independent, and cover different aspects of the base behaviour.\n\n### Output Requirements ###\n\nThe output must be a YAML object equivalent to type $Behaviours, according to the following Pydantic definitions:\n\n```python\nclass Behaviour(BaseModel):\n    base_behaviour: str\n    sub_behaviours: list[str] = Field(min_items=2, max_items=4, description=\"two to four sub-behaviours, fully derived from the 'base_behaviour'. The sub-behaviours should be short, diverse, insightful, self-contained, and cover different aspects of the base behaviour.\")\n\nclass Behaviours(BaseModel):\n    behaviours: list[Behaviour] = Field(min_items=18, max_items=18)\n```\n\nExample YAML output:\n```yaml\nbehaviours:\n- base_behaviour: |\n      Adds a new product to the cart when it is not already present\n  sub_behaviours:\n  - |\n    sub behaviour ...\n  - |\n    sub behaviour ...\n...\n```"
            },
            {
              "content": "For the following code snippet:\n```javascript\nfunction addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}\n```\n\nHere is a list of 18 base behaviours to test:\n\n- Adds a new product to the cart when it is not already present\n- Displays an alert if the product is already in the cart\n- Creates a cart item element with the correct title, price, and image\n- Appends the new cart item to the cart container\n- Adds an event listener to remove the cart item when the remove button is clicked\n- Adds an event listener to update the quantity when the quantity input changes\n- Logs \"done\" to the console after adding the product to the cart\n- Handles the case where the cart container is not found\n- Handles the case where the cart item title is an empty string\n- Handles the case where the product image URL is invalid or empty\n- Handles the case where the price is not a valid number\n- Handles the case where the quantity input is set to zero or a negative number\n- Handles the case where the cart item already exists and the alert is triggered\n- Ensures the cart item element has the correct class names\n- Ensures the cart item element's HTML structure is correct\n- Ensures the remove button has the correct class name and functionality\n- Ensures the quantity input has the correct class name and functionality\n- Ensures the alert message is displayed correctly\n\n======\n### Task ###\nFor each base beavhiour, list up to four short sub-behaviours, covering different aspects of the base behaviour.\n======\n\n### General instructions ###\n- The sub-behaviours should be short, diverse, insightful, independent, and cover different aspects of the base behaviour.\n- Try to be abstract and general when analyzing the different sub-behaviours.\n- Each YAML output MUST be after a newline, indented, with block scalar indicator ('|').\n- Answer should be a valid YAML, and nothing else.",
              "role": "user"
            }
          ],
          "openai_response": {
            "created": 1724258350,
            "model": "gpt-4o-2024-05-13",
            "system_fingerprint": "fp_3aa7262c27",
            "id": "chatcmpl-9yieUaY9O5jefhFPuYuNUgNeLObli",
            "choices": [
              "Choices(finish_reason='stop', index=0, message=Message(content='```yaml\\nbehaviours:\\n- base_behaviour: |\\n    Adds a new product to the cart when it is not already present\\n  sub_behaviours:\\n  - |\\n    Checks if the product title is not already in the cart\\n  - |\\n    Creates a new cart item element\\n  - |\\n    Appends the new cart item to the cart container\\n  - |\\n    Logs \"done\" to the console after adding the product\\n\\n- base_behaviour: |\\n    Displays an alert if the product is already in the cart\\n  sub_behaviours:\\n  - |\\n    Compares the product title with existing cart items\\n  - |\\n    Triggers an alert if a match is found\\n  - |\\n    Prevents adding the product again if it already exists\\n  - |\\n    Stops further execution after showing the alert\\n\\n- base_behaviour: |\\n    Creates a cart item element with the correct title, price, and image\\n  sub_behaviours:\\n  - |\\n    Sets the product title in the cart item element\\n  - |\\n    Sets the product price in the cart item element\\n  - |\\n    Sets the product image in the cart item element\\n  - |\\n    Ensures the cart item element has the correct HTML structure\\n\\n- base_behaviour: |\\n    Appends the new cart item to the cart container\\n  sub_behaviours:\\n  - |\\n    Finds the cart container element\\n  - |\\n    Appends the cart item element to the container\\n  - |\\n    Ensures the cart container is updated with the new item\\n  - |\\n    Verifies the cart item is visible in the cart container\\n\\n- base_behaviour: |\\n    Adds an event listener to remove the cart item when the remove button is clicked\\n  sub_behaviours:\\n  - |\\n    Selects the remove button within the cart item element\\n  - |\\n    Adds a click event listener to the remove button\\n  - |\\n    Ensures the cart item is removed when the button is clicked\\n  - |\\n    Verifies the remove button has the correct class name\\n\\n- base_behaviour: |\\n    Adds an event listener to update the quantity when the quantity input changes\\n  sub_behaviours:\\n  - |\\n    Selects the quantity input within the cart item element\\n  - |\\n    Adds a change event listener to the quantity input\\n  - |\\n    Ensures the quantity is updated when the input value changes\\n  - |\\n    Verifies the quantity input has the correct class name\\n\\n- base_behaviour: |\\n    Logs \"done\" to the console after adding the product to the cart\\n  sub_behaviours:\\n  - |\\n    Ensures the console log statement is executed\\n  - |\\n    Verifies the message \"done\" is logged to the console\\n  - |\\n    Confirms the log statement is after the cart item is added\\n  - |\\n    Checks if the log statement is not executed when the product is already in the cart\\n\\n- base_behaviour: |\\n    Handles the case where the cart container is not found\\n  sub_behaviours:\\n  - |\\n    Checks if the cart container element exists\\n  - |\\n    Prevents adding the product if the cart container is missing\\n  - |\\n    Logs an error message if the cart container is not found\\n  - |\\n    Ensures no further actions are taken if the container is missing\\n\\n- base_behaviour: |\\n    Handles the case where the cart item title is an empty string\\n  sub_behaviours:\\n  - |\\n    Checks if the product title is an empty string\\n  - |\\n    Prevents adding the product if the title is empty\\n  - |\\n    Logs an error message if the product title is empty\\n  - |\\n    Ensures no cart item is created with an empty title\\n\\n- base_behaviour: |\\n    Handles the case where the product image URL is invalid or empty\\n  sub_behaviours:\\n  - |\\n    Checks if the product image URL is valid\\n  - |\\n    Prevents adding the product if the image URL is invalid\\n  - |\\n    Logs an error message if the product image URL is invalid\\n  - |\\n    Ensures no cart item is created with an invalid image URL\\n\\n- base_behaviour: |\\n    Handles the case where the price is not a valid number\\n  sub_behaviours:\\n  - |\\n    Checks if the product price is a valid number\\n  - |\\n    Prevents adding the product if the price is invalid\\n  - |\\n    Logs an error message if the product price is invalid\\n  - |\\n    Ensures no cart item is created with an invalid price\\n\\n- base_behaviour: |\\n    Handles the case where the quantity input is set to zero or a negative number\\n  sub_behaviours:\\n  - |\\n    Checks if the quantity input value is zero or negative\\n  - |\\n    Prevents adding the product if the quantity is zero or negative\\n  - |\\n    Logs an error message if the quantity is zero or negative\\n  - |\\n    Ensures the quantity input value is set to a positive number by default\\n\\n- base_behaviour: |\\n    Handles the case where the cart item already exists and the alert is triggered\\n  sub_behaviours:\\n  - |\\n    Checks if the product title matches an existing cart item\\n  - |\\n    Triggers an alert if the product is already in the cart\\n  - |\\n    Prevents adding the product again if it already exists\\n  - |\\n    Ensures the alert message is displayed correctly\\n\\n- base_behaviour: |\\n    Ensures the cart item element has the correct class names\\n  sub_behaviours:\\n  - |\\n    Adds the \"cart-box\" class to the cart item element\\n  - |\\n    Verifies the cart item element has the \"cart-box\" class\\n  - |\\n    Ensures the remove button has the \"cart-remove\" class\\n  - |\\n    Ensures the quantity input has the \"cart-quantity\" class\\n\\n- base_behaviour: |\\n    Ensures the cart item element\\'s HTML structure is correct\\n  sub_behaviours:\\n  - |\\n    Verifies the cart item element contains an image element\\n  - |\\n    Verifies the cart item element contains a title element\\n  - |\\n    Verifies the cart item element contains a price element\\n  - |\\n    Verifies the cart item element contains a quantity input element\\n\\n- base_behaviour: |\\n    Ensures the remove button has the correct class name and functionality\\n  sub_behaviours:\\n  - |\\n    Verifies the remove button has the \"cart-remove\" class\\n  - |\\n    Ensures the remove button is clickable\\n  - |\\n    Ensures the cart item is removed when the remove button is clicked\\n  - |\\n    Verifies the remove button is within the cart item element\\n\\n- base_behaviour: |\\n    Ensures the quantity input has the correct class name and functionality\\n  sub_behaviours:\\n  - |\\n    Verifies the quantity input has the \"cart-quantity\" class\\n  - |\\n    Ensures the quantity input is editable\\n  - |\\n    Ensures the quantity is updated when the input value changes\\n  - |\\n    Verifies the quantity input is within the cart item element\\n\\n- base_behaviour: |\\n    Ensures the alert message is displayed correctly\\n  sub_behaviours:\\n  - |\\n    Triggers an alert when the product is already in the cart\\n  - |\\n    Verifies the alert message content is correct\\n  - |\\n    Ensures the alert message is displayed to the user\\n  - |\\n    Confirms the alert prevents further execution of the function', role='assistant', tool_calls=None, function_call=None))"
            ],
            "_response_ms": 26903.374,
            "object": "chat.completion"
          },
          "url_path": "/v2/tests/generate",
          "completion": "```yaml\nbehaviours:\n- base_behaviour: |\n    Adds a new product to the cart when it is not already present\n  sub_behaviours:\n  - |\n    Checks if the product title is not already in the cart\n  - |\n    Creates a new cart item element\n  - |\n    Appends the new cart item to the cart container\n  - |\n    Logs \"done\" to the console after adding the product\n\n- base_behaviour: |\n    Displays an alert if the product is already in the cart\n  sub_behaviours:\n  - |\n    Compares the product title with existing cart items\n  - |\n    Triggers an alert if a match is found\n  - |\n    Prevents adding the product again if it already exists\n  - |\n    Stops further execution after showing the alert\n\n- base_behaviour: |\n    Creates a cart item element with the correct title, price, and image\n  sub_behaviours:\n  - |\n    Sets the product title in the cart item element\n  - |\n    Sets the product price in the cart item element\n  - |\n    Sets the product image in the cart item element\n  - |\n    Ensures the cart item element has the correct HTML structure\n\n- base_behaviour: |\n    Appends the new cart item to the cart container\n  sub_behaviours:\n  - |\n    Finds the cart container element\n  - |\n    Appends the cart item element to the container\n  - |\n    Ensures the cart container is updated with the new item\n  - |\n    Verifies the cart item is visible in the cart container\n\n- base_behaviour: |\n    Adds an event listener to remove the cart item when the remove button is clicked\n  sub_behaviours:\n  - |\n    Selects the remove button within the cart item element\n  - |\n    Adds a click event listener to the remove button\n  - |\n    Ensures the cart item is removed when the button is clicked\n  - |\n    Verifies the remove button has the correct class name\n\n- base_behaviour: |\n    Adds an event listener to update the quantity when the quantity input changes\n  sub_behaviours:\n  - |\n    Selects the quantity input within the cart item element\n  - |\n    Adds a change event listener to the quantity input\n  - |\n    Ensures the quantity is updated when the input value changes\n  - |\n    Verifies the quantity input has the correct class name\n\n- base_behaviour: |\n    Logs \"done\" to the console after adding the product to the cart\n  sub_behaviours:\n  - |\n    Ensures the console log statement is executed\n  - |\n    Verifies the message \"done\" is logged to the console\n  - |\n    Confirms the log statement is after the cart item is added\n  - |\n    Checks if the log statement is not executed when the product is already in the cart\n\n- base_behaviour: |\n    Handles the case where the cart container is not found\n  sub_behaviours:\n  - |\n    Checks if the cart container element exists\n  - |\n    Prevents adding the product if the cart container is missing\n  - |\n    Logs an error message if the cart container is not found\n  - |\n    Ensures no further actions are taken if the container is missing\n\n- base_behaviour: |\n    Handles the case where the cart item title is an empty string\n  sub_behaviours:\n  - |\n    Checks if the product title is an empty string\n  - |\n    Prevents adding the product if the title is empty\n  - |\n    Logs an error message if the product title is empty\n  - |\n    Ensures no cart item is created with an empty title\n\n- base_behaviour: |\n    Handles the case where the product image URL is invalid or empty\n  sub_behaviours:\n  - |\n    Checks if the product image URL is valid\n  - |\n    Prevents adding the product if the image URL is invalid\n  - |\n    Logs an error message if the product image URL is invalid\n  - |\n    Ensures no cart item is created with an invalid image URL\n\n- base_behaviour: |\n    Handles the case where the price is not a valid number\n  sub_behaviours:\n  - |\n    Checks if the product price is a valid number\n  - |\n    Prevents adding the product if the price is invalid\n  - |\n    Logs an error message if the product price is invalid\n  - |\n    Ensures no cart item is created with an invalid price\n\n- base_behaviour: |\n    Handles the case where the quantity input is set to zero or a negative number\n  sub_behaviours:\n  - |\n    Checks if the quantity input value is zero or negative\n  - |\n    Prevents adding the product if the quantity is zero or negative\n  - |\n    Logs an error message if the quantity is zero or negative\n  - |\n    Ensures the quantity input value is set to a positive number by default\n\n- base_behaviour: |\n    Handles the case where the cart item already exists and the alert is triggered\n  sub_behaviours:\n  - |\n    Checks if the product title matches an existing cart item\n  - |\n    Triggers an alert if the product is already in the cart\n  - |\n    Prevents adding the product again if it already exists\n  - |\n    Ensures the alert message is displayed correctly\n\n- base_behaviour: |\n    Ensures the cart item element has the correct class names\n  sub_behaviours:\n  - |\n    Adds the \"cart-box\" class to the cart item element\n  - |\n    Verifies the cart item element has the \"cart-box\" class\n  - |\n    Ensures the remove button has the \"cart-remove\" class\n  - |\n    Ensures the quantity input has the \"cart-quantity\" class\n\n- base_behaviour: |\n    Ensures the cart item element's HTML structure is correct\n  sub_behaviours:\n  - |\n    Verifies the cart item element contains an image element\n  - |\n    Verifies the cart item element contains a title element\n  - |\n    Verifies the cart item element contains a price element\n  - |\n    Verifies the cart item element contains a quantity input element\n\n- base_behaviour: |\n    Ensures the remove button has the correct class name and functionality\n  sub_behaviours:\n  - |\n    Verifies the remove button has the \"cart-remove\" class\n  - |\n    Ensures the remove button is clickable\n  - |\n    Ensures the cart item is removed when the remove button is clicked\n  - |\n    Verifies the remove button is within the cart item element\n\n- base_behaviour: |\n    Ensures the quantity input has the correct class name and functionality\n  sub_behaviours:\n  - |\n    Verifies the quantity input has the \"cart-quantity\" class\n  - |\n    Ensures the quantity input is editable\n  - |\n    Ensures the quantity is updated when the input value changes\n  - |\n    Verifies the quantity input is within the cart item element\n\n- base_behaviour: |\n    Ensures the alert message is displayed correctly\n  sub_behaviours:\n  - |\n    Triggers an alert when the product is already in the cart\n  - |\n    Verifies the alert message content is correct\n  - |\n    Ensures the alert message is displayed to the user\n  - |\n    Confirms the alert prevents further execution of the function",
          "user": {
            "email": "ae821875@gmail.com",
            "auth_time": 1724251673,
            "codiumate": null,
            "picture": "https://avatars.githubusercontent.com/u/177968930?v=4",
            "allowed": true,
            "baseUrl": null,
            "exp": 1724261941,
            "sub": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "email_verified": false,
            "uid": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "iat": 1724258341,
            "firebase": {
              "identities": {
                "email": [
                  "ae821875@gmail.com"
                ],
                "github.com": [
                  "177968930"
                ]
              },
              "sign_in_provider": "custom"
            },
            "user_id": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "optout": false,
            "tier_end_date": 1724439711000,
            "aud": "codium-dev-360812",
            "organization_id": null,
            "tier_level": 10,
            "iss": "https://securetoken.google.com/codium-dev-360812"
          },
          "openai_request_id": "chatcmpl-9yieUaY9O5jefhFPuYuNUgNeLObli",
          "model": "gpt-4o-2024-05-13"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.092702+00:00",
          "timestamp": 1724258377.092702
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "process": {
          "id": 16,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118529.605249,
          "repr": "1 day, 8:55:29.605249"
        },
        "message": "OpenAI Response"
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.093363013Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "f1i7qxt5934pj8id",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:04:33.662557",
          "seconds": 119073.662557
        },
        "extra": {
          "openai_response": {
            "choices": [
              "TextChoices(finish_reason='length', index=0, text='o]] }}</h3>\\n    <table class=\"table table-bordered\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid', logprobs=None)"
            ],
            "id": "cmpl-9yiet4xZ7wl1ABwEynuOuPkCeEtXl",
            "model": "gpt-3.5-turbo-instruct",
            "usage": {
              "prompt_tokens": 3608,
              "completion_tokens": 75,
              "total_tokens": 3683
            },
            "created": 1724258375,
            "object": "text_completion"
          },
          "openai_request_id": "cmpl-9yiet4xZ7wl1ABwEynuOuPkCeEtXl",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "request_id": "c6c2e7b6-c83c-4f40-8272-2a87ec8fddf3",
          "user": {
            "tier_level": 10,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "optout": false,
            "codiumate": null,
            "organization_id": null,
            "iat": 1724258137,
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email_verified": true,
            "baseUrl": null,
            "email": "lf0448504@gmail.com",
            "allowed": true,
            "name": "Luiz F",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "exp": 1724261737,
            "tier_end_date": 1725287318000,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "aud": "codium-dev-360812",
            "auth_time": 1724161599
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contact",
          "completion": "o]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid",
          "url_path": "/v2/code/completion",
          "model": "gpt-3.5-turbo-instruct"
        },
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "line": 131,
        "exception": null,
        "time": {
          "timestamp": 1724258377.095256,
          "repr": "2024-08-21 16:39:37.095256+00:00"
        },
        "message": "OpenAI Response",
        "function": "generate",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "name": "ai.litellm.litellm_infer_engine",
        "level": {
          "no": 10,
          "name": "DEBUG",
          "icon": "🐞"
        },
        "module": "litellm_infer_engine",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:37.095864228Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "xh4b19soxe2crkln",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "line": 164,
        "function": "live",
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "module": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.098116+00:00",
          "timestamp": 1724258377.098116
        },
        "message": "Incoming request /v1/health/live",
        "name": "app",
        "exception": null,
        "elapsed": {
          "seconds": 119074.564739,
          "repr": "1 day, 9:04:34.564739"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.098367368Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "af649ee4-e8a7-43e2-8190-3152fa32ffd9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.107171Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "af649ee4-e8a7-43e2-8190-3152fa32ffd9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.005348196Z"
  },
  {
    "insertId": "isxbkw9d2u3ggkzo",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "exception": null,
        "function": "dispatch",
        "line": 37,
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "module": "app",
        "thread": {
          "id": 135434384432000,
          "name": "MainThread"
        },
        "message": "Request handled",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "extra": {
          "status_code": 200,
          "url": "http://10.164.4.6:5432/v1/health/live",
          "request_id": "N/A",
          "source_host": "10.164.4.1",
          "on_prem_log": true,
          "method": "GET"
        },
        "name": "app",
        "elapsed": {
          "repr": "3 days, 6:30:16.394194",
          "seconds": 282616.394194
        },
        "time": {
          "repr": "2024-08-21 16:39:37.107524+00:00",
          "timestamp": 1724258377.107524
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-recursion",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.107825429Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.290947673Z"
  },
  {
    "insertId": "q0nav6f7499r50li",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:37.123347+00:00",
          "timestamp": 1724258377.123347
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "module": "app",
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "name": "app",
        "message": "Request handled",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "elapsed": {
          "seconds": 119074.58997,
          "repr": "1 day, 9:04:34.589970"
        },
        "extra": {
          "method": "GET",
          "on_prem_log": true,
          "url": "http://10.164.17.14/v1/health/live",
          "request_id": "N/A",
          "status_code": 200,
          "source_host": "35.191.205.163"
        },
        "exception": null,
        "function": "dispatch"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.123659947Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "zlwtlknxl9mja41f",
    "jsonPayload": {
      "text": "sent behaviours_coverage\n",
      "record": {
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "module": "inference_utils",
        "time": {
          "repr": "2024-08-21 16:39:37.126277+00:00",
          "timestamp": 1724258377.126277
        },
        "name": "copilot_proxy.utils.inference_utils",
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "process": {
          "id": 16,
          "name": "MainProcess"
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "message": "sent behaviours_coverage",
        "elapsed": {
          "seconds": 118529.638824,
          "repr": "1 day, 8:55:29.638824"
        },
        "extra": {
          "request_id": "cb2d624e-86de-421b-9d72-d2823b039e38:985c94c5-2db8-496c-b3b6-7bb4463e690d",
          "url_path": "/v2/tests/generate",
          "user": {
            "picture": "https://avatars.githubusercontent.com/u/177968930?v=4",
            "exp": 1724261941,
            "sub": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_level": 10,
            "aud": "codium-dev-360812",
            "baseUrl": null,
            "user_id": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "tier_end_date": 1724439711000,
            "auth_time": 1724251673,
            "codiumate": null,
            "firebase": {
              "identities": {
                "email": [
                  "ae821875@gmail.com"
                ],
                "github.com": [
                  "177968930"
                ]
              },
              "sign_in_provider": "custom"
            },
            "optout": false,
            "allowed": true,
            "uid": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "iat": 1724258341,
            "email": "ae821875@gmail.com",
            "organization_id": null,
            "email_verified": false
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          }
        },
        "function": "prepare_section",
        "line": 1307,
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:37.126574859Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "bgujna8is22egmh1",
    "jsonPayload": {
      "record": {
        "name": "copilot_proxy.utils.inference_utils",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "module": "inference_utils",
        "extra": {
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "user": {
            "name": "Luiz F",
            "auth_time": 1724161599,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "allowed": true,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email": "lf0448504@gmail.com",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              }
            },
            "aud": "codium-dev-360812",
            "optout": false,
            "exp": 1724261737,
            "baseUrl": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "organization_id": null,
            "codiumate": null,
            "email_verified": true,
            "iat": 1724258137,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "tier_end_date": 1725287318000,
            "tier_level": 10
          },
          "request_id": "c6c2e7b6-c83c-4f40-8272-2a87ec8fddf3",
          "results": {
            "inference_steps": {
              "step_01_CodeCompletion": {
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contact",
                "04_end_time": "2024-08-21 16:39:37.128331",
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:35.617916",
                "02_completion": "o]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid"
              }
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"o]] }}</h3>\\n    <table class=\\\"table table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "user_input": {
              "max_repo_context": 5,
              "user_data": "user_id=None installation_id='d9512a22-64ab-4187-87de-bc5e6405f7d3' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "file_diff_content": "",
              "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
              "extra_instructions": "",
              "context_mode": "pre_pr",
              "is_multiline": false,
              "language": "blade",
              "reference_snippet_messages": [
                {
                  "file_name": "Project directory structure:",
                  "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty",
                  "type": "DirectoryStructure"
                },
                {
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "type": "Clipboard"
                },
                {
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "type": "Clipboard",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData"
                },
                {
                  "type": "Clipboard",
                  "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo",
                  "file_name": "Codiumate chat"
                },
                {
                  "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                  "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                  "type": "File"
                }
              ],
              "relative_file_path": "resources/views/dashboards/list.blade.php",
              "user_context": [],
              "max_remote_context": 5,
              "configuration": {},
              "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contact",
              "remote_context": [],
              "repo_context": [],
              "context": [],
              "task": "",
              "is_file_diff": false
            },
            "url_path": "/v2/code/completion"
          },
          "url_path": "/v2/code/completion"
        },
        "line": 1112,
        "function": "process",
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:04:33.695710",
          "seconds": 119073.69571
        },
        "time": {
          "repr": "2024-08-21 16:39:37.128409+00:00",
          "timestamp": 1724258377.128409
        },
        "message": "Prompts and results v2"
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.129139356Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-attacher/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7465658a-55e0-4c8c-9d04-403dcdf2987c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.131558Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7465658a-55e0-4c8c-9d04-403dcdf2987c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.211148958Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ffac02f2-54a1-4145-b363-0c142db6c05d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.132636Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ffac02f2-54a1-4145-b363-0c142db6c05d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.886930775Z"
  },
  {
    "insertId": "lx14qxuwqpzcddm8",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "line": 164,
        "name": "app",
        "time": {
          "timestamp": 1724258377.143628,
          "repr": "2024-08-21 16:39:37.143628+00:00"
        },
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "module": "app",
        "thread": {
          "id": 132136409553792,
          "name": "MainThread"
        },
        "message": "Incoming request /v1/health/live",
        "elapsed": {
          "seconds": 282616.608419,
          "repr": "3 days, 6:30:16.608419"
        },
        "function": "live",
        "extra": {
          "on_prem_log": true
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "pod_name": "auth-proxy-5c5c7445cc-qhr9g",
        "project_id": "codium-production",
        "location": "us-east1",
        "container_name": "proxy",
        "namespace_name": "production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.143870188Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5c5c7445cc"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.841439181Z"
  },
  {
    "insertId": "swglqynsa6edg9v3",
    "jsonPayload": {
      "record": {
        "line": 156,
        "function": "verify_user_token",
        "exception": null,
        "module": "core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "extra": {},
        "elapsed": {
          "seconds": 119074.947725,
          "repr": "1 day, 9:04:34.947725"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "time": {
          "timestamp": 1724258377.145603,
          "repr": "2024-08-21 16:39:37.145603+00:00"
        },
        "process": {
          "name": "MainProcess",
          "id": 12
        },
        "thread": {
          "id": 134584494692032,
          "name": "AnyIO worker thread"
        },
        "message": "User lpinto1204@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "name": "copilot_proxy.auth.core"
      },
      "text": "User lpinto1204@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.145847112Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "3c5ar7xc48030ydw",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "function": "dispatch",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:37.146224+00:00",
          "timestamp": 1724258377.146224
        },
        "line": 37,
        "module": "app",
        "elapsed": {
          "repr": "1 day, 9:04:34.948346",
          "seconds": 119074.948346
        },
        "process": {
          "id": 12,
          "name": "MainProcess"
        },
        "extra": {
          "method": "GET",
          "request_id": "9718beea-2864-45ab-a3cf-b0499ccf37ab",
          "url": "https://api.codium.ai/v2/rag/settings",
          "source_host": "49.206.131.63",
          "on_prem_log": true,
          "status_code": 200
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.146497995Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cb1a2e55-f81e-44b2-9002-0de4b7eb40da",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.151439Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cb1a2e55-f81e-44b2-9002-0de4b7eb40da",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.812003791Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b8702250-366c-4d68-9e71-49d91094e985",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.152265Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b8702250-366c-4d68-9e71-49d91094e985",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.317333839Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1bf993cc-fe51-4244-bf9a-714810d48419",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.156479Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1bf993cc-fe51-4244-bf9a-714810d48419",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.335504613Z"
  },
  {
    "insertId": "qs7wt2b0svywr3h5",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "exception": null,
        "time": {
          "timestamp": 1724258377.159108,
          "repr": "2024-08-21 16:39:37.159108+00:00"
        },
        "extra": {
          "url_path": "/v2/tests/generate",
          "request_id": "cb2d624e-86de-421b-9d72-d2823b039e38:985c94c5-2db8-496c-b3b6-7bb4463e690d",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"reference_context\", \"data\": {\"title\": \"REFERENCE_CONTEXT\", \"content\": \"\\n{\\\"From this repository\\\":[\\\"main.js:1-2\\\",\\\"main.js:42-48\\\",\\\"main.js:48-58\\\",\\\"c:\\\\\\\\Users\\\\\\\\EL Tawam\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code\\\\\\\\resources\\\\\\\\app\\\\\\\\extensions\\\\\\\\node_modules\\\\\\\\typescript\\\\\\\\lib\\\\\\\\lib.dom.d.ts:27569-27574\\\",\\\"c:\\\\\\\\Users\\\\\\\\EL Tawam\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code\\\\\\\\resources\\\\\\\\app\\\\\\\\extensions\\\\\\\\node_modules\\\\\\\\typescript\\\\\\\\lib\\\\\\\\lib.dom.d.ts:27724-27729\\\",\\\"c:\\\\\\\\Users\\\\\\\\EL Tawam\\\\\\\\AppData\\\\\\\\Local\\\\\\\\Programs\\\\\\\\Microsoft VS Code\\\\\\\\resources\\\\\\\\app\\\\\\\\extensions\\\\\\\\node_modules\\\\\\\\typescript\\\\\\\\lib\\\\\\\\lib.dom.d.ts:26830-26832\\\"]}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n",
              "{\"type\":\"behaviours\",\"sub_type\":\"behaviours_no_coverage\",\"data\":{\"behaviours\":[{\"content\":\"Adds a new product to the cart when it is not already present\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Displays an alert if the product is already in the cart\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Creates a cart item element with the correct title, price, and image\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Appends the new cart item to the cart container\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Adds an event listener to remove the cart item when the remove button is clicked\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Adds an event listener to update the quantity when the quantity input changes\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs \\\"done\\\" to the console after adding the product to the cart\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Handles the case where the cart container is not found\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Handles the case where the cart item title is an empty string\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Handles the case where the product image URL is invalid or empty\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Handles the case where the price is not a valid number\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Handles the case where the quantity input is set to zero or a negative number\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Handles the case where the cart item already exists and the alert is triggered\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the cart item element has the correct class names\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the cart item element's HTML structure is correct\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the remove button has the correct class name and functionality\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the quantity input has the correct class name and functionality\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the alert message is displayed correctly\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}]}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Code Explanation\", \"content\": \"## Summary\\nThe `addProductToCart` function adds a product to the shopping cart. It checks if the product is already in the cart, and if not, it creates a new cart item element with the product details and appends it to the cart container. It also sets up event listeners for removing the item and changing the quantity.\\n\\n## Example Usage\\n```javascript\\naddProductToCart(\\\"Product Title\\\", \\\"$10.00\\\", \\\"path/to/image.jpg\\\");\\n```\\n\\n## Code Analysis\\n### Inputs\\n- `title`: The title of the product.\\n- `price`: The price of the product.\\n- `productImg`: The URL of the product image.\\n___\\n### Flow\\n1. Create a new `div` element for the cart item and assign it a class.\\n2. Check if the product is already in the cart by comparing titles.\\n3. If the product is not in the cart, create the HTML content for the cart item.\\n4. Append the new cart item to the cart container.\\n5. Add event listeners for removing the item and changing the quantity.\\n___\\n### Outputs\\n- The function does not return a value but modifies the DOM to add a new cart item.\\n___\\n\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n",
              "{\"type\":\"code\",\"sub_type\":\"test\",\"data\":{\"items\":[{\"test_function_name\":\"should add a new product to the cart when it is not already present\",\"test_code\":\"    it('should add a new product to the cart when it is not already present', () => {\\n      document.body.innerHTML = `\\n        <div class=\\\"cart-contant\\\"></div>\\n      `;\\n      const title = \\\"Product 1\\\";\\n      const price = \\\"$10\\\";\\n      const productImg = \\\"image.jpg\\\";\\n  \\n      addProductToCart(title, price, productImg);\\n  \\n      const cartItems = document.querySelectorAll(\\\".cart-box\\\");\\n      expect(cartItems.length).toBe(1);\\n      expect(cartItems[0].querySelector(\\\".cart-product-title\\\").innerText).toBe(title);\\n      expect(cartItems[0].querySelector(\\\".cart-product-price\\\").innerText).toBe(price);\\n      expect(cartItems[0].querySelector(\\\".cart-img\\\").src).toContain(productImg);\\n    });\",\"test_plan\":\"Adds a new product to the cart when it is not already present\",\"tags\":[\"happy path\"],\"content_tags\":null}],\"configuration_updates\":{\"plan_instructions\":[\"Use \\\"Given, When, Then\\\" style.\",\"Use \\\"Arrange, Act, Assert\\\" style.\",\"Add funny, pirate-like, comments. Make them different for each test.\"],\"use_mocks\":false},\"test_prefix\":\"// Generated by CodiumAI\\n\\ndescribe('addProductToCart', () => {\\n\",\"test_suffix\":\"\\n});\\n\",\"run_tests_script\":{\"type\":\"side_file\",\"script\":\"function extractFailedTestResults(output) {\\n  const regex = /● (.*?) › (.*?)\\\\n\\\\n(.*?)\\\\n\\\\n(.*?)(?=●|$)/gs;\\n  const testResults = {};\\n\\n  let match;\\n  while ((match = regex.exec(output)) !== null) {\\n    const testName = match[2];\\n    const message = match[3] + \\\"\\\\n\\\" + match[4];\\n    if (message) {\\n      testResults[testName] = message;\\n    }\\n  }\\n\\n  return testResults;\\n}\\n\\nlet testsFilePaths = [];\\nlet parentDirsPaths = [\\\".\\\"];\\nconst args = process.argv.slice(2);\\nif (args.length !== 1) {\\n  console.error(\\\"Usage: node .codium.run_tests.js <test-file>\\\");\\n  process.exit(1);\\n} else {\\n  testsFilePaths = args.map((path) => path.trim());\\n  parentDirsPaths = testsFilePaths.map((path) =>\\n    path.split(\\\"/\\\").slice(0, -1).join(\\\"/\\\")\\n  );\\n}\\n\\nconst jestConfig = {\\n  testEnvironment: \\\"jest-environment-node\\\",\\n  transform: {},\\n  testMatch: testsFilePaths,\\n  cache: false,\\n};\\n// set FORCE_COLOR=false\\nprocess.env.FORCE_COLOR = \\\"0\\\";\\n// Supress all js stdout and stderr\\nprocess.stdout.write = () => {};\\nprocess.stderr.write = () => {};\\n\\nrunCLI({ config: JSON.stringify(jestConfig) }, parentDirsPaths).then(\\n  ({ results }) => {\\n    // Restore stdout and stderr\\n    process.stdout.write = process.stdout._write;\\n    process.stderr.write = process.stderr._write;\\n    const testsResults = {};\\n    const betterFailedResults = extractFailedTestResults(\\n      results[\\\"testResults\\\"][0][\\\"failureMessage\\\"]\\n    );\\n    const testResultsList =\\n      results[\\\"testResults\\\"].length > 0\\n        ? results[\\\"testResults\\\"][0]?.[\\\"testResults\\\"]\\n        : [];\\n    for (const testResult of testResultsList) {\\n      if (results?.[\\\"testExecError\\\"]) {\\n        testsResults[\\\"codium_tests_results_error\\\"] = results?.[\\\"testExecError\\\"];\\n      }\\n      testsResults[testResult[\\\"title\\\"]] = {\\n        passed: testResult[\\\"status\\\"] === \\\"passed\\\",\\n        message:\\n          betterFailedResults?.[testResult[\\\"title\\\"]] ||\\n          testResult[\\\"failureMessage\\\"],\\n      };\\n    }\\n\\n    if (\\n      results[\\\"testResults\\\"].length > 0 &&\\n      results[\\\"testResults\\\"][0][\\\"testExecError\\\"]\\n    ) {\\n      testsResults[\\\"codium_tests_results_error\\\"] =\\n        results[\\\"testResults\\\"][0][\\\"testExecError\\\"].toString();\\n    }\\n    console.log(\\\"=== Codium Tests Results ===\\\");\\n    console.log(JSON.stringify(testsResults));\\n    console.log(\\\"=== End Codium Tests Results ===\\\");\\n  }\\n);\\n\"},\"id\":\"9b94f8fc-b706-4e61-be55-ce4c04bbb880\"}}\n\n",
              "{\"type\":\"code\",\"sub_type\":\"test\",\"data\":{\"items\":[{\"test_function_name\":\"should handle the case where the cart container is not found\",\"test_code\":\"    it('should handle the case where the cart container is not found', () => {\\n      document.body.innerHTML = ``;\\n      const title = \\\"Product 1\\\";\\n      const price = \\\"$10\\\";\\n      const productImg = \\\"image.jpg\\\";\\n  \\n      expect(() => addProductToCart(title, price, productImg)).not.toThrow();\\n    });\",\"test_plan\":\"Handles the case where the cart container is not found\",\"tags\":[\"edge case\"],\"content_tags\":null}],\"configuration_updates\":{\"plan_instructions\":[\"Use \\\"Given, When, Then\\\" style.\",\"Use \\\"Arrange, Act, Assert\\\" style.\",\"Add funny, pirate-like, comments. Make them different for each test.\"],\"use_mocks\":false},\"test_prefix\":\"// Generated by CodiumAI\\n\\ndescribe('addProductToCart', () => {\\n\",\"test_suffix\":\"\\n});\\n\",\"run_tests_script\":{\"type\":\"side_file\",\"script\":\"function extractFailedTestResults(output) {\\n  const regex = /● (.*?) › (.*?)\\\\n\\\\n(.*?)\\\\n\\\\n(.*?)(?=●|$)/gs;\\n  const testResults = {};\\n\\n  let match;\\n  while ((match = regex.exec(output)) !== null) {\\n    const testName = match[2];\\n    const message = match[3] + \\\"\\\\n\\\" + match[4];\\n    if (message) {\\n      testResults[testName] = message;\\n    }\\n  }\\n\\n  return testResults;\\n}\\n\\nlet testsFilePaths = [];\\nlet parentDirsPaths = [\\\".\\\"];\\nconst args = process.argv.slice(2);\\nif (args.length !== 1) {\\n  console.error(\\\"Usage: node .codium.run_tests.js <test-file>\\\");\\n  process.exit(1);\\n} else {\\n  testsFilePaths = args.map((path) => path.trim());\\n  parentDirsPaths = testsFilePaths.map((path) =>\\n    path.split(\\\"/\\\").slice(0, -1).join(\\\"/\\\")\\n  );\\n}\\n\\nconst jestConfig = {\\n  testEnvironment: \\\"jest-environment-node\\\",\\n  transform: {},\\n  testMatch: testsFilePaths,\\n  cache: false,\\n};\\n// set FORCE_COLOR=false\\nprocess.env.FORCE_COLOR = \\\"0\\\";\\n// Supress all js stdout and stderr\\nprocess.stdout.write = () => {};\\nprocess.stderr.write = () => {};\\n\\nrunCLI({ config: JSON.stringify(jestConfig) }, parentDirsPaths).then(\\n  ({ results }) => {\\n    // Restore stdout and stderr\\n    process.stdout.write = process.stdout._write;\\n    process.stderr.write = process.stderr._write;\\n    const testsResults = {};\\n    const betterFailedResults = extractFailedTestResults(\\n      results[\\\"testResults\\\"][0][\\\"failureMessage\\\"]\\n    );\\n    const testResultsList =\\n      results[\\\"testResults\\\"].length > 0\\n        ? results[\\\"testResults\\\"][0]?.[\\\"testResults\\\"]\\n        : [];\\n    for (const testResult of testResultsList) {\\n      if (results?.[\\\"testExecError\\\"]) {\\n        testsResults[\\\"codium_tests_results_error\\\"] = results?.[\\\"testExecError\\\"];\\n      }\\n      testsResults[testResult[\\\"title\\\"]] = {\\n        passed: testResult[\\\"status\\\"] === \\\"passed\\\",\\n        message:\\n          betterFailedResults?.[testResult[\\\"title\\\"]] ||\\n          testResult[\\\"failureMessage\\\"],\\n      };\\n    }\\n\\n    if (\\n      results[\\\"testResults\\\"].length > 0 &&\\n      results[\\\"testResults\\\"][0][\\\"testExecError\\\"]\\n    ) {\\n      testsResults[\\\"codium_tests_results_error\\\"] =\\n        results[\\\"testResults\\\"][0][\\\"testExecError\\\"].toString();\\n    }\\n    console.log(\\\"=== Codium Tests Results ===\\\");\\n    console.log(JSON.stringify(testsResults));\\n    console.log(\\\"=== End Codium Tests Results ===\\\");\\n  }\\n);\\n\"},\"id\":\"e359b702-3b5c-4abe-879b-aead0c9801fe\"}}\n\n",
              "{\"type\":\"code\",\"sub_type\":\"tests_done\",\"data\":null}\n\n",
              "{\"type\":\"behaviours\",\"sub_type\":\"behaviours_initial_coverage\",\"data\":{\"behaviours\":[{\"content\":\"Adds a new product to the cart when it is not already present\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Checks if the product title is not already in the cart\",\"Creates a new cart item element\",\"Appends the new cart item to the cart container\",\"Logs \\\"done\\\" to the console after adding the product\"],\"is_related_test\":true,\"sub_behaviors\":[{\"content\":\"Checks if the product title is not already in the cart\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Creates a new cart item element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Appends the new cart item to the cart container\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs \\\"done\\\" to the console after adding the product\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Displays an alert if the product is already in the cart\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Compares the product title with existing cart items\",\"Triggers an alert if a match is found\",\"Prevents adding the product again if it already exists\",\"Stops further execution after showing the alert\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Compares the product title with existing cart items\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Triggers an alert if a match is found\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product again if it already exists\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Stops further execution after showing the alert\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Creates a cart item element with the correct title, price, and image\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Sets the product title in the cart item element\",\"Sets the product price in the cart item element\",\"Sets the product image in the cart item element\",\"Ensures the cart item element has the correct HTML structure\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Sets the product title in the cart item element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Sets the product price in the cart item element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Sets the product image in the cart item element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the cart item element has the correct HTML structure\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Appends the new cart item to the cart container\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Finds the cart container element\",\"Appends the cart item element to the container\",\"Ensures the cart container is updated with the new item\",\"Verifies the cart item is visible in the cart container\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Finds the cart container element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Appends the cart item element to the container\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the cart container is updated with the new item\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the cart item is visible in the cart container\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Adds an event listener to remove the cart item when the remove button is clicked\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Selects the remove button within the cart item element\",\"Adds a click event listener to the remove button\",\"Ensures the cart item is removed when the button is clicked\",\"Verifies the remove button has the correct class name\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Selects the remove button within the cart item element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Adds a click event listener to the remove button\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the cart item is removed when the button is clicked\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the remove button has the correct class name\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Adds an event listener to update the quantity when the quantity input changes\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Selects the quantity input within the cart item element\",\"Adds a change event listener to the quantity input\",\"Ensures the quantity is updated when the input value changes\",\"Verifies the quantity input has the correct class name\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Selects the quantity input within the cart item element\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Adds a change event listener to the quantity input\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the quantity is updated when the input value changes\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the quantity input has the correct class name\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Logs \\\"done\\\" to the console after adding the product to the cart\",\"tag\":\"happy_path\",\"covered\":\"covered\",\"test_names\":[\"Ensures the console log statement is executed\",\"Verifies the message \\\"done\\\" is logged to the console\",\"Confirms the log statement is after the cart item is added\",\"Checks if the log statement is not executed when the product is already in the cart\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Ensures the console log statement is executed\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the message \\\"done\\\" is logged to the console\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Confirms the log statement is after the cart item is added\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Checks if the log statement is not executed when the product is already in the cart\",\"tag\":\"happy_path\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Handles the case where the cart container is not found\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[\"Checks if the cart container element exists\",\"Prevents adding the product if the cart container is missing\",\"Logs an error message if the cart container is not found\",\"Ensures no further actions are taken if the container is missing\"],\"is_related_test\":true,\"sub_behaviors\":[{\"content\":\"Checks if the cart container element exists\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product if the cart container is missing\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs an error message if the cart container is not found\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures no further actions are taken if the container is missing\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Handles the case where the cart item title is an empty string\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[\"Checks if the product title is an empty string\",\"Prevents adding the product if the title is empty\",\"Logs an error message if the product title is empty\",\"Ensures no cart item is created with an empty title\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Checks if the product title is an empty string\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product if the title is empty\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs an error message if the product title is empty\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures no cart item is created with an empty title\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Handles the case where the product image URL is invalid or empty\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[\"Checks if the product image URL is valid\",\"Prevents adding the product if the image URL is invalid\",\"Logs an error message if the product image URL is invalid\",\"Ensures no cart item is created with an invalid image URL\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Checks if the product image URL is valid\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product if the image URL is invalid\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs an error message if the product image URL is invalid\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures no cart item is created with an invalid image URL\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Handles the case where the price is not a valid number\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[\"Checks if the product price is a valid number\",\"Prevents adding the product if the price is invalid\",\"Logs an error message if the product price is invalid\",\"Ensures no cart item is created with an invalid price\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Checks if the product price is a valid number\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product if the price is invalid\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs an error message if the product price is invalid\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures no cart item is created with an invalid price\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Handles the case where the quantity input is set to zero or a negative number\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[\"Checks if the quantity input value is zero or negative\",\"Prevents adding the product if the quantity is zero or negative\",\"Logs an error message if the quantity is zero or negative\",\"Ensures the quantity input value is set to a positive number by default\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Checks if the quantity input value is zero or negative\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product if the quantity is zero or negative\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Logs an error message if the quantity is zero or negative\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the quantity input value is set to a positive number by default\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Handles the case where the cart item already exists and the alert is triggered\",\"tag\":\"edge_case\",\"covered\":\"covered\",\"test_names\":[\"Checks if the product title matches an existing cart item\",\"Triggers an alert if the product is already in the cart\",\"Prevents adding the product again if it already exists\",\"Ensures the alert message is displayed correctly\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Checks if the product title matches an existing cart item\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Triggers an alert if the product is already in the cart\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Prevents adding the product again if it already exists\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the alert message is displayed correctly\",\"tag\":\"edge_case\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Ensures the cart item element has the correct class names\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[\"Adds the \\\"cart-box\\\" class to the cart item element\",\"Verifies the cart item element has the \\\"cart-box\\\" class\",\"Ensures the remove button has the \\\"cart-remove\\\" class\",\"Ensures the quantity input has the \\\"cart-quantity\\\" class\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Adds the \\\"cart-box\\\" class to the cart item element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the cart item element has the \\\"cart-box\\\" class\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the remove button has the \\\"cart-remove\\\" class\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the quantity input has the \\\"cart-quantity\\\" class\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Ensures the cart item element's HTML structure is correct\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[\"Verifies the cart item element contains an image element\",\"Verifies the cart item element contains a title element\",\"Verifies the cart item element contains a price element\",\"Verifies the cart item element contains a quantity input element\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Verifies the cart item element contains an image element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the cart item element contains a title element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the cart item element contains a price element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the cart item element contains a quantity input element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Ensures the remove button has the correct class name and functionality\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[\"Verifies the remove button has the \\\"cart-remove\\\" class\",\"Ensures the remove button is clickable\",\"Ensures the cart item is removed when the remove button is clicked\",\"Verifies the remove button is within the cart item element\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Verifies the remove button has the \\\"cart-remove\\\" class\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the remove button is clickable\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the cart item is removed when the remove button is clicked\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the remove button is within the cart item element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Ensures the quantity input has the correct class name and functionality\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[\"Verifies the quantity input has the \\\"cart-quantity\\\" class\",\"Ensures the quantity input is editable\",\"Ensures the quantity is updated when the input value changes\",\"Verifies the quantity input is within the cart item element\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Verifies the quantity input has the \\\"cart-quantity\\\" class\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the quantity input is editable\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the quantity is updated when the input value changes\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the quantity input is within the cart item element\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null},{\"content\":\"Ensures the alert message is displayed correctly\",\"tag\":\"other\",\"covered\":\"covered\",\"test_names\":[\"Triggers an alert when the product is already in the cart\",\"Verifies the alert message content is correct\",\"Ensures the alert message is displayed to the user\",\"Confirms the alert prevents further execution of the function\"],\"is_related_test\":false,\"sub_behaviors\":[{\"content\":\"Triggers an alert when the product is already in the cart\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Verifies the alert message content is correct\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Ensures the alert message is displayed to the user\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null},{\"content\":\"Confirms the alert prevents further execution of the function\",\"tag\":\"other\",\"covered\":\"unknown\",\"test_names\":[],\"is_related_test\":false,\"sub_behaviors\":[],\"parent_behavior\":null}],\"parent_behavior\":null}]}}\n\n"
            ],
            "user_input": {
              "dependencies_context": [
                {
                  "metadata": {
                    "end_line": 2,
                    "chunk_descriptor": "",
                    "language": "javascript",
                    "file_path": "main.js",
                    "start_line": 1,
                    "repo": ""
                  },
                  "text": "let cart = document.querySelector(\".cart\");\nif (document.readyState == \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", ready());\r\n} else {\r\n  ready(); \r\n}"
                },
                {
                  "text": "document: Document;",
                  "metadata": {
                    "end_line": 27574,
                    "repo": "",
                    "chunk_descriptor": "",
                    "start_line": 27569,
                    "language": "typescript",
                    "file_path": "c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts"
                  }
                },
                {
                  "metadata": {
                    "end_line": 27729,
                    "repo": "",
                    "start_line": 27724,
                    "language": "typescript",
                    "file_path": "c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts",
                    "chunk_descriptor": ""
                  },
                  "text": "declare function alert(message?: any): void;"
                },
                {
                  "metadata": {
                    "end_line": 48,
                    "start_line": 42,
                    "language": "javascript",
                    "repo": "",
                    "file_path": "main.js",
                    "chunk_descriptor": ""
                  },
                  "text": "function removeCartItem(e) {\r\n  let buttonClicked = e.target;\r\n  buttonClicked.parentElement.remove();\r\n}"
                },
                {
                  "metadata": {
                    "language": "javascript",
                    "end_line": 58,
                    "chunk_descriptor": "",
                    "start_line": 48,
                    "file_path": "main.js",
                    "repo": ""
                  },
                  "text": "function quantetyChanged(e) {\r\n  let input = e.target;\r\n  if (isNaN(input.value) || input.value <= 0) {\r\n    input.value = \"1\";\r\n  }\r\n  updateTotal();\r\n}"
                },
                {
                  "text": "console: Console;",
                  "metadata": {
                    "end_line": 26832,
                    "start_line": 26830,
                    "repo": "",
                    "chunk_descriptor": "",
                    "file_path": "c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts",
                    "language": "typescript"
                  }
                }
              ],
              "file_under_test_content": "let cart = document.querySelector(\".cart\");\r\nlet carticon = document.querySelector(\"#icon-cart\");\r\nlet closecart = document.querySelector(\"#close-cart\");\r\n\r\n// open cart\r\ncarticon.onclick = () => {\r\n  cart.classList.add(\"active\");\r\n};\r\n\r\n// close cart\r\nclosecart.onclick = () => {\r\n  cart.classList.remove(\"active\");\r\n};\r\n\r\n// if (document.addEventListener(\"DOMContentLoaded\", ready())) {  readytstate لي منعملش الكود ده كدا علي طول  بدل منحط\r\n//   ready();\r\n// }\r\n\r\n// cart working js\r\nif (document.readyState == \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", ready());\r\n} else {\r\n  ready(); //  ؟else عايز اعرف اي لازمة الكود بتاع ال\r\n}\r\n\r\n// ready function to remove the cart product\r\nfunction ready() {\r\n  let removeCartButton = document.getElementsByClassName(\"cart-remove\");\r\n  for (let i = 0; i < removeCartButton.length; i++) {\r\n    let button = removeCartButton[i];\r\n    button.addEventListener(\"click\", removeCartItem);\r\n  }\r\n\r\n  // quantety change\r\n  let quantetyInput = document.getElementsByClassName(\"cart-quantity\");\r\n  for (let i = 0; i < quantetyInput.length; i++) {\r\n    let inputqunt = quantetyInput[i];\r\n    inputqunt.addEventListener(\"change\", quantetyChanged);\r\n  }\r\n}\r\n\r\nfunction removeCartItem(e) {\r\n  let buttonClicked = e.target;\r\n  buttonClicked.parentElement.remove();\r\n}\r\n\r\n// if the qount number <= 0 the qount number.value =1\r\nfunction quantetyChanged(e) {\r\n  let input = e.target;\r\n  if (isNaN(input.value) || input.value <= 0) {\r\n    input.value = \"1\";\r\n  }\r\n  updateTotal();\r\n}\r\n\r\n// add Cart Function\r\n\r\nfunction addCartClicked(e) {\r\n  let button = e.target;\r\n  let shopProducts = button.parentElement;\r\n  let title = shopProducts.getElementsByClassName(\"product-title\").innerText;\r\n  let price = shopProducts.getElementsByClassName(\"price\").innerText;\r\n  let productImg = shopProducts.getElementsByClassName(\"product img\")[0].src;\r\n  addProductToCart(title, price, productImg);\r\n  updateTotal();\r\n}\r\n\r\nfunction addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}\r\n\r\n// update total\r\nfunction updateTotal() {\r\n  let cartContent = document.getElementsByClassName(\"cart-contant\")[0];\r\n  let cartBoxes = cartContent.getElementsByClassName(\"cart-box\");\r\n  let total = 0;\r\n  for (let i = 0; i < cartBoxes.length; i++) {\r\n    let cartBox = cartBoxes[i];\r\n    let priceElement = cartBox.querySelector(\".cart-product-price\");\r\n    let quantityElement = cartBox.getElementsByClassName(\"cart-quantity\")[0];\r\n    let price = parseFloat(priceElement.innerText.replace(\"$\", \"\"));\r\n    let quantity = quantityElement.value;\r\n    total += price * quantity;\r\n  }\r\n  total = Math.round(total * 100) / 100;\r\n  document.getElementsByClassName(\"total-price\")[0].innerText = total;\r\n}\r\n",
              "custom_template": null,
              "language": "javascript",
              "configuration": {
                "num_code_suggestions": 0,
                "is_add_test_to_suite": false,
                "reference_test": "",
                "utility_library": "None",
                "framework": "Jest",
                "num_desired_tests": 2,
                "plan_instructions": ""
              },
              "context_blob": null,
              "context": [
                {
                  "language": "javascript",
                  "start_line": 1,
                  "origin": "dependencies",
                  "file_path": "main.js",
                  "repo": "",
                  "end_line": 2,
                  "context": "File Path: main.js\nSnippet lines: 1 - 2\n\n```javascript\nlet cart = document.querySelector(\".cart\");\nif (document.readyState == \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", ready());\r\n} else {\r\n  ready(); \r\n}\n```"
                },
                {
                  "file_path": "main.js",
                  "language": "javascript",
                  "repo": "",
                  "origin": "dependencies",
                  "start_line": 42,
                  "end_line": 48,
                  "context": "File Path: main.js\nSnippet lines: 42 - 48\n\n```javascript\nfunction removeCartItem(e) {\r\n  let buttonClicked = e.target;\r\n  buttonClicked.parentElement.remove();\r\n}\n```"
                },
                {
                  "context": "File Path: main.js\nSnippet lines: 48 - 58\n\n```javascript\nfunction quantetyChanged(e) {\r\n  let input = e.target;\r\n  if (isNaN(input.value) || input.value <= 0) {\r\n    input.value = \"1\";\r\n  }\r\n  updateTotal();\r\n}\n```",
                  "repo": "",
                  "language": "javascript",
                  "start_line": 48,
                  "file_path": "main.js",
                  "origin": "dependencies",
                  "end_line": 58
                },
                {
                  "origin": "dependencies",
                  "end_line": 27574,
                  "file_path": "c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts",
                  "context": "File Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27569 - 27574\n\n```typescript\ndocument: Document;\n```",
                  "start_line": 27569,
                  "repo": "",
                  "language": "typescript"
                },
                {
                  "language": "typescript",
                  "context": "File Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27724 - 27729\n\n```typescript\ndeclare function alert(message?: any): void;\n```",
                  "end_line": 27729,
                  "repo": "",
                  "file_path": "c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts",
                  "start_line": 27724,
                  "origin": "dependencies"
                },
                {
                  "origin": "dependencies",
                  "repo": "",
                  "file_path": "c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts",
                  "start_line": 26830,
                  "context": "File Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 26830 - 26832\n\n```typescript\nconsole: Console;\n```",
                  "language": "typescript",
                  "end_line": 26832
                }
              ],
              "code_under_test_range": {
                "column_start": 0,
                "line_start": 67,
                "column_end": 1,
                "line_end": 112
              },
              "max_remote_context": 5,
              "code_under_test_type": "function",
              "should_return_context": false,
              "remote_context": [],
              "extra_instructions": null,
              "add_test_to_suite": null,
              "is_code_snippet": false,
              "code_under_test_content": "function addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}",
              "user_data": {
                "os_platform": "win32",
                "editor_type": "vscode",
                "user_id": null,
                "extension_version": "0.9.13",
                "installation_id": "9cc4e7ea-4678-4be3-aaa9-b52164378f2f",
                "editor_version": "1.92.2",
                "os_version": "v20.14.0",
                "editor_sub_version": null
              },
              "generate_suggestions": false,
              "max_repo_context": 5,
              "code_under_test_name": "addProductToCart",
              "user_context": [],
              "file_under_test_path": "main.js",
              "method_under_test_name": null,
              "repo_context": [],
              "method_under_test_range": null
            },
            "url_path": "/v2/tests/generate",
            "inference_steps": {
              "step_04_PreTestGPT4": {
                "02_completion": "",
                "03_start_time": "2024-08-21 16:39:05.673901",
                "00_system": "",
                "04_end_time": "2024-08-21 16:39:05.771555",
                "01_prompt": ""
              },
              "step_05_SubBehavioursAnalysis": {
                "02_completion": "\nbehaviours:\n- base_behaviour: |\n    Adds a new product to the cart when it is not already present\n  sub_behaviours:\n  - |\n    Checks if the product title is not already in the cart\n  - |\n    Creates a new cart item element\n  - |\n    Appends the new cart item to the cart container\n  - |\n    Logs \"done\" to the console after adding the product\n\n- base_behaviour: |\n    Displays an alert if the product is already in the cart\n  sub_behaviours:\n  - |\n    Compares the product title with existing cart items\n  - |\n    Triggers an alert if a match is found\n  - |\n    Prevents adding the product again if it already exists\n  - |\n    Stops further execution after showing the alert\n\n- base_behaviour: |\n    Creates a cart item element with the correct title, price, and image\n  sub_behaviours:\n  - |\n    Sets the product title in the cart item element\n  - |\n    Sets the product price in the cart item element\n  - |\n    Sets the product image in the cart item element\n  - |\n    Ensures the cart item element has the correct HTML structure\n\n- base_behaviour: |\n    Appends the new cart item to the cart container\n  sub_behaviours:\n  - |\n    Finds the cart container element\n  - |\n    Appends the cart item element to the container\n  - |\n    Ensures the cart container is updated with the new item\n  - |\n    Verifies the cart item is visible in the cart container\n\n- base_behaviour: |\n    Adds an event listener to remove the cart item when the remove button is clicked\n  sub_behaviours:\n  - |\n    Selects the remove button within the cart item element\n  - |\n    Adds a click event listener to the remove button\n  - |\n    Ensures the cart item is removed when the button is clicked\n  - |\n    Verifies the remove button has the correct class name\n\n- base_behaviour: |\n    Adds an event listener to update the quantity when the quantity input changes\n  sub_behaviours:\n  - |\n    Selects the quantity input within the cart item element\n  - |\n    Adds a change event listener to the quantity input\n  - |\n    Ensures the quantity is updated when the input value changes\n  - |\n    Verifies the quantity input has the correct class name\n\n- base_behaviour: |\n    Logs \"done\" to the console after adding the product to the cart\n  sub_behaviours:\n  - |\n    Ensures the console log statement is executed\n  - |\n    Verifies the message \"done\" is logged to the console\n  - |\n    Confirms the log statement is after the cart item is added\n  - |\n    Checks if the log statement is not executed when the product is already in the cart\n\n- base_behaviour: |\n    Handles the case where the cart container is not found\n  sub_behaviours:\n  - |\n    Checks if the cart container element exists\n  - |\n    Prevents adding the product if the cart container is missing\n  - |\n    Logs an error message if the cart container is not found\n  - |\n    Ensures no further actions are taken if the container is missing\n\n- base_behaviour: |\n    Handles the case where the cart item title is an empty string\n  sub_behaviours:\n  - |\n    Checks if the product title is an empty string\n  - |\n    Prevents adding the product if the title is empty\n  - |\n    Logs an error message if the product title is empty\n  - |\n    Ensures no cart item is created with an empty title\n\n- base_behaviour: |\n    Handles the case where the product image URL is invalid or empty\n  sub_behaviours:\n  - |\n    Checks if the product image URL is valid\n  - |\n    Prevents adding the product if the image URL is invalid\n  - |\n    Logs an error message if the product image URL is invalid\n  - |\n    Ensures no cart item is created with an invalid image URL\n\n- base_behaviour: |\n    Handles the case where the price is not a valid number\n  sub_behaviours:\n  - |\n    Checks if the product price is a valid number\n  - |\n    Prevents adding the product if the price is invalid\n  - |\n    Logs an error message if the product price is invalid\n  - |\n    Ensures no cart item is created with an invalid price\n\n- base_behaviour: |\n    Handles the case where the quantity input is set to zero or a negative number\n  sub_behaviours:\n  - |\n    Checks if the quantity input value is zero or negative\n  - |\n    Prevents adding the product if the quantity is zero or negative\n  - |\n    Logs an error message if the quantity is zero or negative\n  - |\n    Ensures the quantity input value is set to a positive number by default\n\n- base_behaviour: |\n    Handles the case where the cart item already exists and the alert is triggered\n  sub_behaviours:\n  - |\n    Checks if the product title matches an existing cart item\n  - |\n    Triggers an alert if the product is already in the cart\n  - |\n    Prevents adding the product again if it already exists\n  - |\n    Ensures the alert message is displayed correctly\n\n- base_behaviour: |\n    Ensures the cart item element has the correct class names\n  sub_behaviours:\n  - |\n    Adds the \"cart-box\" class to the cart item element\n  - |\n    Verifies the cart item element has the \"cart-box\" class\n  - |\n    Ensures the remove button has the \"cart-remove\" class\n  - |\n    Ensures the quantity input has the \"cart-quantity\" class\n\n- base_behaviour: |\n    Ensures the cart item element's HTML structure is correct\n  sub_behaviours:\n  - |\n    Verifies the cart item element contains an image element\n  - |\n    Verifies the cart item element contains a title element\n  - |\n    Verifies the cart item element contains a price element\n  - |\n    Verifies the cart item element contains a quantity input element\n\n- base_behaviour: |\n    Ensures the remove button has the correct class name and functionality\n  sub_behaviours:\n  - |\n    Verifies the remove button has the \"cart-remove\" class\n  - |\n    Ensures the remove button is clickable\n  - |\n    Ensures the cart item is removed when the remove button is clicked\n  - |\n    Verifies the remove button is within the cart item element\n\n- base_behaviour: |\n    Ensures the quantity input has the correct class name and functionality\n  sub_behaviours:\n  - |\n    Verifies the quantity input has the \"cart-quantity\" class\n  - |\n    Ensures the quantity input is editable\n  - |\n    Ensures the quantity is updated when the input value changes\n  - |\n    Verifies the quantity input is within the cart item element\n\n- base_behaviour: |\n    Ensures the alert message is displayed correctly\n  sub_behaviours:\n  - |\n    Triggers an alert when the product is already in the cart\n  - |\n    Verifies the alert message content is correct\n  - |\n    Ensures the alert message is displayed to the user\n  - |\n    Confirms the alert prevents further execution of the function",
                "04_end_time": "2024-08-21 16:39:37.123287",
                "00_system": "You are a code tester specializing in testing sub-behaviors of code snippets.\nThe sub-behaviours should be short, diverse, insightful, independent, and cover different aspects of the base behaviour.\n\n### Output Requirements ###\n\nThe output must be a YAML object equivalent to type $Behaviours, according to the following Pydantic definitions:\n\n```python\nclass Behaviour(BaseModel):\n    base_behaviour: str\n    sub_behaviours: list[str] = Field(min_items=2, max_items=4, description=\"two to four sub-behaviours, fully derived from the 'base_behaviour'. The sub-behaviours should be short, diverse, insightful, self-contained, and cover different aspects of the base behaviour.\")\n\nclass Behaviours(BaseModel):\n    behaviours: list[Behaviour] = Field(min_items=18, max_items=18)\n```\n\nExample YAML output:\n```yaml\nbehaviours:\n- base_behaviour: |\n      Adds a new product to the cart when it is not already present\n  sub_behaviours:\n  - |\n    sub behaviour ...\n  - |\n    sub behaviour ...\n...\n```",
                "03_start_time": "2024-08-21 16:39:10.162654",
                "01_prompt": "For the following code snippet:\n```javascript\nfunction addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}\n```\n\nHere is a list of 18 base behaviours to test:\n\n- Adds a new product to the cart when it is not already present\n- Displays an alert if the product is already in the cart\n- Creates a cart item element with the correct title, price, and image\n- Appends the new cart item to the cart container\n- Adds an event listener to remove the cart item when the remove button is clicked\n- Adds an event listener to update the quantity when the quantity input changes\n- Logs \"done\" to the console after adding the product to the cart\n- Handles the case where the cart container is not found\n- Handles the case where the cart item title is an empty string\n- Handles the case where the product image URL is invalid or empty\n- Handles the case where the price is not a valid number\n- Handles the case where the quantity input is set to zero or a negative number\n- Handles the case where the cart item already exists and the alert is triggered\n- Ensures the cart item element has the correct class names\n- Ensures the cart item element's HTML structure is correct\n- Ensures the remove button has the correct class name and functionality\n- Ensures the quantity input has the correct class name and functionality\n- Ensures the alert message is displayed correctly\n\n======\n### Task ###\nFor each base beavhiour, list up to four short sub-behaviours, covering different aspects of the base behaviour.\n======\n\n### General instructions ###\n- The sub-behaviours should be short, diverse, insightful, independent, and cover different aspects of the base behaviour.\n- Try to be abstract and general when analyzing the different sub-behaviours.\n- Each YAML output MUST be after a newline, indented, with block scalar indicator ('|').\n- Answer should be a valid YAML, and nothing else."
              },
              "step_01_ExampleUsage": {
                "02_completion": "",
                "03_start_time": "2024-08-21 16:39:05.569838",
                "01_prompt": "",
                "00_system": null,
                "04_end_time": "2024-08-21 16:39:05.579773"
              },
              "step_03_BehavioursAnalysis": {
                "02_completion": "\nhappy_paths:\n- Adds a new product to the cart when it is not already present\n- Displays an alert if the product is already in the cart\n- Creates a cart item element with the correct title, price, and image\n- Appends the new cart item to the cart container\n- Adds an event listener to remove the cart item when the remove button is clicked\n- Adds an event listener to update the quantity when the quantity input changes\n- Logs \"done\" to the console after adding the product to the cart\nedge_cases:\n- Handles the case where the cart container is not found\n- Handles the case where the cart item title is an empty string\n- Handles the case where the product image URL is invalid or empty\n- Handles the case where the price is not a valid number\n- Handles the case where the quantity input is set to zero or a negative number\n- Handles the case where the cart item already exists and the alert is triggered\nadditional_behaviours:\n- Ensures the cart item element has the correct class names\n- Ensures the cart item element's HTML structure is correct\n- Ensures the remove button has the correct class name and functionality\n- Ensures the quantity input has the correct class name and functionality\n- Ensures the alert message is displayed correctly\nmocks: |-\n  no, no external dependencies",
                "00_system": "You are a code tester specializing in testing behaviors of code snippets.\n\n### Output Requirements ###\n\nThe output must be a YAML object equivalent to type `Behaviors`, according to the following Pydantic definitions:\n\n```python\nclass Behaviors(BaseModel):\n    happy_paths: list[str] = Field(description=\"main happy paths and general default behaviours for unit testing\")\n    edge_cases: list[str] = Field(description=\"main edge cases for unit testing\")\n    additional_behaviours: list[str] = Field(max_items=5, description=\"Up to five additional behaviours, issues and use cases for unit testing\")\n    mocks: str = Field(description=\"answer shortly (<12 words), start with yes\\no - does the code have external dependencies, databases etc. that should be mocked using test doubles? if yes, list the dependencies shortly\")\n```\n\n**Example Output:**\n\n```yaml\nhappy_paths:\n- ...\n- ...\nedge_cases:\n- ...\n- ...\nadditional_behaviours:\n- ...\n- ...\nmocks: |-\n  yes, External dependencies - ...\n```",
                "01_prompt": "\nHere is the retrieved context from my codebase, containing code and documentation snippets:\n\n#### Snippet 1 ####\nFile Path: main.js\nSnippet lines: 1 - 2\n\n```javascript\nlet cart = document.querySelector(\".cart\");\nif (document.readyState == \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", ready());\r\n} else {\r\n  ready(); \r\n}\n```\n\n#### Snippet 2 ####\nFile Path: main.js\nSnippet lines: 42 - 48\n\n```javascript\nfunction removeCartItem(e) {\r\n  let buttonClicked = e.target;\r\n  buttonClicked.parentElement.remove();\r\n}\n```\n\n#### Snippet 3 ####\nFile Path: main.js\nSnippet lines: 48 - 58\n\n```javascript\nfunction quantetyChanged(e) {\r\n  let input = e.target;\r\n  if (isNaN(input.value) || input.value <= 0) {\r\n    input.value = \"1\";\r\n  }\r\n  updateTotal();\r\n}\n```\n\n#### Snippet 4 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27569 - 27574\n\n```typescript\ndocument: Document;\n```\n\n#### Snippet 5 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27724 - 27729\n\n```typescript\ndeclare function alert(message?: any): void;\n```\n\n#### Snippet 6 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 26830 - 26832\n\n```typescript\nconsole: Console;\n```\n\n### Context Instructions ###\n- When these snippets are relevant, follow their usage of the organization's specific modules, packages, libraries, code patterns, and best practices. If certain patterns repeat within multiple snippets, make sure to follow those patterns (e.g. the use of specific parameters in certain ways).\n- Very important: When there are organization-specific modules, packages, and libraries that have similar functionality to open-source ones, use the internal organization versions in your code implementation.\n- Make sure to add the relevant imports for internal organization modules, packages, and libraries.\n- Do not mention the word 'snippet' in your response.\n- If you use acronyms in your response, write only the acronym itself. Do not write the acronym's meaning.\n\n======\n### Task ###\nList key behaviors that are crucial for testing the following code snippet:\n```javascript\nfunction addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}\n```\n\n======\n\n### General instructions ###\n- For each section, the most important behaviours should appear first.\n- The total number of generated behaviours should be between 10 to 20. Don't add '.' at the end of each behaviours.\n- Try to be abstract and general when analyzing the different behaviours of the code snippet.\n- The behaviours should be self-contained, diverse, and insightful. Use clear and concise natural language to describe the behaviours.\n- Answer should be a valid YAML, and nothing else.",
                "04_end_time": "2024-08-21 16:39:10.158146",
                "03_start_time": "2024-08-21 16:39:05.613057"
              },
              "step_06_TestGeneration": {
                "02_completion": "```yaml\ntest suite:\n-   test suite prefix: |-\n        'describe('addProductToCart', () => {'\n    behaviour to test: |-\n        Adds a new product to the cart when it is not already present\n    test name: |-\n        should add a new product to the cart when it is not already present\n    test function: |-\n        it('should add a new product to the cart when it is not already present', () => {\n          document.body.innerHTML = `\n            <div class=\"cart-contant\"></div>\n          `;\n          const title = \"Product 1\";\n          const price = \"$10\";\n          const productImg = \"image.jpg\";\n          \n          addProductToCart(title, price, productImg);\n          \n          const cartItems = document.querySelectorAll(\".cart-box\");\n          expect(cartItems.length).toBe(1);\n          expect(cartItems[0].querySelector(\".cart-product-title\").innerText).toBe(title);\n          expect(cartItems[0].querySelector(\".cart-product-price\").innerText).toBe(price);\n          expect(cartItems[0].querySelector(\".cart-img\").src).toContain(productImg);\n        });\n    test tags: |-\n        happy path\n-   test suite prefix: |-\n        'describe('addProductToCart', () => {'\n    behaviour to test: |-\n        Handles the case where the cart container is not found\n    test name: |-\n        should handle the case where the cart container is not found\n    test function: |-\n        it('should handle the case where the cart container is not found', () => {\n          document.body.innerHTML = ``;\n          const title = \"Product 1\";\n          const price = \"$10\";\n          const productImg = \"image.jpg\";\n          \n          expect(() => addProductToCart(title, price, productImg)).not.toThrow();\n        });\n    test tags: |-\n        edge case\n```",
                "03_start_time": "2024-08-21 16:39:10.192056",
                "00_system": "\nYou are a code tester, specializing in testing behaviors of code snippets. \n\nExtra instructions, if provided, can override the General instructions but not the task itself.\n\n### Output Requirements ###\n\n\n- You must use the following YAML schema to format your answer:\n```yaml\ntest suite:\n  type: array\n  minItems: 2\n  maxItems: 2\n  uniqueItems: true\n  items:\n    type: object\n    test suite prefix:\n      const: |-\n        'describe('addProductToCart', () => {'\n    behaviour to test:\n      type: string\n      description: The relevant unique behaviour\n    test name:\n      type: string\n      description: A short unique test name ('should ... when ...'), that should reflect the test objective\n    test function:\n      type: string\n      description: |-\n        A single 'it(...)' test function.\n        The test is a part of test suite with a prefix: 'describe('addProductToCart', () => {'.\n        The test should have a short descriptive name.\n        Make sure the test function is simple and coherent, with actual implementation, and properly uses the code-under-test, 'addProductToCart'\n        Add newline after each line of code.\n    test tags:\n      type: string\n      description: relevant test tags\n      enum:\n        - happy path\n        - edge case\n        - general behaviour\n```\n\n// Example output:\n```yaml\ntest suite:\n-   test suite prefix: |-\n        'describe('addProductToCart', () => {'\n    behaviour to test: |-\n        Adds a new product to the cart when it is not already present\n    test name: |-\n        should ... when ...\n    test function: |-\n        it('should ... when ...', () => { ... });\n    test tags: |-\n        ...\n- ...\n\n```\n\nEach YAML output MUST be after a newline, indented, with block scalar indicator ('|-').\nOutput should be a valid YAML, and nothing else. Don't add the 'type' and 'description' fields.",
                "01_prompt": "\nHere is the retrieved context from my codebase, containing code and documentation snippets:\n\n#### Snippet 1 ####\nFile Path: main.js\nSnippet lines: 1 - 2\n\n```javascript\nlet cart = document.querySelector(\".cart\");\nif (document.readyState == \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", ready());\r\n} else {\r\n  ready(); \r\n}\n```\n\n#### Snippet 2 ####\nFile Path: main.js\nSnippet lines: 42 - 48\n\n```javascript\nfunction removeCartItem(e) {\r\n  let buttonClicked = e.target;\r\n  buttonClicked.parentElement.remove();\r\n}\n```\n\n#### Snippet 3 ####\nFile Path: main.js\nSnippet lines: 48 - 58\n\n```javascript\nfunction quantetyChanged(e) {\r\n  let input = e.target;\r\n  if (isNaN(input.value) || input.value <= 0) {\r\n    input.value = \"1\";\r\n  }\r\n  updateTotal();\r\n}\n```\n\n#### Snippet 4 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27569 - 27574\n\n```typescript\ndocument: Document;\n```\n\n#### Snippet 5 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27724 - 27729\n\n```typescript\ndeclare function alert(message?: any): void;\n```\n\n#### Snippet 6 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 26830 - 26832\n\n```typescript\nconsole: Console;\n```\n\n### Context Instructions ###\n- When these snippets are relevant, follow their usage of the organization's specific modules, packages, libraries, code patterns, and best practices. If certain patterns repeat within multiple snippets, make sure to follow those patterns (e.g. the use of specific parameters in certain ways).\n- Very important: When there are organization-specific modules, packages, and libraries that have similar functionality to open-source ones, use the internal organization versions in your code implementation.\n- Make sure to add the relevant imports for internal organization modules, packages, and libraries.\n- Do not mention the word 'snippet' in your response.\n- If you use acronyms in your response, write only the acronym itself. Do not write the acronym's meaning.\n\n======\n### Task ###\nFor the following code snippet, Generate a corresponding test function for each bullet point behaviour.\n\n```javascript\nfunction addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}\n```\nBehaviors:\n- Adds a new product to the cart when it is not already present\n- Handles the case where the cart container is not found\n\n======\n\n### General instructions ###\n- Generate 2 tests in total- Generate a corresponding 'it' test function\n- Double-check that the test function properly initializes and invokes the code, includes all necessary imports, and uses the correct assertions.\n- Use 'Jest' as testing framework.- Don't use test doubles.",
                "04_end_time": "2024-08-21 16:39:17.308334"
              },
              "step_02_OutputCodeAnalysis": {
                "04_end_time": "2024-08-21 16:39:11.733231",
                "01_prompt": "\nHere is the retrieved context from my codebase, containing code and documentation snippets:\n\n#### Snippet 1 ####\nFile Path: main.js\nSnippet lines: 1 - 2\n\n```javascript\nlet cart = document.querySelector(\".cart\");\nif (document.readyState == \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", ready());\r\n} else {\r\n  ready(); \r\n}\n```\n\n#### Snippet 2 ####\nFile Path: main.js\nSnippet lines: 42 - 48\n\n```javascript\nfunction removeCartItem(e) {\r\n  let buttonClicked = e.target;\r\n  buttonClicked.parentElement.remove();\r\n}\n```\n\n#### Snippet 3 ####\nFile Path: main.js\nSnippet lines: 48 - 58\n\n```javascript\nfunction quantetyChanged(e) {\r\n  let input = e.target;\r\n  if (isNaN(input.value) || input.value <= 0) {\r\n    input.value = \"1\";\r\n  }\r\n  updateTotal();\r\n}\n```\n\n#### Snippet 4 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27569 - 27574\n\n```typescript\ndocument: Document;\n```\n\n#### Snippet 5 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 27724 - 27729\n\n```typescript\ndeclare function alert(message?: any): void;\n```\n\n#### Snippet 6 ####\nFile Path: c:\\Users\\EL Tawam\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\node_modules\\typescript\\lib\\lib.dom.d.ts\nSnippet lines: 26830 - 26832\n\n```typescript\nconsole: Console;\n```\n\n### Context Instructions ###\n- When these snippets are relevant, follow their usage of the organization's specific modules, packages, libraries, code patterns, and best practices. If certain patterns repeat within multiple snippets, make sure to follow those patterns (e.g. the use of specific parameters in certain ways).\n- Very important: When there are organization-specific modules, packages, and libraries that have similar functionality to open-source ones, use the internal organization versions in your code implementation.\n- Make sure to add the relevant imports for internal organization modules, packages, and libraries.\n- Do not mention the word 'snippet' in your response.\n- If you use acronyms in your response, write only the acronym itself. Do not write the acronym's meaning.\n\n======\n### Task ###\nProvide a clear, readable and concise explanation for the following code snippet:\n```javascript\nfunction addProductToCart(title, price, productImg) {\r\n  // Create cart shopbox element\r\n  let cartShopbox = document.createElement(\"div\");\r\n  cartShopbox.classList.add(\"cart-box\");\r\n\r\n  // Find the cart item container\r\n  let cartItem = document.querySelector(\".cart-contant\");\r\n  let cartItemName = cartItem.querySelectorAll(\".cart-product-title\");\r\n\r\n  // Check if the item is already in the cart\r\n  for (let i = 0; i < cartItemName.length; i++) {\r\n    if (cartItemName[i].innerText === title) {\r\n      alert(\"You have already added this item to the cart\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Create the HTML content for the cart item\r\n  let cartBoxContent = `\r\n    <img src=\"${productImg}\" alt=\"\" class=\"cart-img\" />\r\n    <div class=\"detail-box\">\r\n      <div class=\"cart-product-title\">${title}</div>\r\n      <div class=\"cart-product-price\">${price}</div>\r\n      <input type=\"number\" name=\"\" id=\"\" value=\"0\" class=\"cart-quantity\" />\r\n    </div>\r\n    <!-- Remove item -->\r\n    <i class=\"bx bx-trash cart-remove\"></i>`;\r\n\r\n  // Set the HTML content to the cart shopbox\r\n  cartShopbox.innerHTML = cartBoxContent;\r\n\r\n  // Append the cart shopbox to the cart item container\r\n  cartItem.append(cartShopbox);\r\n\r\n  // Add event listener for removing item\r\n  cartShopbox\r\n    .querySelector(\".cart-remove\")\r\n    .addEventListener(\"click\", removeCartItem);\r\n\r\n  // Add event listener for quantity changes\r\n  cartShopbox\r\n    .querySelector(\".cart-quantity\")\r\n    .addEventListener(\"change\", quantetyChanged);\r\n\r\n  console.log(\"done\");\r\n}\n```\n\n======\n\n### General instructions ###\n- Make sure the explanation is short as possible, and coherent.\n- If relevant, mention in your answer if the code snippet is a class/function/method/..., or if it is a part of such component.\n- Each YAML output must be after a newline, with block scalar indicator ('|'). it should be properly indented. This includes bullets and numbered lists.\n- When quoting variables or names from the code, use backticks (`) instead of single quote (').\n- Code blocks should follow github markdown rules (linguist).\n- Answer should be a valid YAML, and nothing else. Don't add 'type' and 'description' fields to the output.",
                "02_completion": "## Summary\nThe `addProductToCart` function adds a product to the shopping cart. It checks if the product is already in the cart, and if not, it creates a new cart item element with the product details and appends it to the cart container. It also sets up event listeners for removing the item and changing the quantity.\n\n## Example Usage\n```javascript\naddProductToCart(\"Product Title\", \"$10.00\", \"path/to/image.jpg\");\n```\n\n## Code Analysis\n### Inputs\n- `title`: The title of the product.\n- `price`: The price of the product.\n- `productImg`: The URL of the product image.\n___\n### Flow\n1. Create a new `div` element for the cart item and assign it a class.\n2. Check if the product is already in the cart by comparing titles.\n3. If the product is not in the cart, create the HTML content for the cart item.\n4. Append the new cart item to the cart container.\n5. Add event listeners for removing the item and changing the quantity.\n___\n### Outputs\n- The function does not return a value but modifies the DOM to add a new cart item.\n___\n",
                "03_start_time": "2024-08-21 16:39:05.586560",
                "00_system": "\nYou are a code reviewer expert in explaining code snippets. You have been asked to provide a clear, readable, and concise explanation for a code snippet.\nYour task is to provide a summary of the code snippet and an example usage of the code. The code snippet is a part of a larger codebase, and you need to focus only on the specific code snippet provided.\n\nExtra instructions, if provided, can override the General instructions but not the task itself.\n\n### Output Requirements ###\n\nThe output must be a YAML object following the schema below and nothing else.\nThe YAML object must be properly formatted and indented.\n\n```yaml\nSummary:\n    type: string\n    description: a concise explanation of the code\nExample Usage:\n    type: string\n    description: present the code inputs, how it can be used, and what is the expected output.\nInputs:\n    type: string\n    description: shortly describe the inputs of the function.\nFlow:\n    type: string\n    description: review shortly main flow of the function (up to 5 sentences)\nOutputs:\n    type: string\n    description: shortly describe the outputs of the function\n```\n\n**Example Output:**\n\n```yaml\nSummary: |\n  a concise summary ...\nExample Usage: |\n  ```javascript\n  ...\n  ```\nInputs: |\n  - ...\n  - ...\nFlow: |\n  1. ...\n  2. ...\nOutputs: |\n  - ...\n```"
              }
            }
          },
          "user": {
            "organization_id": null,
            "optout": false,
            "email_verified": false,
            "user_id": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "codiumate": null,
            "email": "ae821875@gmail.com",
            "auth_time": 1724251673,
            "iat": 1724258341,
            "aud": "codium-dev-360812",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "allowed": true,
            "uid": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "baseUrl": null,
            "exp": 1724261941,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "ae821875@gmail.com"
                ],
                "github.com": [
                  "177968930"
                ]
              }
            },
            "tier_end_date": 1724439711000,
            "tier_level": 10,
            "sub": "XQ0lrerP1VRENE2TeX6atLNmnUi1",
            "picture": "https://avatars.githubusercontent.com/u/177968930?v=4"
          }
        },
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "function": "process",
        "message": "Prompts and results v2",
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "process": {
          "id": 16,
          "name": "MainProcess"
        },
        "module": "inference_utils",
        "line": 1112,
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "elapsed": {
          "seconds": 118529.671655,
          "repr": "1 day, 8:55:29.671655"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.160534940Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "a4ah0fhqji5x9g5v",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "module": "app",
        "extra": {
          "request_id": "c6c2e7b6-c83c-4f40-8272-2a87ec8fddf3",
          "url": "https://api.codium.ai/v2/code/completion",
          "status_code": 200,
          "source_host": "177.69.243.97",
          "on_prem_log": true,
          "method": "POST"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "name": "app",
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:37.162470+00:00",
          "timestamp": 1724258377.16247
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "elapsed": {
          "seconds": 119073.729771,
          "repr": "1 day, 9:04:33.729771"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.162754381Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "3qovbdu5nev4g8w9",
    "jsonPayload": {
      "text": "User anudeep_gupta@intuit.com will use enterprise openAI org. tier:30 codiumate:None optout:True\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 8:55:30.062665",
          "seconds": 118530.062665
        },
        "time": {
          "timestamp": 1724258377.164314,
          "repr": "2024-08-21 16:39:37.164314+00:00"
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "module": "core",
        "line": 156,
        "function": "verify_user_token",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "message": "User anudeep_gupta@intuit.com will use enterprise openAI org. tier:30 codiumate:None optout:True",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "extra": {},
        "thread": {
          "name": "AnyIO worker thread",
          "id": 137082722834112
        },
        "name": "copilot_proxy.auth.core"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.164712036Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "45t4t2qdb513004c",
    "jsonPayload": {
      "record": {
        "name": "app",
        "function": "dispatch",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:37.177608+00:00",
          "timestamp": 1724258377.177608
        },
        "message": "Request handled",
        "extra": {
          "source_host": "10.170.0.1",
          "on_prem_log": true,
          "method": "GET",
          "url": "http://10.170.0.25:5432/v1/health/live",
          "status_code": 200,
          "request_id": "N/A"
        },
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "thread": {
          "id": 132136409553792,
          "name": "MainThread"
        },
        "elapsed": {
          "repr": "3 days, 6:30:16.642399",
          "seconds": 282616.642399
        },
        "module": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production",
        "location": "us-east1",
        "pod_name": "auth-proxy-5c5c7445cc-qhr9g",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.177830347Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5c5c7445cc",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.841439181Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "85bd9fa9-b8df-486c-addc-fb37709c3773",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.179166Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "85bd9fa9-b8df-486c-addc-fb37709c3773",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.609981810Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.29.203.252",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 cluster-autoscaler,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.232587Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.instanceGroupManagers.list",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "compute.instanceGroupManagers.list",
          "granted": true,
          "resourceAttributes": {
            "service": "resourcemanager",
            "name": "projects/codium-production",
            "type": "resourcemanager.projects"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/zones/us-central1-b/instanceGroupManagers",
      "numResponseItems": "1",
      "request": {
        "@type": "type.googleapis.com/compute.instanceGroupManagers.list"
      },
      "resourceLocation": {
        "currentLocations": [
          "us-central1-b"
        ]
      }
    },
    "insertId": "-12mnceeiueyg",
    "resource": {
      "type": "gce_instance_group_manager",
      "labels": {
        "instance_group_manager_name": "",
        "location": "us-central1-b",
        "instance_group_manager_id": "",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.182878Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "367c8a3b-882c-422b-997e-70c1b6952c7a"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.695271202Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.29.203.252",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 cluster-autoscaler,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.250500Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.instanceGroupManagers.list",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "compute.instanceGroupManagers.list",
          "granted": true,
          "resourceAttributes": {
            "service": "resourcemanager",
            "name": "projects/codium-production",
            "type": "resourcemanager.projects"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/zones/us-central1-a/instanceGroupManagers",
      "numResponseItems": "2",
      "request": {
        "@type": "type.googleapis.com/compute.instanceGroupManagers.list"
      },
      "resourceLocation": {
        "currentLocations": [
          "us-central1-a"
        ]
      }
    },
    "insertId": "-t4drlfe4jhje",
    "resource": {
      "type": "gce_instance_group_manager",
      "labels": {
        "instance_group_manager_name": "",
        "location": "us-central1-a",
        "project_id": "codium-production",
        "instance_group_manager_id": ""
      }
    },
    "timestamp": "2024-08-21T16:39:37.187597Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "b2c8cc0a-da3c-4a05-942a-c312c3551347"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.642630379Z"
  },
  {
    "insertId": "1orx8gef4e7rig",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "priority": 500,
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        }
      },
      "remoteIp": "62.89.209.162",
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 14000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "TJ"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "10133",
      "status": 200,
      "responseSize": "522",
      "userAgent": "axios/1.6.2",
      "remoteIp": "62.89.209.162",
      "serverIp": "10.164.17.14",
      "latency": "0.983672s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.188106Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/d205baf015f88189bde12c3980251136",
    "receiveTimestamp": "2024-08-21T16:39:40.226783377Z",
    "spanId": "e06ef07c8402b25b"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.29.203.252",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 cluster-autoscaler,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.244578Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.instanceGroupManagers.list",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "compute.instanceGroupManagers.list",
          "granted": true,
          "resourceAttributes": {
            "service": "resourcemanager",
            "name": "projects/codium-production",
            "type": "resourcemanager.projects"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/zones/us-central1-f/instanceGroupManagers",
      "numResponseItems": "1",
      "request": {
        "@type": "type.googleapis.com/compute.instanceGroupManagers.list"
      },
      "resourceLocation": {
        "currentLocations": [
          "us-central1-f"
        ]
      }
    },
    "insertId": "k4hocee7g0m",
    "resource": {
      "type": "gce_instance_group_manager",
      "labels": {
        "location": "us-central1-f",
        "project_id": "codium-production",
        "instance_group_manager_name": "",
        "instance_group_manager_id": ""
      }
    },
    "timestamp": "2024-08-21T16:39:37.188940Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "1ee54dc9-3693-45e8-82dd-b60642a0d017"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.385794449Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2f39c673-8f92-4285-9e47-36eba0a2c86e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.198757Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2f39c673-8f92-4285-9e47-36eba0a2c86e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.719374659Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "30d948aa-cacb-4c64-b1a8-68bf4e79efb3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.202969Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "30d948aa-cacb-4c64-b1a8-68bf4e79efb3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.613693959Z"
  },
  {
    "insertId": "whtpmpfpizyf0",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "102.176.94.239",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT",
        "priority": 500
      },
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 9000,
        "name": "codium-app-cloud-armor-policy"
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1609",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "102.176.94.239",
      "serverIp": "10.164.15.3",
      "latency": "0.200421s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.204501Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/163ab7ad9c46107b0dfe5c4008c6061c",
    "receiveTimestamp": "2024-08-21T16:39:38.585488132Z",
    "spanId": "f27f075f97863742"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fe7350b7-94a2-4122-aae9-f7cf19eb67fb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.236095Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fe7350b7-94a2-4122-aae9-f7cf19eb67fb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.317333839Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "71cd1e3b-8e50-4c19-a158-b021be08be2b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.254363Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "71cd1e3b-8e50-4c19-a158-b021be08be2b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.407381333Z"
  },
  {
    "insertId": "yhamc5fhcl3uojs9",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "filestore-node-dqwpw",
        "container_name": "gcp-filestore-driver",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "kube-system",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.255454769Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-811h",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:39.615316446Z"
  },
  {
    "insertId": "x3oqkk8x5j86tuip",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "pod_name": "filestore-node-dqwpw",
        "project_id": "codium-production",
        "container_name": "gcp-filestore-driver",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.255504489Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-811h",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:39.615316446Z"
  },
  {
    "insertId": "apmgak0ur2riycws",
    "jsonPayload": {
      "text": "User samuelamoh2005@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "extra": {},
        "module": "core",
        "function": "verify_user_token",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134620481828544
        },
        "line": 156,
        "name": "copilot_proxy.auth.core",
        "elapsed": {
          "seconds": 118362.091186,
          "repr": "1 day, 8:52:42.091186"
        },
        "message": "User samuelamoh2005@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:37.269128+00:00",
          "timestamp": 1724258377.269128
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.269389947Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "o4suapzd32rgfka2",
    "jsonPayload": {
      "record": {
        "message": "Incoming request to get feature flags",
        "extra": {
          "tier_level": 1,
          "request_id": "2a3ab5a4-eb2c-4e6a-b197-ebaa37bfb6b3",
          "user": {
            "allowed": true,
            "aud": "codium-dev-360812",
            "email": "samuelamoh2005@gmail.com",
            "baseUrl": null,
            "name": "Samuel Amoh",
            "uid": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "organization_id": null,
            "exp": 1724260463,
            "email_verified": true,
            "sub": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "auth_time": 1723836317,
            "tier_level": 1,
            "tier_end_date": 1718651751000,
            "user_id": "JBjNydUhfZOaWt1RON84JT0CIAw1",
            "optout": false,
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocI_4A5HgAW_FFGSUllpNIg8MlQYP9UwP46TOURayQit7E4ThA=s96-c",
            "iat": 1724256863,
            "firebase": {
              "identities": {
                "google.com": [
                  "107653332022728942373"
                ],
                "email": [
                  "samuelamoh2005@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            }
          }
        },
        "elapsed": {
          "seconds": 118362.091704,
          "repr": "1 day, 8:52:42.091704"
        },
        "module": "v2",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "name": "copilot_proxy.api.users.v2",
        "line": 60,
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "exception": null,
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.269646+00:00",
          "timestamp": 1724258377.269646
        },
        "function": "get_features"
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.269886790Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "dvc9ok1x3ts11cft",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:37.275635+00:00",
          "timestamp": 1724258377.275635
        },
        "elapsed": {
          "seconds": 119074.919883,
          "repr": "1 day, 9:04:34.919883"
        },
        "line": 156,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "extra": {},
        "module": "core",
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134585929156288
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core"
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.275910965Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "gvq5becff7wzhii4",
    "jsonPayload": {
      "record": {
        "name": "copilot_proxy.auth.core",
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "exception": null,
        "time": {
          "timestamp": 1724258377.276008,
          "repr": "2024-08-21 16:39:37.276008+00:00"
        },
        "function": "verify_minimum_tier_level",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "module": "core",
        "thread": {
          "id": 134585929156288,
          "name": "AnyIO worker thread"
        },
        "elapsed": {
          "repr": "1 day, 9:04:34.920256",
          "seconds": 119074.920256
        },
        "line": 106,
        "extra": {},
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False"
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.276165641Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "91s4qswumfeu75ei",
    "jsonPayload": {
      "record": {
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "time": {
          "repr": "2024-08-21 16:39:37.280831+00:00",
          "timestamp": 1724258377.280831
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "extra": {
          "user": {
            "aud": "codium-dev-360812",
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "allowed": true,
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "codiumate": null,
            "tier_level": 10,
            "email": "anjasajfullin@gmail.com",
            "email_verified": false,
            "firebase": {
              "identities": {
                "github.com": [
                  "155015223"
                ],
                "email": [
                  "anjasajfullin@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "auth_time": 1724257455,
            "optout": false,
            "iat": 1724257455,
            "exp": 1724261055,
            "name": "HoneyMoon is still aliwe",
            "organization_id": null,
            "tier_end_date": 1724734597000,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "baseUrl": null,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2"
          },
          "on_prem_log": true,
          "request_id": "8532717f-7dcc-4306-ab33-3455388b04a0",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "data": {
            "doc_context_suffix": ">\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
            "task": "",
            "is_file_diff": false,
            "max_repo_context": 5,
            "extra_instructions": "",
            "context_mode": "pre_pr",
            "repo_context": [],
            "context": [],
            "reference_snippet_messages": [
              {
                "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman",
                "type": "CodiummateImport",
                "file_name": "Imports and implementations used in this file:"
              },
              {
                "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js",
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure"
              },
              {
                "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                "type": "File",
                "file_name": "src/components/stagerbar/stagerbar.jsx"
              },
              {
                "file_name": "src/store/reducers/todoById/todoByIdSlice.js",
                "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;",
                "type": "File"
              },
              {
                "type": "File",
                "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>",
                "file_name": "src/pages/main/main.jsx"
              },
              {
                "file_name": "tailwind.config.js",
                "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}",
                "type": "File"
              }
            ],
            "file_diff_content": "",
            "language": "javascriptreact",
            "user_context": [],
            "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotat",
            "user_data": {
              "extension_version": "0.9.13",
              "editor_sub_version": null,
              "os_version": "v18.15.0",
              "editor_version": "1.82.2",
              "os_platform": "linux",
              "installation_id": "15788762-fe0e-4403-bf86-bc88815499a2",
              "editor_type": "vscode",
              "user_id": null
            },
            "max_remote_context": 5,
            "relative_file_path": "src/components/spacemen/spaceman.jsx",
            "remote_context": [],
            "is_multiline": false
          }
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "exception": null,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "line": 513,
        "function": "run_code_completion",
        "name": "copilot_proxy.api.code.v2",
        "elapsed": {
          "repr": "1 day, 9:04:34.925079",
          "seconds": 119074.925079
        },
        "module": "v2",
        "message": "Incoming request /v2/code/completion"
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.281259755Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "1xyf7bsfdiom37",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "BY"
        }
      },
      "remoteIp": "37.214.22.173",
      "statusDetails": "response_sent_by_backend",
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "priority": 500
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "priority": 14000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8902",
      "status": 200,
      "responseSize": "481",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.17.14",
      "latency": "0.809002s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:37.296036Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/20f263ddc5ce9910116eeb5f949e9d3f",
    "receiveTimestamp": "2024-08-21T16:39:38.979960504Z",
    "spanId": "e78388537e33f835"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4a064054-74c7-4f1f-8f97-b5234f4cc837",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.310696Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4a064054-74c7-4f1f-8f97-b5234f4cc837",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.712879953Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9d9645b5-4016-409e-afc1-f52224b8e393",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.313593Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9d9645b5-4016-409e-afc1-f52224b8e393",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.703367738Z"
  },
  {
    "insertId": "g1uxruym1snal5ry",
    "jsonPayload": {
      "record": {
        "name": "app",
        "process": {
          "id": 20,
          "name": "MainProcess"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "time": {
          "timestamp": 1724258377.320281,
          "repr": "2024-08-21 16:39:37.320281+00:00"
        },
        "exception": null,
        "module": "app",
        "message": "Incoming request /v1/health/live",
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "function": "live",
        "elapsed": {
          "seconds": 118361.700657,
          "repr": "1 day, 8:52:41.700657"
        },
        "extra": {
          "on_prem_log": true
        },
        "line": 164
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.320557864Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "bqqsmc7p4xd56q1c",
    "jsonPayload": {
      "record": {
        "line": 37,
        "elapsed": {
          "repr": "1 day, 8:52:42.145096",
          "seconds": 118362.145096
        },
        "message": "Request handled",
        "function": "dispatch",
        "exception": null,
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "name": "app",
        "extra": {
          "url": "https://api.codium.ai/v2/users/features",
          "method": "GET",
          "request_id": "2a3ab5a4-eb2c-4e6a-b197-ebaa37bfb6b3",
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "102.176.94.239"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.323038+00:00",
          "timestamp": 1724258377.323038
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.323276929Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:37Z\" level=info msg=\"Alloc=11982 TotalAlloc=9704845 Sys=52133 NumGC=1175 Goroutines=14\"",
    "insertId": "2pbgupzrp4gfa042",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "repo-server",
        "location": "us-central1",
        "pod_name": "argo-cd-argocd-repo-server-68c4fd64bb-v6pb7",
        "namespace_name": "argo-cd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.323764250Z",
    "severity": "ERROR",
    "labels": {
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/app_kubernetes_io/name": "argocd-repo-server",
      "k8s-pod/app_kubernetes_io/component": "repo-server",
      "k8s-pod/pod-template-hash": "68c4fd64bb",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app_kubernetes_io/version": "v2.10.5"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:41.247579127Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2b9ea0a0-8320-4267-acc2-c69b0350632a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.342122Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2b9ea0a0-8320-4267-acc2-c69b0350632a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.041624703Z"
  },
  {
    "insertId": "fyt2mluqwlu8q2ka",
    "jsonPayload": {
      "record": {
        "module": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.344638+00:00",
          "timestamp": 1724258377.344638
        },
        "line": 37,
        "extra": {
          "method": "GET",
          "url": "http://10.164.15.3:5432/v1/health/live",
          "source_host": "10.164.15.1",
          "request_id": "N/A",
          "status_code": 200,
          "on_prem_log": true
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "function": "dispatch",
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "name": "app",
        "elapsed": {
          "repr": "1 day, 8:52:41.725014",
          "seconds": 118361.725014
        },
        "process": {
          "name": "MainProcess",
          "id": 20
        },
        "exception": null,
        "message": "Request handled"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.344902720Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/default/endpoints/kubernetes"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "core/v1/namespaces/default/endpoints/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7a08e1ce-cda7-47a1-b127-49bae3ac70c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.350690Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7a08e1ce-cda7-47a1-b127-49bae3ac70c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.733451027Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.get",
          "resource": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ef9bbe34-b161-4091-95fb-1db305eaf148",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.357792Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ef9bbe34-b161-4091-95fb-1db305eaf148",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.091029664Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.223.15.191",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.366384803Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "hiwjibf54ptet",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:37.358930015Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.105603644Z"
  },
  {
    "insertId": "9zq0syfaj10tugu6",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:37.360349+00:00",
          "timestamp": 1724258377.360349
        },
        "line": 156,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134585476179648
        },
        "module": "core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "name": "copilot_proxy.auth.core",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "extra": {},
        "function": "verify_user_token",
        "elapsed": {
          "repr": "1 day, 9:04:34.826972",
          "seconds": 119074.826972
        }
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.360649687Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "1pgs22wyoxn4yuyl",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "exception": null,
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "name": "copilot_proxy.auth.core",
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "module": "core",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "elapsed": {
          "repr": "1 day, 9:04:34.827378",
          "seconds": 119074.827378
        },
        "line": 106,
        "extra": {},
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "function": "verify_minimum_tier_level",
        "time": {
          "timestamp": 1724258377.360755,
          "repr": "2024-08-21 16:39:37.360755+00:00"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134585476179648
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.360965846Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "insertId": "b3whga5cnr98lgv8",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "extra": {
          "request_id": "3c61ed52-2a2b-49fc-acd8-dcdcf6bb2df4",
          "data": {
            "reference_snippet_messages": [
              {
                "type": "DirectoryStructure",
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                "file_name": "Project directory structure:"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                "file_name": "templates\\base.html",
                "type": "File"
              },
              {
                "file_name": "templates\\base.html",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard"
              },
              {
                "file_name": "templates\\base.html",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard"
              }
            ],
            "user_data": {
              "user_id": null,
              "os_platform": "win32",
              "os_version": "v20.14.0",
              "editor_version": "1.92.2",
              "extension_version": "0.9.13",
              "editor_sub_version": null,
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd",
              "editor_type": "vscode"
            },
            "user_context": [],
            "context": [],
            "context_mode": "pre_pr",
            "is_multiline": false,
            "language": "django-html",
            "is_file_diff": false,
            "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
            "task": "",
            "extra_instructions": "",
            "file_diff_content": "",
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Глав",
            "remote_context": [],
            "max_remote_context": 5,
            "relative_file_path": "dish/templates/core/frontpage.html",
            "repo_context": [],
            "max_repo_context": 5
          },
          "on_prem_log": true,
          "user": {
            "email": "y.borozna81@internet.ru",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "exp": 1724258892,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_end_date": 1701693510000,
            "auth_time": 1724251717,
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            },
            "iat": 1724255292,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true,
            "codiumate": null,
            "aud": "codium-dev-360812",
            "tier_level": 10,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "email_verified": false
          },
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          }
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "module": "v2",
        "line": 513,
        "name": "copilot_proxy.api.code.v2",
        "time": {
          "repr": "2024-08-21 16:39:37.365599+00:00",
          "timestamp": 1724258377.365599
        },
        "message": "Incoming request /v2/code/completion",
        "elapsed": {
          "seconds": 119074.832222,
          "repr": "1 day, 9:04:34.832222"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "function": "run_code_completion",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.366019242Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.992594917Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.377834042Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "orderBy": "timestamp asc",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ],
        "filter": "(timestamp>\"2024-08-21T16:39:23.572840Z\" OR (timestamp=\"2024-08-21T16:39:23.572840Z\" AND insertId>\"36008cbf-5777-41fb-9b2c-6b825b7b46bc\"))\n(timestamp<\"2024-08-21T16:39:27.368229Z\")",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest"
      }
    },
    "insertId": "i2d3ojd2d97",
    "resource": {
      "type": "logging_log",
      "labels": {
        "project_id": "codium-production",
        "name": ""
      }
    },
    "timestamp": "2024-08-21T16:39:37.377518792Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.683342007Z"
  },
  {
    "insertId": "slma96bjvonri52m",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "message": "Incoming request /v1/health/live",
        "module": "app",
        "name": "app",
        "exception": null,
        "line": 164,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "live",
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "time": {
          "repr": "2024-08-21 16:39:37.386042+00:00",
          "timestamp": 1724258377.386042
        },
        "elapsed": {
          "repr": "1 day, 8:48:23.660062",
          "seconds": 118103.660062
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.386313517Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "insertId": "697ofox4zy1y0gbs",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "process": {
          "id": 19,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118529.675759,
          "repr": "1 day, 8:55:29.675759"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.389816+00:00",
          "timestamp": 1724258377.389816
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "extra": {
          "on_prem_log": true
        },
        "function": "live",
        "name": "app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app",
        "message": "Incoming request /v1/health/live",
        "exception": null,
        "line": 164
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.390159882Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/cluster-autoscaler-status"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/cluster-autoscaler-status",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1eeb6dbf-b8b5-4bf2-b828-a45b4b0a736b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.395590Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1eeb6dbf-b8b5-4bf2-b828-a45b4b0a736b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.818893860Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eb9f2f6e-7f23-4e49-bdef-d16697d0d3d4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.397549Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eb9f2f6e-7f23-4e49-bdef-d16697d0d3d4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.899487077Z"
  },
  {
    "insertId": "hqhwaokgyje3d40h",
    "jsonPayload": {
      "record": {
        "module": "app",
        "extra": {
          "on_prem_log": true,
          "url": "http://10.164.16.6/v1/health/live",
          "request_id": "N/A",
          "status_code": 200,
          "source_host": "35.191.206.100",
          "method": "GET"
        },
        "time": {
          "timestamp": 1724258377.414163,
          "repr": "2024-08-21 16:39:37.414163+00:00"
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 37,
        "message": "Request handled",
        "function": "dispatch",
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "exception": null,
        "name": "app",
        "elapsed": {
          "seconds": 118103.688183,
          "repr": "1 day, 8:48:23.688183"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh"
      }
    },
    "timestamp": "2024-08-21T16:39:37.414449618Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.235541656Z"
  },
  {
    "insertId": "ra338pj1pifxqpx3",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 8:55:29.711555",
          "seconds": 118529.711555
        },
        "module": "app",
        "message": "Request handled",
        "time": {
          "repr": "2024-08-21 16:39:37.425612+00:00",
          "timestamp": 1724258377.425612
        },
        "line": 37,
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "extra": {
          "source_host": "10.164.9.1",
          "status_code": 200,
          "method": "GET",
          "url": "http://10.164.9.5:5432/v1/health/live",
          "on_prem_log": true,
          "request_id": "N/A"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "name": "app",
        "function": "dispatch",
        "process": {
          "name": "MainProcess",
          "id": 19
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.425913871Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "79cxp9f5w0ihd",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "181.115.166.142",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BO"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "enforcedSecurityPolicy": {
        "priority": 15000,
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1535",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "181.115.166.142",
      "serverIp": "10.164.10.5",
      "latency": "0.168595s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:37.442797Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/8bda55b5849a447e23207737313530cf",
    "receiveTimestamp": "2024-08-21T16:39:38.485597752Z",
    "spanId": "eb992269cdb45fa3"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "aa6f454d-9e92-48b4-8935-e8325df112c6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.472837Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "aa6f454d-9e92-48b4-8935-e8325df112c6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.041624703Z"
  },
  {
    "insertId": "mhkipqf32inzb",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT",
        "priority": 500
      },
      "remoteIp": "200.118.60.217",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "priority": 15000,
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd",
        "remoteIpInfo": {
          "regionCode": "CO"
        }
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1454",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "200.118.60.217",
      "serverIp": "10.164.9.5",
      "latency": "0.117653s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:37.478694Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/2da65adddb2a3cdb3a620a026cb9f12d",
    "receiveTimestamp": "2024-08-21T16:39:38.541905813Z",
    "spanId": "6f38f7980c849e97"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.485048042Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "filter": "(timestamp>\"2024-08-21T16:39:23.572840Z\" OR (timestamp=\"2024-08-21T16:39:23.572840Z\" AND insertId>\"36008cbf-5777-41fb-9b2c-6b825b7b46bc\"))\n(timestamp<\"2024-08-21T16:39:27.368229Z\")",
        "pageToken": "EAA4orGG4vPoyv2vAUqLBiIjIhMKETFoZGNsbDExbWFqcDQ0N2wAKgwIu7CYtgYQ5saeugNK4wUKtwVKtAUA0C8gBm96y70fhAfDlOXyxAYgQ3VyMgcYyz-L71CKvLmk8E7o06LXKRT4GqJymDLYiEmZmgVHcvQb3_es-ZyqYjfsWmIA_ggnSsexOAo9PainZdLslP_1l8Ui-t7yaX9QHqWsbPdbARDA5oyN720W97nSk3m5J7RIdNzYKC0O_6d4YyQN51kA7BjqjRQ6VBGeRHqYDxreLCbJMJS-1xLQeEOKlWmVGOPifYPNRPRh-pHW3tn3xyat1DULthdJ1yxRScP2Xky7xtJT2kvoZD84_4cv0X4mHTsKO_xbztxTCemH-grJDkO_Xz0aRUmUXB2yXpEBiJCWeEf1n0bqqivbdn--Rn00FBz88IgAQLuqBmMyTp1oim0o1WUPccUf5WVh1un9iE42se1mcgQlkTcWxJFg5Ly35hvoiKSX1imrRN0QRL5PxNEWRmr1F1HI5oFSV9bfDvbBMTwFqooof5742Kztk-PKOZKrbITFm_vW2cFbG5uXiTTSj5QdGxxjioMsIr7thzaj3gBZGXWS10DWhvQb9Y4i2mSvLOZbLcCwiajKmlPtj2Mb7O-lTFYPXdrdFfTwEiZioERHhtQfA4iEmAPCk4cSZxh7cupiUr8t1AW6gXgQPgIvTz2TTEUdKduN2ER4ZQ1qW0Ovp_tQdtGa1lcMqE4kDSY4vVzFB-C9c4_YAqp341OJCSWNUwseRGSpJkSMDPJhQ_q38ETDMkXR7q6wiaxhYJn_FCuA0dCONEx_C7pzlWwpKFtyfeuyB27tvstzQ0E4URUz3X-Wfl7NvcwDCTnaP5MZtNAFiltYCNNIRjnRNGBwF8dI6vBi_9WHHf7ONfhcmKZlzL0wMAuNob9zWKOgKJHjq_fsJ7DO2oycJrWw1WbcYL40ljDfIy26pqswLnh9YON9oyiMDZ-0SlXccRIcGgwIu7CYtgYQwLCTkQIiDAi_sJi2BhCH9cqvAVDY16Hg2fS6hLABUgcItvPH5fsBYPn1_5SxoPyLRmoZCgwIybCYtgYQuP-BsgESBRCoxNosGDIgAA",
        "orderBy": "timestamp asc",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ],
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest"
      }
    },
    "insertId": "zky0h8d2grg",
    "resource": {
      "type": "logging_log",
      "labels": {
        "project_id": "codium-production",
        "name": ""
      }
    },
    "timestamp": "2024-08-21T16:39:37.484842133Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.727679006Z"
  },
  {
    "insertId": "r65t9pjnbnjgg77v",
    "jsonPayload": {
      "record": {
        "name": "ai.litellm.litellm_infer_engine",
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "line": 131,
        "time": {
          "repr": "2024-08-21 16:39:37.492975+00:00",
          "timestamp": 1724258377.492975
        },
        "elapsed": {
          "repr": "1 day, 8:59:58.842428",
          "seconds": 118798.842428
        },
        "message": "OpenAI Response",
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "function": "generate",
        "extra": {
          "openai_response": {
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='авная</a>\\n                </li>', logprobs=None)"
            ],
            "usage": {
              "completion_tokens": 9,
              "prompt_tokens": 1761,
              "total_tokens": 1770
            },
            "object": "text_completion",
            "id": "cmpl-9yievcbV7i4VjNIXIc3nOp2g5CNVU",
            "model": "gpt-3.5-turbo-instruct",
            "created": 1724258377
          },
          "model": "gpt-3.5-turbo-instruct",
          "completion": "авная</a>\n                </li>",
          "openai_request_id": "cmpl-9yievcbV7i4VjNIXIc3nOp2g5CNVU",
          "url_path": "/v2/code/completion",
          "user": {
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_level": 10,
            "exp": 1724258892,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "allowed": true,
            "iat": 1724255292,
            "tier_end_date": 1701693510000,
            "auth_time": 1724251717,
            "email": "y.borozna81@internet.ru",
            "codiumate": null,
            "email_verified": false,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "aud": "codium-dev-360812"
          },
          "request_id": "106ea659-851d-4b6d-9d2f-0b3bfef5d963",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\nв</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Гла",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          }
        },
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "module": "litellm_infer_engine"
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.493426205Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "toa6n15rt82vp7y2",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:37.495662+00:00",
          "timestamp": 1724258377.495662
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "elapsed": {
          "seconds": 282616.782332,
          "repr": "3 days, 6:30:16.782332"
        },
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 135434384432000
        },
        "line": 164,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "extra": {
          "on_prem_log": true
        },
        "module": "app",
        "function": "live",
        "message": "Incoming request /v1/health/live"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "namespace_name": "production-recursion",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.495948995Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.290947673Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d50b6888-5018-444c-a0c5-82f56cdadb27",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.496079Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d50b6888-5018-444c-a0c5-82f56cdadb27",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.815048239Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "69e097ae-5d7b-4d95-891b-c48d759ccd07",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.502407Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "69e097ae-5d7b-4d95-891b-c48d759ccd07",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.486233848Z"
  },
  {
    "insertId": "aj15l5ibtmkwr8km",
    "jsonPayload": {
      "text": "User anahi.callejas@raintreeinc.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.auth.core",
        "thread": {
          "id": 132437036222144,
          "name": "AnyIO worker thread"
        },
        "extra": {},
        "elapsed": {
          "seconds": 118799.678831,
          "repr": "1 day, 8:59:59.678831"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "line": 156,
        "module": "core",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "message": "User anahi.callejas@raintreeinc.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:37.513948+00:00",
          "timestamp": 1724258377.513948
        },
        "function": "verify_user_token"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:37.514174125Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "83kjkegnhblvhdyk",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:37.513762+00:00",
          "timestamp": 1724258377.513762
        },
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "exception": null,
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "module": "inference_utils",
        "line": 1112,
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "function": "process",
        "name": "copilot_proxy.utils.inference_utils",
        "extra": {
          "user": {
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_end_date": 1701693510000,
            "tier_level": 10,
            "firebase": {
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              },
              "sign_in_provider": "custom"
            },
            "exp": 1724258892,
            "aud": "codium-dev-360812",
            "allowed": true,
            "email_verified": false,
            "email": "y.borozna81@internet.ru",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "auth_time": 1724251717,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "codiumate": null,
            "iat": 1724255292
          },
          "request_id": "106ea659-851d-4b6d-9d2f-0b3bfef5d963",
          "results": {
            "user_input": {
              "repo_context": [],
              "user_context": [],
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "relative_file_path": "dish/templates/core/frontpage.html",
              "remote_context": [],
              "max_remote_context": 5,
              "configuration": {},
              "file_diff_content": "",
              "is_multiline": false,
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Гла",
              "doc_context_suffix": "в</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
              "is_file_diff": false,
              "reference_snippet_messages": [
                {
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:"
                },
                {
                  "file_name": "templates\\base.html",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                  "type": "File"
                },
                {
                  "type": "Clipboard",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html"
                },
                {
                  "file_name": "templates\\base.html",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "type": "Clipboard"
                }
              ],
              "context_mode": "pre_pr",
              "task": "",
              "language": "django-html",
              "max_repo_context": 5,
              "extra_instructions": "",
              "context": []
            },
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "03_start_time": "2024-08-21 16:39:37.006783",
                "04_end_time": "2024-08-21 16:39:37.513659",
                "00_system": null,
                "02_completion": "авная</a>\n                </li>",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\nв</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Гла"
              }
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"\\u0430\\u0432\\u043d\\u0430\\u044f</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ]
          },
          "url_path": "/v2/code/completion",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          }
        },
        "message": "Prompts and results v2",
        "elapsed": {
          "seconds": 118798.863215,
          "repr": "1 day, 8:59:58.863215"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.514233904Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "krlau8y7sl21t02t",
    "jsonPayload": {
      "record": {
        "extra": {
          "request_id": "6246b312-f3d4-4a82-a1cf-acc871f10ebd",
          "method": "GET",
          "url": "https://api.codium.ai/v2/rag/settings",
          "on_prem_log": true,
          "source_host": "181.115.166.142",
          "status_code": 200
        },
        "time": {
          "repr": "2024-08-21 16:39:37.514510+00:00",
          "timestamp": 1724258377.51451
        },
        "line": 37,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "function": "dispatch",
        "message": "Request handled",
        "exception": null,
        "name": "app",
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1 day, 8:59:59.679393",
          "seconds": 118799.679393
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.514711174Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "991aad16-0870-4bd6-a939-c6aa257ae5fe",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.516373Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "991aad16-0870-4bd6-a939-c6aa257ae5fe",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.734940773Z"
  },
  {
    "insertId": "trxnhdy0zzxnsbug",
    "jsonPayload": {
      "record": {
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118530.417338,
          "repr": "1 day, 8:55:30.417338"
        },
        "line": 37,
        "time": {
          "timestamp": 1724258377.518987,
          "repr": "2024-08-21 16:39:37.518987+00:00"
        },
        "function": "dispatch",
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "message": "Request handled",
        "extra": {
          "status_code": 200,
          "method": "POST",
          "request_id": "129af8b4-5f2b-4134-9a02-fc077a7d8da0",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/tests/generate",
          "source_host": "122.171.21.25"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.519668137Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "cjv11jvctw5k09q6",
    "jsonPayload": {
      "record": {
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "time": {
          "timestamp": 1724258377.51977,
          "repr": "2024-08-21 16:39:37.519770+00:00"
        },
        "function": "dispatch",
        "name": "app",
        "thread": {
          "name": "MainThread",
          "id": 135434384432000
        },
        "extra": {
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "35.191.206.81",
          "url": "http://10.164.4.6/v1/health/live",
          "method": "GET",
          "request_id": "N/A"
        },
        "exception": null,
        "message": "Request handled",
        "module": "app",
        "elapsed": {
          "seconds": 282616.80644,
          "repr": "3 days, 6:30:16.806440"
        },
        "line": 37,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production-recursion",
        "pod_name": "auth-proxy-6c5c88998f-rv779"
      }
    },
    "timestamp": "2024-08-21T16:39:37.520114313Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.290947673Z"
  },
  {
    "insertId": "jhy415ft7fdjvs58",
    "jsonPayload": {
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "elapsed": {
          "seconds": 118529.815913,
          "repr": "1 day, 8:55:29.815913"
        },
        "line": 156,
        "exception": null,
        "extra": {},
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 137083796313792
        },
        "function": "verify_user_token",
        "message": "User jaime@soluntech.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "name": "copilot_proxy.auth.core",
        "time": {
          "repr": "2024-08-21 16:39:37.529970+00:00",
          "timestamp": 1724258377.52997
        },
        "module": "core",
        "process": {
          "id": 19,
          "name": "MainProcess"
        }
      },
      "text": "User jaime@soluntech.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:37.530239384Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "oxoj7yutwhe82aky",
    "jsonPayload": {
      "record": {
        "function": "dispatch",
        "process": {
          "id": 19,
          "name": "MainProcess"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "elapsed": {
          "repr": "1 day, 8:55:29.816587",
          "seconds": 118529.816587
        },
        "message": "Request handled",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "exception": null,
        "extra": {
          "request_id": "5dea62a3-20f2-413a-9469-29a2e5ec9006",
          "status_code": 200,
          "on_prem_log": true,
          "method": "GET",
          "url": "https://api.codium.ai/v2/rag/settings",
          "source_host": "200.118.60.217"
        },
        "name": "app",
        "module": "app",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "time": {
          "timestamp": 1724258377.530644,
          "repr": "2024-08-21 16:39:37.530644+00:00"
        },
        "line": 37
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.530861535Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "0idrf5jkkdoagrxt",
    "jsonPayload": {
      "record": {
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "name": "app",
        "time": {
          "repr": "2024-08-21 16:39:37.544967+00:00",
          "timestamp": 1724258377.544967
        },
        "exception": null,
        "extra": {
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "37.214.22.173",
          "url": "https://api.codium.ai/v2/code/completion",
          "method": "POST",
          "request_id": "106ea659-851d-4b6d-9d2f-0b3bfef5d963"
        },
        "elapsed": {
          "repr": "1 day, 8:59:58.894420",
          "seconds": 118798.89442
        },
        "message": "Request handled",
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "function": "dispatch",
        "module": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "line": 37,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:37.545213720Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a99e1ae9-60bd-4ccd-9f8b-07b5d22393f8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.547432Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a99e1ae9-60bd-4ccd-9f8b-07b5d22393f8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.468484654Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "76128704-f828-476b-a807-6c65a8f32620",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.549940Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "76128704-f828-476b-a807-6c65a8f32620",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.513765582Z"
  },
  {
    "insertId": "dknm1482ov726sjp",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "gcp-filestore-driver",
        "pod_name": "filestore-node-5wjdz",
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system"
      }
    },
    "timestamp": "2024-08-21T16:39:37.551101515Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-intui-be498710-0sn6",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.226030517Z"
  },
  {
    "insertId": "iop43c7d4ymgvfiw",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "namespace_name": "kube-system",
        "pod_name": "filestore-node-5wjdz",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.551156269Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-intui-be498710-0sn6"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.226030517Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a1eede83-0b04-4fd5-9721-84253ec56bff",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.568524Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:gke-ccm-migration-leader-election/kube-system\" of Role \"system:gke-ccm-migration-leader-election\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a1eede83-0b04-4fd5-9721-84253ec56bff",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.514459420Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "821df29d-826c-4773-b6e2-58029e9f484e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.592554Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "821df29d-826c-4773-b6e2-58029e9f484e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.212461516Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4b8a080e-28f2-4cc9-86b4-dc7174976f26",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.604126Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4b8a080e-28f2-4cc9-86b4-dc7174976f26",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.685275161Z"
  },
  {
    "insertId": "103ztu0factd35",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "38.183.8.101",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IN"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "priority": 1000,
        "outcome": "ACCEPT"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1560",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "38.183.8.101",
      "serverIp": "10.164.17.14",
      "latency": "0.342229s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:37.609148Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/fcf455eaf7d903399f47373cb8f34061",
    "receiveTimestamp": "2024-08-21T16:39:38.493115494Z",
    "spanId": "73cea0982eebb7b8"
  },
  {
    "insertId": "0t71rfmzx0vl1hk8",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "exception": null,
        "message": "Incoming request /v1/health/live",
        "time": {
          "repr": "2024-08-21 16:39:37.609287+00:00",
          "timestamp": 1724258377.609287
        },
        "module": "app",
        "function": "live",
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "line": 164,
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "elapsed": {
          "repr": "1 day, 9:08:27.318571",
          "seconds": 119307.318571
        },
        "extra": {
          "on_prem_log": true
        },
        "name": "app",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.609566689Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:55886 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "7l7smhfw7xemupf4",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production-jb",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7"
      }
    },
    "timestamp": "2024-08-21T16:39:37.613926547Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.792195153Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/production--argocd/secrets/firebase-service-account"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/production--argocd/secrets/firebase-service-account",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "091a08d8-3ce4-426c-85c6-ecced8c7e898",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.619345Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "091a08d8-3ce4-426c-85c6-ecced8c7e898",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.407381333Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/production--argocd/secrets/gcp-pubsub-key"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/production--argocd/secrets/gcp-pubsub-key",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e787a43c-b87e-464a-b386-6d5dbffb35bd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.623330Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e787a43c-b87e-464a-b386-6d5dbffb35bd",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.122259033Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/production--argocd/secrets/gcp-pubsub-key"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/production--argocd/secrets/gcp-pubsub-key",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6827c108-cd08-41f7-a577-002fbc1d0ebb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.625580Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6827c108-cd08-41f7-a577-002fbc1d0ebb",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.514459420Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:56490 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "pq20o4awxbybcv29",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-6dc4b6f7cb-sm9vg",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production-paychex",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.627823514Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-ejax"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.091745758Z"
  },
  {
    "insertId": "hofp2wkqjbxt5fsa",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "seconds": 119307.338454,
          "repr": "1 day, 9:08:27.338454"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "message": "Request handled",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "function": "dispatch",
        "name": "app",
        "line": 37,
        "module": "app",
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:37.629170+00:00",
          "timestamp": 1724258377.62917
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "extra": {
          "url": "http://10.164.1.4/v1/health/live",
          "status_code": 200,
          "source_host": "35.191.205.164",
          "method": "GET",
          "on_prem_log": true,
          "request_id": "N/A"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8"
      }
    },
    "timestamp": "2024-08-21T16:39:37.629430815Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.643227365Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "orderBy": "timestamp asc",
        "pageToken": "EAA4orGG4vPoyv2vAUr2BSIjIhMKEWI4bzRvbG85NXE5bnVmNngAKgwIvLCYtgYQ9I3IzwFKzgUKogVKnwUA0C8gBv-ibreVb17pX-dtwwVRiBhRNnzEMDLVo5wV9JRtJvJ8_YY6gBPraTUQduffkjFUpW4e4RUxkGsZJI7TTg6ds5PmHRzl_vMaisRKB2d4Qb9VmD_0P_8GoHXr1AYH5fvhMIVmiNfbcGWdZjYSXTTepq7HsN1GNiBwTlCQYcIGcFy6kCil_D4WIHFuCmw0DDhDlhwkoX6vkY_A2hUfZCq1bfaAExvrDs5qpSK7jnAjvgwQTLF8j245xXrqhjL5ED7E46xr8CEuUJKoPM6_Y5wwE6EnXPJhc06w6o72AdjaiMqpP_B19i-dnD7gGrLfdBdX0LT_icFVBeeTfJcr85USOd0HZ60vtVG9iis7vlQhqfDCcrtDnxQh9e1nNsS_KXlRpESzsXN4QXqNi9goyRbU2tfbaWHKyeQz4_c9A3fzELnt8ThCw9BrhHegwnS97zSWPQKOo8RdnPutP_V1lG4cXh2MHbpNRWEFr3KIe4Vz_o60QXWJDxBE-c2WpY28M1MfU7joUELhzsh7PPVCYV36JYGrPTtk0z4wfklRSMh_8HNc_wDhNL0Ohe498gO1n9rmBBJ04mfu2sbr3a2fU5qX0uBgQ_ClfBtcoO8jqVDRLAEVuogXwPmDrk65Rn8YigL83FBx_srDuzNMecsUSZ8rtdUxq_AW-16uXRVILw_Q6j7UlDxDoFiWY-b_vMseWOaNeQ5odnOgnp5S9W_gFCMTjV5MCnS5V-DA1ryOhgV0iPaB8IyKDtDWaDwTi5BKGrgU7rXI9J4QguxAX2aPupxbOxpbuo-u7oR7UDkH6tkWiCYmgu4djss_v8X2sAZw0SaOMgBsGN4mnqG8SOz-wbNqcLsiDfPjTKpGyqk-bRvrSt00GClpTMZ4BntLQxIcGgwIu7CYtgYQwLCTkQIiDAi_sJi2BhCH9cqvAVDY16Hg2fS6hLABUgcItvPH5fsBYPn1_5SxoPyLRmoZCgwIybCYtgYQuP-BsgESBRDt249qGGQgAQ",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ],
        "filter": "(timestamp>\"2024-08-21T16:39:23.572840Z\" OR (timestamp=\"2024-08-21T16:39:23.572840Z\" AND insertId>\"36008cbf-5777-41fb-9b2c-6b825b7b46bc\"))\n(timestamp<\"2024-08-21T16:39:27.368229Z\")",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest"
      }
    },
    "insertId": "1e847opd29vn",
    "resource": {
      "type": "logging_log",
      "labels": {
        "name": "",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.635506006Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.545433852Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "104.196.19.158",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib \"1.8.3-gke.18\" grpc-go/1.56.3,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.656392140Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "name": "projects/67590289846",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "167q326f2q5k26",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:37.649390160Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.620743040Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--cfae953c-uhw3"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.watch",
          "resource": "core/v1/nodes/gke-production-clust-production-pool--cfae953c-uhw3"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/nodes/gke-production-clust-production-pool--cfae953c-uhw3",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8d38ba3a-7a16-4676-9f93-ceed9cc40585",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.657324Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8d38ba3a-7a16-4676-9f93-ceed9cc40585",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.616251829Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.669223002Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1mbiamef34pi49",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:37.665030800Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.205137201Z"
  },
  {
    "insertId": "ibzwtrg1let8gv",
    "jsonPayload": {
      "remoteIp": "35.192.92.84",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://free.github.pr-agent.codium.ai/",
      "requestSize": "150",
      "status": 200,
      "responseSize": "136",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.192.92.84",
      "serverIp": "10.164.16.11",
      "latency": "0.006636s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-github-servic-300-2ce4c0b8",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.666815Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/cb594449eaf6994cdedb20c814d895a8",
    "receiveTimestamp": "2024-08-21T16:39:38.631013539Z",
    "spanId": "4fde176ba6fe2de3"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.68.213",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.677481215Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1yhc1raf313drq",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:37.671522716Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.518222753Z"
  },
  {
    "insertId": "jav04s3najf5fi84",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "function": "dispatch",
        "line": 804,
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "name": "pr_agent.servers.github_app",
        "exception": null,
        "elapsed": {
          "seconds": 5267.286739,
          "repr": "1:27:47.286739"
        },
        "thread": {
          "id": 134575525518208,
          "name": "MainThread"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "module": "github_app",
        "time": {
          "timestamp": 1724258377.671494,
          "repr": "2024-08-21 16:39:37.671494+00:00"
        },
        "extra": {
          "url": "https://free.github.pr-agent.codium.ai/",
          "on_prem_log": true,
          "method": "GET",
          "source_host": "35.192.92.84",
          "status_code": 200
        },
        "process": {
          "name": "MainProcess",
          "id": 234
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "main",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "location": "us-central1",
        "namespace_name": "pr-agent",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.671788888Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-github",
      "k8s-pod/pod-template-hash": "57b9b6c95f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:38.151477327Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d5649dcb-c8df-4fbb-ac39-a0fb9bc5366d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.681444Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d5649dcb-c8df-4fbb-ac39-a0fb9bc5366d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.823033816Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b687bb14-f428-4749-b91e-88bafc2f4288",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.682009Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b687bb14-f428-4749-b91e-88bafc2f4288",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.613693959Z"
  },
  {
    "insertId": "l4t3lwyef8yguhof",
    "jsonPayload": {
      "record": {
        "exception": null,
        "name": "app",
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "thread": {
          "name": "MainThread",
          "id": 138663458962304
        },
        "module": "app",
        "extra": {
          "on_prem_log": true
        },
        "function": "live",
        "line": 164,
        "message": "Incoming request /v1/health/live",
        "time": {
          "repr": "2024-08-21 16:39:37.683489+00:00",
          "timestamp": 1724258377.683489
        },
        "elapsed": {
          "seconds": 282556.643401,
          "repr": "3 days, 6:29:16.643401"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-recursion",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.683756083Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.821204501Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d8b41a39-625b-43b3-aea3-b5c836b66c03",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.684906Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d8b41a39-625b-43b3-aea3-b5c836b66c03",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.712021032Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4da10ad9-2fe7-42d0-be97-35df272eac5b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.692937Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4da10ad9-2fe7-42d0-be97-35df272eac5b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.113766746Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.44.18.133",
        "callerSuppliedUserAgent": "grpc-go/1.61.0-dev,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.701215491Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "name": "projects/67590289846",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1yhc1raf313drs",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:37.695872991Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.518222753Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.44.18.133",
        "callerSuppliedUserAgent": "grpc-go/1.61.0-dev,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.701311812Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "name": "projects/67590289846",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "e6wxi1f3c86x2",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:37.696767842Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.108222360Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.698041046Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "pageToken": "EAA4orGG4vPoyv2vAUrRByI2IicKJWFmMzk5MGJjLTZkZGQtNDIzOC1iMzQzLWIwZjVmNDViZmIzMQAqCwi9sJi2BhD47tklSpYHCuoGSucGANAvIAbDSNkn_HV7NEpU4aI5rAjgT5gzcTtd2sLq4bEot04ZvVaUry3pyaSoqi_SJ-A9PiK0AyXVK4F65FWqwhTR8KoxJQbY9xE31Ho_yOjM9XluiUXXMFpqGMdzIf13cRNf1QqKVNVR8ZNmhqBVJLp_NM_Q_8a2xSKqBrpiZJJYEVOkWzzPPEOpBDsf41aS1-56scMxlgPEmw8UTzd5v66qdF0O-Uw-5TEnxlcdozJ5yS_-4Qz0PffjqzIb5NTZ8QqESwbGWkU2S0YcHYrgqLoVT_pgcztjMh4y0qnNMXiIsaX_9XSAaG64u_h4UIh0HEzQ7X2VqlwoC1w7aXdyTETaz-KC7gI4DGunK7-AxXO3Y8lp2uF7Gs-4dgX8Qr2JtTtGKS0J9JXYkxTs0xZxrvX6_kCmVt1_qZvVHP5z6iOZGPBj_vNm0ZFtHb_2ZhFuUuxRbUBdGCCKTCTbPh9azGTBsN3rpLIYlIQKxCJBh45U_s_Y8AGsKuLKuBU9LBwUGH_1qzefAVRBQipqufSLepQf6h9i0zD-yTypStMQjoIyGo-txJNzRcdCmH2Mt1AsfDBFLtCEv5gkpYwcFjzpoghj26aIBF9flc-KmPh2dTWCodBQ6D9OPBGxHDtOASnBWAmYcUBlv4U3wCQLj400IgHsVZIf9bolq9oeoiftyXUhVrLWLTt37Y3GUhni5oiy0Bz-uP-0TmzYocRuCJi93oQCj2m4lkKG6NkAscdxpJmD8B0tn5E9ZRinJZrKja9MOnqDWCNPDrQxvm6oOxYlpTegMJl4Qiruepg8fwvmqXjxgEKV3tKm3b4Ja3-UOXfQS2yFw4bnMu9JQmHBPqgQ4qrzmreBMPYHjEH1VetlH8hBZrv8r9EwYanJgSssNIjKxpf2B4C3sZeLkv3T64thrv_mgs3Ov6AmhI8vZQaoKPCbFEgsQPa2DDTsPUBN5VbHMgZ945kAJoR53FcajytUR9XpyU4E8dOEhsnU4Jrel9tOJ-edRVSjuQl-5zjOUj8ZHWemqEOeGWAIOJh82T98lxnYzb-i_cLSQB_o64rX-bMPtz04t2yXzxgyObbYNpYGw7HgHgrBmbk1n8Q8TegrBdj0uKNSb3kFHuNjDCSlTa0mzfuaxxWKs0ir4xPOWMs4umRC7W5Y6RIcGgwIu7CYtgYQwLCTkQIiDAi_sJi2BhCH9cqvAVDY16Hg2fS6hLABUgcItvPH5fsBYPn1_5SxoPyLRmobCgwIybCYtgYQuP-BsgESBhCJ7vWCARiWASAC",
        "orderBy": "timestamp asc",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest",
        "filter": "(timestamp>\"2024-08-21T16:39:23.572840Z\" OR (timestamp=\"2024-08-21T16:39:23.572840Z\" AND insertId>\"36008cbf-5777-41fb-9b2c-6b825b7b46bc\"))\n(timestamp<\"2024-08-21T16:39:27.368229Z\")",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ]
      }
    },
    "insertId": "e5zdsgd2p3p",
    "resource": {
      "type": "logging_log",
      "labels": {
        "project_id": "codium-production",
        "name": ""
      }
    },
    "timestamp": "2024-08-21T16:39:37.697645396Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.118586228Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0626ccd7-02cb-4e4d-9c76-4af812954f63",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.707180Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0626ccd7-02cb-4e4d-9c76-4af812954f63",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.316467540Z"
  },
  {
    "insertId": "ks1u8lft6ht8afnw",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 282556.674973,
          "repr": "3 days, 6:29:16.674973"
        },
        "extra": {
          "source_host": "10.164.13.1",
          "url": "http://10.164.13.6:5432/v1/health/live",
          "status_code": 200,
          "request_id": "N/A",
          "on_prem_log": true,
          "method": "GET"
        },
        "name": "app",
        "function": "dispatch",
        "time": {
          "repr": "2024-08-21 16:39:37.715061+00:00",
          "timestamp": 1724258377.715061
        },
        "line": 37,
        "message": "Request handled",
        "exception": null,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 138663458962304
        },
        "module": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r",
        "container_name": "proxy",
        "namespace_name": "production-recursion"
      }
    },
    "timestamp": "2024-08-21T16:39:37.715331855Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:37.821204501Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bec0f508-d2bf-4f65-85c3-e759af816bbd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.722669Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bec0f508-d2bf-4f65-85c3-e759af816bbd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.710735695Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/namespaces/kube-system/configmaps"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a5f45bba-560e-4fb4-bbac-797624948bca",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.726752Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a5f45bba-560e-4fb4-bbac-797624948bca",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.399059223Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.68.213",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.741900534Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "mho4pdeft78f",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:37.736565384Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.717115557Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e28f1072-f388-48ea-9adf-fce556085295",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.741926Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e28f1072-f388-48ea-9adf-fce556085295",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.903202597Z"
  },
  {
    "insertId": "zgshm5k7l52cg5nu",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "name": "app",
        "extra": {
          "source_host": "38.183.8.101",
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "method": "POST",
          "on_prem_log": true,
          "request_id": "N/A",
          "status_code": 200
        },
        "function": "dispatch",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "module": "app",
        "process": {
          "id": 18,
          "name": "MainProcess"
        },
        "time": {
          "timestamp": 1724258377.753088,
          "repr": "2024-08-21 16:39:37.753088+00:00"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "line": 37,
        "elapsed": {
          "repr": "1 day, 9:04:34.770720",
          "seconds": 119074.77072
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.753397284Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "69fd5613-fef1-4759-aed1-913f583b5bf2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.777248Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "69fd5613-fef1-4759-aed1-913f583b5bf2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.794550544Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.780443029Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ],
        "orderBy": "timestamp asc",
        "pageToken": "EAA4orGG4vPoyv2vAUqKBiI3IicKJTlhMzE0YmIyLWZiZGQtNDQwMC1iNDQyLTU4MTY4MzUzMGVjYQAqDAi-sJi2BhDA0NraAUrOBQqiBUqfBQDQLyAGyymLPv-alpppTaLmE34muyeLi-RopeOKha76AmsTqoLXSDMFmjjhWiwQiky1ngs2l5Z0-j7IIIgywaOsaAFgJeWStBygaN7lxKbTXB_YYNCCdq6abHL6cmdnGsJ8mrTEc_DbgeNssCASUaTQL3UJGJioViWHh0KdvdCm_EPWCwyz9zpfAo-c2zDqPHTfuT-9lVsYhcu05rhYGC38eJ0jg4Zejs_9qtH5HKzXPj5Xqtk9q2XgwHKK-PZ9TDujWijIU4Py57Sw5HHEGog5Dwtk6z-QprOb63kKlH-noZSz8HPjSr4B1QqmaVlXWgnIwyZb-4UPXvaO92-30mcw4vj95pyVpx0r8EHbnKpTt9DVjyB2KZjI7ibEtAQZ87XjPHHgGW7ZXFD6stiafn2OScuABJlwpzhTD7HYPX3ZnShj_xVvTAU1OKCXsuiFN-uboLzWRb_x-1g-FDzKyivFjxQorpt-lf7zxPl1kqoDocSPIpL5-8YrjsCBjIwGh2jkxffQp2fEA29tl0deJ1Zch_ImaUcAma8oC5hpoIgq0kUJYcb94f29kTuH9Y2BYPOrsg1ioqWrhUA7Hdum8nja4EVBCKFF_SHQ717kFk-iNmX42R7BXrwaPq2NRwffP268hvrHH-b4DcgkZAQx9fwBzxWA5DNmq6G5J7-T8VIBjQwStfdjuSP3cEk_0cpAZeSx2PD1rdE9DEX7vgHZv2oe9GbKdMlYHTxiEC5zqAhpUkd_iG_xNYnIrAWyb5J58je66Vn--91G_w32a9-trTySliN7iHYBGkTSLgrunNYaRqz6ADMt9OoRoMqfgCfAh-fN7GiqeZxw7v5aT43JAVixpsW3Qh_Ts4TgeiI_cnpXlBE0wPL9_0-BeOAz_kG-EhwaDAi7sJi2BhDAsJORAiIMCL-wmLYGEIf1yq8BUNjXoeDZ9LqEsAFSBwi288fl-wFg-fX_lLGg_ItGahsKDAjJsJi2BhC4_4GyARIGEJSm46MBGMgBIAM",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest",
        "filter": "(timestamp>\"2024-08-21T16:39:23.572840Z\" OR (timestamp=\"2024-08-21T16:39:23.572840Z\" AND insertId>\"36008cbf-5777-41fb-9b2c-6b825b7b46bc\"))\n(timestamp<\"2024-08-21T16:39:27.368229Z\")"
      }
    },
    "insertId": "e6b10kchwb",
    "resource": {
      "type": "logging_log",
      "labels": {
        "project_id": "codium-production",
        "name": ""
      }
    },
    "timestamp": "2024-08-21T16:39:37.779994602Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:37.949197383Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b078260a-71ab-4a64-91f7-7b7f654a5b55",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.817954Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b078260a-71ab-4a64-91f7-7b7f654a5b55",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.815048239Z"
  },
  {
    "insertId": "65gcpperrdg0",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "TJ"
        }
      },
      "remoteIp": "62.89.209.162",
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "priority": 500,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 14000
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "10132",
      "status": 200,
      "responseSize": "520",
      "userAgent": "axios/1.6.2",
      "remoteIp": "62.89.209.162",
      "serverIp": "10.164.10.5",
      "latency": "0.994077s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:37.824584Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/6885435c1f82712c3806a3c0d7437155",
    "receiveTimestamp": "2024-08-21T16:39:40.845628856Z",
    "spanId": "403aae61d549bc5d"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4f60374e-5400-4fa0-be3f-61e0a1e7f3e2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.824820Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4f60374e-5400-4fa0-be3f-61e0a1e7f3e2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.921332572Z"
  },
  {
    "insertId": "tewh8wf3azax7",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IT"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 1000,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "95.231.177.2"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1486",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "95.231.177.2",
      "serverIp": "10.164.1.4",
      "latency": "0.157322s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:37.840599Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/0df6db84b47ad1a04f0da953e077f5d0",
    "receiveTimestamp": "2024-08-21T16:39:38.880015563Z",
    "spanId": "05861e9035c019ab"
  },
  {
    "insertId": "1jhxmqbf2c23dm",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 500
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 14000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "remoteIp": "177.69.243.97"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "17245",
      "status": 200,
      "responseSize": "772",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.69.243.97",
      "serverIp": "10.164.15.3",
      "latency": "1.614671s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:37.848145Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/9dc9803d5867cffb77a6674ac5eda634",
    "receiveTimestamp": "2024-08-21T16:39:40.412110232Z",
    "spanId": "eb7d89f0db45ee20"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1206f818-ac4b-4fb9-abc8-0f5ec292c27c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.856972Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1206f818-ac4b-4fb9-abc8-0f5ec292c27c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.707758973Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.88.63",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 2.129.24-gke.0/1.12.2-gke.4 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.874203244Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1w9r800f2qww8o",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:37.868267944Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.051566420Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fb85e803-7144-49e6-b3f1-61463d30574b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.882091Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fb85e803-7144-49e6-b3f1-61463d30574b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.939527435Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7141c861-968a-480b-ae0d-bf0e76b374fa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.885572Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7141c861-968a-480b-ae0d-bf0e76b374fa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.513641469Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1581b70e-7ad2-461b-a5cd-e24a6a12d5d5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.900639Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1581b70e-7ad2-461b-a5cd-e24a6a12d5d5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.911003663Z"
  },
  {
    "insertId": "l4hewy9s3lqd6st7",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "line": 37,
        "message": "Request handled",
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "module": "app",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "exception": null,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "function": "dispatch",
        "time": {
          "repr": "2024-08-21 16:39:37.905294+00:00",
          "timestamp": 1724258377.905294
        },
        "extra": {
          "method": "POST",
          "request_id": "N/A",
          "on_prem_log": true,
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "status_code": 200,
          "source_host": "95.231.177.2"
        },
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "elapsed": {
          "seconds": 119307.701049,
          "repr": "1 day, 9:08:27.701049"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.905543574Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/kube-system/endpoints/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/endpoints/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ed6dccb5-9679-449a-bf61-0900c69d9214",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.938497Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ed6dccb5-9679-449a-bf61-0900c69d9214",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.221241967Z"
  },
  {
    "insertId": "j26m88ajju999ya0",
    "jsonPayload": {
      "record": {
        "function": "verify_user_token",
        "line": 156,
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "elapsed": {
          "seconds": 118362.320597,
          "repr": "1 day, 8:52:42.320597"
        },
        "extra": {},
        "process": {
          "name": "MainProcess",
          "id": 20
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "exception": null,
        "module": "core",
        "name": "copilot_proxy.auth.core",
        "time": {
          "timestamp": 1724258377.940221,
          "repr": "2024-08-21 16:39:37.940221+00:00"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134623174575808
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        }
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.940475134Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "nb8tbxq7u8rj53kk",
    "jsonPayload": {
      "record": {
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "timestamp": 1724258377.940612,
          "repr": "2024-08-21 16:39:37.940612+00:00"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "process": {
          "id": 20,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118362.320988,
          "repr": "1 day, 8:52:42.320988"
        },
        "line": 106,
        "exception": null,
        "function": "verify_minimum_tier_level",
        "module": "core",
        "name": "copilot_proxy.auth.core",
        "thread": {
          "id": 134623174575808,
          "name": "AnyIO worker thread"
        },
        "extra": {},
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.940797105Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "m9tpi3d7jrklmcue",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "exception": null,
        "extra": {
          "request_id": "48110801-654b-4c9c-9c1c-627fa79ff161",
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "on_prem_log": true,
          "user": {
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "allowed": true,
            "organization_id": null,
            "email": "lf0448504@gmail.com",
            "codiumate": null,
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "exp": 1724261737,
            "iat": 1724258137,
            "baseUrl": null,
            "auth_time": 1724161599,
            "email_verified": true,
            "aud": "codium-dev-360812",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "optout": false,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "tier_end_date": 1725287318000,
            "tier_level": 10,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "name": "Luiz F"
          },
          "data": {
            "file_diff_content": "",
            "language": "blade",
            "extra_instructions": "",
            "max_remote_context": 5,
            "remote_context": [],
            "user_context": [],
            "max_repo_context": 5,
            "is_file_diff": false,
            "repo_context": [],
            "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto->",
            "is_multiline": false,
            "context": [],
            "relative_file_path": "resources/views/dashboards/list.blade.php",
            "user_data": {
              "user_id": null,
              "editor_sub_version": null,
              "editor_version": "1.92.2",
              "os_platform": "win32",
              "installation_id": "d9512a22-64ab-4187-87de-bc5e6405f7d3",
              "os_version": "v20.14.0",
              "editor_type": "vscode",
              "extension_version": "0.9.13"
            },
            "context_mode": "pre_pr",
            "reference_snippet_messages": [
              {
                "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty",
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:"
              },
              {
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                "type": "Clipboard",
                "file_name": "resources\\views\\dashboards\\list.blade.php"
              },
              {
                "type": "Clipboard",
                "file_name": "resources\\views\\dashboards\\list.blade.php",
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData"
              },
              {
                "file_name": "Codiumate chat",
                "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo",
                "type": "Clipboard"
              },
              {
                "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                "type": "File",
                "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php"
              }
            ],
            "task": "",
            "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n"
          }
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "message": "Incoming request /v2/code/completion",
        "elapsed": {
          "seconds": 118362.324348,
          "repr": "1 day, 8:52:42.324348"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.943972+00:00",
          "timestamp": 1724258377.943972
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "module": "v2",
        "process": {
          "name": "MainProcess",
          "id": 20
        },
        "name": "copilot_proxy.api.code.v2",
        "line": 513,
        "function": "run_code_completion"
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr"
      }
    },
    "timestamp": "2024-08-21T16:39:37.944345580Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.68.213",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:37.951123105Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "ics8qhevgh7a",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.945476646Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.303286651Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4ef6fa99-953d-4a1d-bc35-d6f4c1d5dbde",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.952217Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4ef6fa99-953d-4a1d-bc35-d6f4c1d5dbde",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.813772499Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:prometheus:kube-prometheus-stack-prometheus"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/namespaces/production-recursion/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "Prometheus/2.45.0"
      },
      "resourceName": "core/v1/namespaces/production-recursion/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "962d11ea-2ccc-4b4e-b240-b6587d3be198",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.953706Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"kube-prometheus-stack-prometheus\" of ClusterRole \"kube-prometheus-stack-prometheus\" to ServiceAccount \"kube-prometheus-stack-prometheus/prometheus\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "962d11ea-2ccc-4b4e-b240-b6587d3be198",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.024530678Z"
  },
  {
    "insertId": "lilwxoseuhf5ixvr",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "exception": null,
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "message": "OpenAI Response",
        "function": "generate",
        "time": {
          "timestamp": 1724258377.954488,
          "repr": "2024-08-21 16:39:37.954488+00:00"
        },
        "line": 131,
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "name": "ai.litellm.litellm_infer_engine",
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "elapsed": {
          "seconds": 119075.421111,
          "repr": "1 day, 9:04:35.421111"
        },
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "extra": {
          "model": "gpt-3.5-turbo-instruct",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Глав",
          "request_id": "3c61ed52-2a2b-49fc-acd8-dcdcf6bb2df4",
          "completion": "ная</a>\n                </li>",
          "openai_response": {
            "model": "gpt-3.5-turbo-instruct",
            "object": "text_completion",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='ная</a>\\n                </li>', logprobs=None)"
            ],
            "created": 1724258377,
            "usage": {
              "completion_tokens": 8,
              "prompt_tokens": 1760,
              "total_tokens": 1768
            },
            "id": "cmpl-9yievnqjx9A6nJQ68K8aQJxhtLXZI"
          },
          "openai_request_id": "cmpl-9yievnqjx9A6nJQ68K8aQJxhtLXZI",
          "user": {
            "aud": "codium-dev-360812",
            "iat": 1724255292,
            "exp": 1724258892,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              }
            },
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true,
            "email": "y.borozna81@internet.ru",
            "tier_end_date": 1701693510000,
            "tier_level": 10,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "email_verified": false,
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "auth_time": 1724251717,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2"
          },
          "url_path": "/v2/code/completion"
        },
        "module": "litellm_infer_engine"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.954953478Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:prometheus:kube-prometheus-stack-prometheus"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.watch",
          "resource": "core/v1/namespaces/production-recursion/services"
        }
      ],
      "methodName": "io.k8s.core.v1.services.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "Prometheus/2.45.0"
      },
      "resourceName": "core/v1/namespaces/production-recursion/services",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "226de0ab-ba26-41ea-8b4c-0c529de4a41a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.957745Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"kube-prometheus-stack-prometheus\" of ClusterRole \"kube-prometheus-stack-prometheus\" to ServiceAccount \"kube-prometheus-stack-prometheus/prometheus\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "226de0ab-ba26-41ea-8b4c-0c529de4a41a",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.705410370Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "029d6afd-ae9b-4724-b187-6e120ee6c1a7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.959567Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "029d6afd-ae9b-4724-b187-6e120ee6c1a7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.041624703Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ff957b55-dedf-4471-a546-df5742ef0a6e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.959676Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ff957b55-dedf-4471-a546-df5742ef0a6e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.906862314Z"
  },
  {
    "insertId": "wtbyoive90hwm587",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-4vp2q"
      }
    },
    "timestamp": "2024-08-21T16:39:37.960925797Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.079377664Z"
  },
  {
    "insertId": "ucril43yha67hpod",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "location": "us-central1",
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-4vp2q"
      }
    },
    "timestamp": "2024-08-21T16:39:37.960973117Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.079377664Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d2307d95-cb38-432b-8721-3d1462739c68",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:37.966072Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d2307d95-cb38-432b-8721-3d1462739c68",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.815048239Z"
  },
  {
    "insertId": "owb5jl1p2gufe2o6",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "gcp-filestore-driver",
        "namespace_name": "kube-system",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "filestore-node-bszkc"
      }
    },
    "timestamp": "2024-08-21T16:39:37.967162158Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-playt-aaebb4fb-2pwp",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.198803385Z"
  },
  {
    "insertId": "9oxbhy31r86lw0u6",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-bszkc"
      }
    },
    "timestamp": "2024-08-21T16:39:37.967208965Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-playt-aaebb4fb-2pwp"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.198803385Z"
  },
  {
    "insertId": "63vu00fh6v18q",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 14000,
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "37.214.22.173",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE"
      },
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "BY"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8904",
      "status": 200,
      "responseSize": "475",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.9.5",
      "latency": "0.703577s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.977225Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/679af15c41348778f06555036ad69265",
    "receiveTimestamp": "2024-08-21T16:39:39.934790655Z",
    "spanId": "2073ea4ad413cd81"
  },
  {
    "insertId": "wlbli7o3sq8oofww",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258377.977992,
          "repr": "2024-08-21 16:39:37.977992+00:00"
        },
        "module": "litellm_infer_engine",
        "exception": null,
        "name": "ai.litellm.litellm_infer_engine",
        "elapsed": {
          "seconds": 118530.876343,
          "repr": "1 day, 8:55:30.876343"
        },
        "function": "generate",
        "message": "OpenAI returned a truncated response. Consider increasing the max_tokens.",
        "line": 124,
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "extra": {
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "request_id": "d80ab85e-c753-4e46-af8d-342326fd117d",
          "url_path": "/v2/code/completion",
          "data": {
            "n": 1,
            "presence_penalty": 0,
            "suffix": null,
            "temperature": 0.1,
            "stop": [
              "\n\n"
            ],
            "metadata": {
              "project_name": "code/completion",
              "tags": [
                "d80ab85e-c753-4e46-af8d-342326fd117d"
              ],
              "model_info": {
                "db_model": false,
                "id": "6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7"
              },
              "model_group": "code-completion",
              "deployment": "gpt-3.5-turbo-instruct",
              "caching_groups": null,
              "hidden_params": "HiddenParams(original_response='{\"id\": \"cmpl-9yieu7bWFgydcM38WAQ4vz7uWQLgi\", \"choices\": [{\"finish_reason\": \"length\", \"index\": 0, \"logprobs\": null, \"text\": \"]] }}</h3>\\\\n    <table class=\\\\\"table table-bordered\\\\\">\\\\n        <thead>\\\\n            <tr>\\\\n                <th>Modelo Nome</th>\\\\n                    <th>Modelo ID</th>\\\\n                    <th>Quantidade</th>\\\\n                </tr>\\\\n            </thead>\\\\n            <tbody>\\\\n                @if(isset($devices[$deposit->holderid]))\\\\n\"}], \"created\": 1724258376, \"model\": \"gpt-3.5-turbo-instruct\", \"object\": \"text_completion\", \"system_fingerprint\": null, \"usage\": {\"completion_tokens\": 75, \"prompt_tokens\": 3609, \"total_tokens\": 3684}}', model_id='6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7', api_base=None, litellm_call_id='198ac1a4-00e8-43c9-a9fa-3d519c8f45e9', optional_params={'temperature': 0.1, 'top_p': 0.9, 'n': 1, 'stop': ['\\n\\n'], 'max_tokens': 75, 'presence_penalty': 0, 'frequency_penalty': 0, 'max_retries': 0, 'extra_body': {}}, response_cost=0.0055635)",
              "run_name": "CodeCompletion",
              "api_base": null
            },
            "frequency_penalty": 0,
            "top_p": 0.9,
            "max_tokens": 75
          },
          "user": {
            "tier_level": 10,
            "iat": 1724258137,
            "aud": "codium-dev-360812",
            "exp": 1724261737,
            "baseUrl": null,
            "name": "Luiz F",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "allowed": true,
            "firebase": {
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_end_date": 1725287318000,
            "optout": false,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "codiumate": null,
            "organization_id": null,
            "auth_time": 1724161599,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email_verified": true,
            "email": "lf0448504@gmail.com"
          }
        },
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "level": {
          "icon": "⚠️",
          "no": 30,
          "name": "WARNING"
        }
      },
      "text": "OpenAI returned a truncated response. Consider increasing the max_tokens.\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:37.978407176Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "7awqrlft1hype2r9",
    "jsonPayload": {
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "module": "core",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "function": "verify_user_token",
        "line": 156,
        "name": "copilot_proxy.auth.core",
        "exception": null,
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "time": {
          "repr": "2024-08-21 16:39:37.985578+00:00",
          "timestamp": 1724258377.985578
        },
        "thread": {
          "id": 132437006849728,
          "name": "AnyIO worker thread"
        },
        "elapsed": {
          "seconds": 118799.335031,
          "repr": "1 day, 8:59:59.335031"
        },
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "extra": {}
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.985850866Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "s2zcusrl8h81qs8h",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258377.985989,
          "repr": "2024-08-21 16:39:37.985989+00:00"
        },
        "line": 106,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "name": "copilot_proxy.auth.core",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "module": "core",
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "function": "verify_minimum_tier_level",
        "exception": null,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132437006849728
        },
        "extra": {},
        "elapsed": {
          "seconds": 118799.335442,
          "repr": "1 day, 8:59:59.335442"
        }
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.986167062Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "fnv5ibuh6hms821u",
    "jsonPayload": {
      "record": {
        "extra": {
          "request_id": "8a130126-0fcc-417e-bac8-402ada9b230c",
          "data": {
            "user_data": {
              "extension_version": "0.9.13",
              "user_id": null,
              "os_platform": "linux",
              "editor_version": "1.82.2",
              "installation_id": "15788762-fe0e-4403-bf86-bc88815499a2",
              "editor_sub_version": null,
              "os_version": "v18.15.0",
              "editor_type": "vscode"
            },
            "is_file_diff": false,
            "language": "javascriptreact",
            "relative_file_path": "src/components/spacemen/spaceman.jsx",
            "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rota",
            "is_multiline": false,
            "task": "",
            "repo_context": [],
            "context_mode": "pre_pr",
            "max_repo_context": 5,
            "extra_instructions": "",
            "user_context": [],
            "max_remote_context": 5,
            "remote_context": [],
            "doc_context_suffix": ">\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
            "file_diff_content": "",
            "context": [],
            "reference_snippet_messages": [
              {
                "type": "CodiummateImport",
                "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman",
                "file_name": "Imports and implementations used in this file:"
              },
              {
                "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js",
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:"
              },
              {
                "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                "type": "File",
                "file_name": "src/components/stagerbar/stagerbar.jsx"
              },
              {
                "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;",
                "type": "File",
                "file_name": "src/store/reducers/todoById/todoByIdSlice.js"
              },
              {
                "file_name": "src/pages/main/main.jsx",
                "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>",
                "type": "File"
              },
              {
                "file_name": "tailwind.config.js",
                "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}",
                "type": "File"
              }
            ]
          },
          "user": {
            "email_verified": false,
            "allowed": true,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "codiumate": null,
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "aud": "codium-dev-360812",
            "iat": 1724257455,
            "optout": false,
            "organization_id": null,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "baseUrl": null,
            "auth_time": 1724257455,
            "name": "HoneyMoon is still aliwe",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_level": 10,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              }
            },
            "email": "anjasajfullin@gmail.com",
            "exp": 1724261055,
            "tier_end_date": 1724734597000
          },
          "on_prem_log": true,
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          }
        },
        "function": "run_code_completion",
        "time": {
          "timestamp": 1724258377.989226,
          "repr": "2024-08-21 16:39:37.989226+00:00"
        },
        "name": "copilot_proxy.api.code.v2",
        "line": 513,
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 8:59:59.338679",
          "seconds": 118799.338679
        },
        "message": "Incoming request /v2/code/completion",
        "module": "v2"
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:37.989552359Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "fllh3833vsodfce5",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "message": "Prompts and results v2",
        "time": {
          "timestamp": 1724258377.995824,
          "repr": "2024-08-21 16:39:37.995824+00:00"
        },
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "exception": null,
        "name": "copilot_proxy.utils.inference_utils",
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 119075.462447,
          "repr": "1 day, 9:04:35.462447"
        },
        "extra": {
          "results": {
            "user_input": {
              "max_remote_context": 5,
              "repo_context": [],
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Глав",
              "max_repo_context": 5,
              "context_mode": "pre_pr",
              "configuration": {},
              "user_context": [],
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "file_diff_content": "",
              "context": [],
              "reference_snippet_messages": [
                {
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                  "file_name": "templates\\base.html",
                  "type": "File"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html",
                  "type": "Clipboard"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html",
                  "type": "Clipboard"
                }
              ],
              "relative_file_path": "dish/templates/core/frontpage.html",
              "is_file_diff": false,
              "language": "django-html",
              "remote_context": [],
              "extra_instructions": "",
              "task": "",
              "is_multiline": false,
              "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n"
            },
            "url_path": "/v2/code/completion",
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"\\u043d\\u0430\\u044f</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "inference_steps": {
              "step_01_CodeCompletion": {
                "02_completion": "ная</a>\n                </li>",
                "03_start_time": "2024-08-21 16:39:37.409865",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Глав",
                "00_system": null,
                "04_end_time": "2024-08-21 16:39:37.995753"
              }
            }
          },
          "url_path": "/v2/code/completion",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "request_id": "3c61ed52-2a2b-49fc-acd8-dcdcf6bb2df4",
          "user": {
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "codiumate": null,
            "auth_time": 1724251717,
            "firebase": {
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              },
              "sign_in_provider": "custom"
            },
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "email": "y.borozna81@internet.ru",
            "aud": "codium-dev-360812",
            "email_verified": false,
            "iat": 1724255292,
            "exp": 1724258892,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_end_date": 1701693510000,
            "allowed": true,
            "tier_level": 10
          }
        },
        "function": "process",
        "module": "inference_utils",
        "line": 1112
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:37.996442306Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "siclyw6svopy18kv",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "🐞",
          "no": 10,
          "name": "DEBUG"
        },
        "exception": null,
        "message": "OpenAI Response",
        "name": "ai.litellm.litellm_infer_engine",
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "module": "litellm_infer_engine",
        "function": "generate",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "time": {
          "timestamp": 1724258377.995883,
          "repr": "2024-08-21 16:39:37.995883+00:00"
        },
        "elapsed": {
          "repr": "1 day, 8:55:30.894234",
          "seconds": 118530.894234
        },
        "extra": {
          "openai_response": {
            "id": "cmpl-9yieu7bWFgydcM38WAQ4vz7uWQLgi",
            "model": "gpt-3.5-turbo-instruct",
            "usage": {
              "completion_tokens": 75,
              "total_tokens": 3684,
              "prompt_tokens": 3609
            },
            "object": "text_completion",
            "created": 1724258376,
            "choices": [
              "TextChoices(finish_reason='length', index=0, text=']] }}</h3>\\n    <table class=\"table table-bordered\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid]))\\n', logprobs=None)"
            ]
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto",
          "url_path": "/v2/code/completion",
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "completion": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n",
          "user": {
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "auth_time": 1724161599,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "exp": 1724261737,
            "tier_level": 10,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              }
            },
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "allowed": true,
            "email": "lf0448504@gmail.com",
            "tier_end_date": 1725287318000,
            "name": "Luiz F",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "codiumate": null,
            "email_verified": true,
            "organization_id": null,
            "aud": "codium-dev-360812",
            "baseUrl": null,
            "optout": false,
            "iat": 1724258137
          },
          "request_id": "d80ab85e-c753-4e46-af8d-342326fd117d",
          "openai_request_id": "cmpl-9yieu7bWFgydcM38WAQ4vz7uWQLgi",
          "model": "gpt-3.5-turbo-instruct"
        },
        "line": 131
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:37.996525460Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "1pvnegkf7jbkz5",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "35.186.176.31",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://pr-agent.bitbucketapps.codium.ai/",
      "requestSize": "153",
      "status": 200,
      "responseSize": "545",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.186.176.31",
      "serverIp": "10.164.5.13",
      "latency": "0.038054s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-bitbucket-ser-300-26cec08d"
      }
    },
    "timestamp": "2024-08-21T16:39:38.003404Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/b59e19f648d9b051d321b7121d183124",
    "receiveTimestamp": "2024-08-21T16:39:38.876444268Z",
    "spanId": "f6dc050bfec97d04"
  },
  {
    "insertId": "9pnkc9dvjrsvo8ck",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "line": 1112,
        "function": "process",
        "time": {
          "repr": "2024-08-21 16:39:38.014991+00:00",
          "timestamp": 1724258378.014991
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "elapsed": {
          "seconds": 118530.913342,
          "repr": "1 day, 8:55:30.913342"
        },
        "message": "Prompts and results v2",
        "module": "inference_utils",
        "extra": {
          "user": {
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "100799987662431406107"
                ],
                "email": [
                  "lf0448504@gmail.com"
                ]
              }
            },
            "aud": "codium-dev-360812",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "baseUrl": null,
            "optout": false,
            "allowed": true,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "iat": 1724258137,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email_verified": true,
            "auth_time": 1724161599,
            "name": "Luiz F",
            "email": "lf0448504@gmail.com",
            "exp": 1724261737,
            "tier_level": 10,
            "codiumate": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_end_date": 1725287318000,
            "organization_id": null
          },
          "request_id": "d80ab85e-c753-4e46-af8d-342326fd117d",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "url_path": "/v2/code/completion",
          "results": {
            "url_path": "/v2/code/completion",
            "user_input": {
              "reference_snippet_messages": [
                {
                  "file_name": "Project directory structure:",
                  "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty",
                  "type": "DirectoryStructure"
                },
                {
                  "type": "Clipboard",
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData"
                },
                {
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "type": "Clipboard"
                },
                {
                  "type": "Clipboard",
                  "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo",
                  "file_name": "Codiumate chat"
                },
                {
                  "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                  "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                  "type": "File"
                }
              ],
              "remote_context": [],
              "extra_instructions": "",
              "user_data": "user_id=None installation_id='d9512a22-64ab-4187-87de-bc5e6405f7d3' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "language": "blade",
              "max_repo_context": 5,
              "task": "",
              "relative_file_path": "resources/views/dashboards/list.blade.php",
              "is_multiline": false,
              "file_diff_content": "",
              "is_file_diff": false,
              "max_remote_context": 5,
              "user_context": [],
              "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto",
              "context_mode": "pre_pr",
              "repo_context": [],
              "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
              "context": [],
              "configuration": {}
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"]] }}</h3>\\n    <table class=\\\"table table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holderid]))\\n\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "inference_steps": {
              "step_01_CodeCompletion": {
                "02_completion": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n",
                "00_system": null,
                "04_end_time": "2024-08-21 16:39:38.014914",
                "03_start_time": "2024-08-21 16:39:36.460360",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto"
              }
            }
          }
        },
        "name": "copilot_proxy.utils.inference_utils",
        "exception": null,
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.015871758Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "m0obiqwb9lp8h54x",
    "jsonPayload": {
      "record": {
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "function": "dispatch",
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "name": "app",
        "extra": {
          "url": "https://api.codium.ai/v2/code/completion",
          "source_host": "37.214.22.173",
          "method": "POST",
          "request_id": "3c61ed52-2a2b-49fc-acd8-dcdcf6bb2df4",
          "on_prem_log": true,
          "status_code": 200
        },
        "time": {
          "timestamp": 1724258378.018188,
          "repr": "2024-08-21 16:39:38.018188+00:00"
        },
        "elapsed": {
          "repr": "1 day, 9:04:35.484811",
          "seconds": 119075.484811
        },
        "message": "Request handled",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "module": "app",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.018518437Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "textPayload": "INFO:     35.191.3.128:58780 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "4hjv9uuajr2kcb3d",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "pr-agent",
        "cluster_name": "production-cluster",
        "container_name": "main",
        "pod_name": "pr-agent-free-bitbucket-645d9bc84b-s872n",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.021790156Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "645d9bc84b",
      "k8s-pod/app": "pr-agent-free-bitbucket",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.326803480Z"
  },
  {
    "insertId": "lpjpm0s83nexf6q8",
    "jsonPayload": {
      "record": {
        "function": "generate",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "name": "ai.litellm.litellm_infer_engine",
        "module": "litellm_infer_engine",
        "extra": {
          "model": "gpt-3.5-turbo-instruct",
          "openai_request_id": "cmpl-9yiev69rOONJU89GWzDO1PEiIMeD0",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotat",
          "url_path": "/v2/code/completion",
          "request_id": "8532717f-7dcc-4306-ab33-3455388b04a0",
          "completion": "ation={[0, 0, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
          "user": {
            "tier_level": 10,
            "iat": 1724257455,
            "codiumate": null,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "auth_time": 1724257455,
            "baseUrl": null,
            "name": "HoneyMoon is still aliwe",
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "email": "anjasajfullin@gmail.com",
            "organization_id": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              }
            },
            "optout": false,
            "email_verified": false,
            "allowed": true,
            "exp": 1724261055,
            "aud": "codium-dev-360812",
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "tier_end_date": 1724734597000
          },
          "openai_response": {
            "object": "text_completion",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='ation={[0, 0, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}', logprobs=None)"
            ],
            "id": "cmpl-9yiev69rOONJU89GWzDO1PEiIMeD0",
            "usage": {
              "total_tokens": 2446,
              "prompt_tokens": 2419,
              "completion_tokens": 27
            },
            "created": 1724258377,
            "model": "gpt-3.5-turbo-instruct"
          },
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          }
        },
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "exception": null,
        "line": 131,
        "message": "OpenAI Response",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.022878+00:00",
          "timestamp": 1724258378.022878
        },
        "elapsed": {
          "seconds": 119075.667126,
          "repr": "1 day, 9:04:35.667126"
        }
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.023311139Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.78.227",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 cluster-autoscaler,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:38.056326Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.instanceGroupManagers.list",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "compute.instanceGroupManagers.list",
          "granted": true,
          "resourceAttributes": {
            "service": "resourcemanager",
            "name": "projects/codium-production",
            "type": "resourcemanager.projects"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/zones/us-east1-b/instanceGroupManagers",
      "numResponseItems": "1",
      "request": {
        "@type": "type.googleapis.com/compute.instanceGroupManagers.list"
      },
      "resourceLocation": {
        "currentLocations": [
          "us-east1-b"
        ]
      }
    },
    "insertId": "xus3tze8d7oy",
    "resource": {
      "type": "gce_instance_group_manager",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1-b",
        "instance_group_manager_name": "",
        "instance_group_manager_id": ""
      }
    },
    "timestamp": "2024-08-21T16:39:38.027243Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "904089cf-905e-4440-aacf-c954fc966aca"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.528129554Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.78.227",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 cluster-autoscaler,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:38.071919Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.instanceGroupManagers.list",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "compute.instanceGroupManagers.list",
          "granted": true,
          "resourceAttributes": {
            "service": "resourcemanager",
            "name": "projects/codium-production",
            "type": "resourcemanager.projects"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/zones/us-east1-c/instanceGroupManagers",
      "numResponseItems": "1",
      "request": {
        "@type": "type.googleapis.com/compute.instanceGroupManagers.list"
      },
      "resourceLocation": {
        "currentLocations": [
          "us-east1-c"
        ]
      }
    },
    "insertId": "-qawt8ndt5tm",
    "resource": {
      "type": "gce_instance_group_manager",
      "labels": {
        "instance_group_manager_id": "",
        "instance_group_manager_name": "",
        "location": "us-east1-c",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.031975Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "0bd5be3d-ab2c-4ddf-afcd-606fc34a5fbf"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.781987649Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b62cb51c-a7ad-4d06-ab91-f71c18257c13",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.032471Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b62cb51c-a7ad-4d06-ab91-f71c18257c13",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.005210578Z"
  },
  {
    "insertId": "10xmnyhefm8dq",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 8000,
        "configuredAction": "ALLOW"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      },
      "cacheDecision": [
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "ZA"
        }
      },
      "remoteIp": "105.245.116.33",
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/tests/generate_code_ask",
      "requestSize": "14497",
      "status": 200,
      "responseSize": "68566",
      "userAgent": "axios/1.6.2",
      "remoteIp": "105.245.116.33",
      "serverIp": "10.164.16.6",
      "latency": "7.038421s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.032964Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/d67025f582f21dc8d844329dd3e76e9c",
    "receiveTimestamp": "2024-08-21T16:39:45.259635494Z",
    "spanId": "97e1b1e495aba6ef"
  },
  {
    "insertId": "r8mkvmic9bcodw6o",
    "jsonPayload": {
      "record": {
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "exception": null,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "dispatch",
        "elapsed": {
          "repr": "1 day, 8:55:30.934309",
          "seconds": 118530.934309
        },
        "module": "app",
        "extra": {
          "on_prem_log": true,
          "request_id": "d80ab85e-c753-4e46-af8d-342326fd117d",
          "method": "POST",
          "url": "https://api.codium.ai/v2/code/completion",
          "status_code": 200,
          "source_host": "177.69.243.97"
        },
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "message": "Request handled",
        "line": 37,
        "time": {
          "timestamp": 1724258378.035958,
          "repr": "2024-08-21 16:39:38.035958+00:00"
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "name": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.036258161Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "owu969ebh3kjs378",
    "jsonPayload": {
      "record": {
        "module": "core",
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "timestamp": 1724258378.039357,
          "repr": "2024-08-21 16:39:38.039357+00:00"
        },
        "elapsed": {
          "seconds": 118530.487492,
          "repr": "1 day, 8:55:30.487492"
        },
        "thread": {
          "id": 137083310028480,
          "name": "AnyIO worker thread"
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "function": "verify_user_token",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "line": 156,
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "name": "copilot_proxy.auth.core",
        "extra": {}
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.039596362Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "oj4qg4yrj0iyc4iq",
    "jsonPayload": {
      "record": {
        "thread": {
          "name": "AnyIO worker thread",
          "id": 137083310028480
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "name": "copilot_proxy.auth.core",
        "extra": {},
        "line": 106,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "exception": null,
        "module": "core",
        "function": "verify_minimum_tier_level",
        "elapsed": {
          "seconds": 118530.487853,
          "repr": "1 day, 8:55:30.487853"
        },
        "time": {
          "timestamp": 1724258378.039718,
          "repr": "2024-08-21 16:39:38.039718+00:00"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False"
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.039851742Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "ja5guzhigwv6mn7v",
    "jsonPayload": {
      "record": {
        "function": "run_code_completion",
        "message": "Incoming request /v2/code/completion",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "name": "copilot_proxy.api.code.v2",
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "line": 513,
        "module": "v2",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "extra": {
          "on_prem_log": true,
          "user": {
            "email_verified": false,
            "email": "y.borozna81@internet.ru",
            "aud": "codium-dev-360812",
            "allowed": true,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "iat": 1724255292,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_end_date": 1701693510000,
            "codiumate": null,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            },
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_level": 10,
            "auth_time": 1724251717,
            "exp": 1724258892,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2"
          },
          "data": {
            "is_file_diff": false,
            "max_repo_context": 5,
            "reference_snippet_messages": [
              {
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                "file_name": "templates\\base.html",
                "type": "File"
              },
              {
                "file_name": "templates\\base.html",
                "type": "Clipboard",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
              },
              {
                "file_name": "templates\\base.html",
                "type": "Clipboard",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
              }
            ],
            "user_context": [],
            "relative_file_path": "dish/templates/core/frontpage.html",
            "user_data": {
              "os_version": "v20.14.0",
              "os_platform": "win32",
              "editor_version": "1.92.2",
              "extension_version": "0.9.13",
              "editor_type": "vscode",
              "editor_sub_version": null,
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd",
              "user_id": null
            },
            "context_mode": "pre_pr",
            "language": "django-html",
            "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главн",
            "max_remote_context": 5,
            "remote_context": [],
            "context": [],
            "file_diff_content": "",
            "repo_context": [],
            "extra_instructions": "",
            "is_multiline": false,
            "task": ""
          },
          "request_id": "4bb715fc-8849-4e90-9bc9-7bf4ec45d818",
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          }
        },
        "elapsed": {
          "repr": "1 day, 8:55:30.491417",
          "seconds": 118530.491417
        },
        "time": {
          "timestamp": 1724258378.043282,
          "repr": "2024-08-21 16:39:38.043282+00:00"
        }
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.043628555Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "iy7sznpam9qoj3pu",
    "jsonPayload": {
      "record": {
        "message": "Prompts and results v2",
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "function": "process",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "elapsed": {
          "repr": "1 day, 9:04:35.693144",
          "seconds": 119075.693144
        },
        "exception": null,
        "extra": {
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "user": {
            "email": "anjasajfullin@gmail.com",
            "tier_level": 10,
            "name": "HoneyMoon is still aliwe",
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "aud": "codium-dev-360812",
            "baseUrl": null,
            "codiumate": null,
            "exp": 1724261055,
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "organization_id": null,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "auth_time": 1724257455,
            "iat": 1724257455,
            "tier_end_date": 1724734597000,
            "allowed": true,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "optout": false,
            "email_verified": false,
            "firebase": {
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              },
              "sign_in_provider": "custom"
            }
          },
          "results": {
            "user_input": {
              "file_diff_content": "",
              "max_remote_context": 5,
              "user_data": "user_id=None installation_id='15788762-fe0e-4403-bf86-bc88815499a2' editor_version='1.82.2' editor_sub_version=None extension_version='0.9.13' os_platform='linux' os_version='v18.15.0' editor_type='vscode'",
              "doc_context_suffix": ">\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
              "is_file_diff": false,
              "user_context": [],
              "max_repo_context": 5,
              "context": [],
              "configuration": {},
              "language": "javascriptreact",
              "reference_snippet_messages": [
                {
                  "file_name": "Imports and implementations used in this file:",
                  "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman",
                  "type": "CodiummateImport"
                },
                {
                  "type": "DirectoryStructure",
                  "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js",
                  "file_name": "Project directory structure:"
                },
                {
                  "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                  "file_name": "src/components/stagerbar/stagerbar.jsx",
                  "type": "File"
                },
                {
                  "type": "File",
                  "file_name": "src/store/reducers/todoById/todoByIdSlice.js",
                  "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;"
                },
                {
                  "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>",
                  "file_name": "src/pages/main/main.jsx",
                  "type": "File"
                },
                {
                  "file_name": "tailwind.config.js",
                  "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}",
                  "type": "File"
                }
              ],
              "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotat",
              "task": "",
              "relative_file_path": "src/components/spacemen/spaceman.jsx",
              "extra_instructions": "",
              "remote_context": [],
              "is_multiline": false,
              "context_mode": "pre_pr",
              "repo_context": []
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"ation={[0, 0, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "03_start_time": "2024-08-21 16:39:37.316756",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotat",
                "00_system": null,
                "02_completion": "ation={[0, 0, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
                "04_end_time": "2024-08-21 16:39:38.048826"
              }
            }
          },
          "url_path": "/v2/code/completion",
          "request_id": "8532717f-7dcc-4306-ab33-3455388b04a0"
        },
        "line": 1112,
        "module": "inference_utils",
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "time": {
          "repr": "2024-08-21 16:39:38.048896+00:00",
          "timestamp": 1724258378.048896
        }
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.049461875Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9ab49656-dde4-42c5-9d26-7e8f2f2f166d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.050964Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9ab49656-dde4-42c5-9d26-7e8f2f2f166d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.817311462Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.78.227",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 cluster-autoscaler,gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:38.097424Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.instanceGroupManagers.list",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "compute.instanceGroupManagers.list",
          "granted": true,
          "resourceAttributes": {
            "service": "resourcemanager",
            "name": "projects/codium-production",
            "type": "resourcemanager.projects"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/zones/us-east1-d/instanceGroupManagers",
      "numResponseItems": "1",
      "request": {
        "@type": "type.googleapis.com/compute.instanceGroupManagers.list"
      },
      "resourceLocation": {
        "currentLocations": [
          "us-east1-d"
        ]
      }
    },
    "insertId": "n3anthee4nsk",
    "resource": {
      "type": "gce_instance_group_manager",
      "labels": {
        "project_id": "codium-production",
        "instance_group_manager_name": "",
        "location": "us-east1-d",
        "instance_group_manager_id": ""
      }
    },
    "timestamp": "2024-08-21T16:39:38.056886Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "4c5e08f4-1344-4b33-8137-4f7686a6e362"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:38.622646159Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "33e3543e-a9a9-4521-afba-de5bd70768d9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.058595Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "33e3543e-a9a9-4521-afba-de5bd70768d9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.886930775Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d7c37549-79dc-4c05-b37b-39987ba09119",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.069292Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d7c37549-79dc-4c05-b37b-39987ba09119",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.809448781Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "50f38be6-6f7e-4a6a-ba95-6c384adc95e9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.071336Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "50f38be6-6f7e-4a6a-ba95-6c384adc95e9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.706396268Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0b0e1aa4-4791-4838-b95f-87ba51945066",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.082169Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0b0e1aa4-4791-4838-b95f-87ba51945066",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.817802603Z"
  },
  {
    "insertId": "hk2d7t6t7l29a9hm",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "filestore-node-bfxch",
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.083125127Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:41.248732384Z"
  },
  {
    "insertId": "u0w3oc5u2c2j55nq",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system",
        "project_id": "codium-production",
        "pod_name": "filestore-node-bfxch",
        "location": "us-central1",
        "container_name": "gcp-filestore-driver"
      }
    },
    "timestamp": "2024-08-21T16:39:38.083158665Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:41.248732384Z"
  },
  {
    "insertId": "jilnacbmtph8y1d7",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "elapsed": {
          "seconds": 119075.731528,
          "repr": "1 day, 9:04:35.731528"
        },
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:38.087280+00:00",
          "timestamp": 1724258378.08728
        },
        "extra": {
          "method": "POST",
          "url": "https://api.codium.ai/v2/code/completion",
          "on_prem_log": true,
          "source_host": "62.89.209.162",
          "request_id": "8532717f-7dcc-4306-ab33-3455388b04a0",
          "status_code": 200
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "exception": null,
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "name": "app",
        "message": "Request handled",
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "function": "dispatch"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.087579013Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "82ddb889-fc5f-4ce4-9d9c-50febd956220",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.092701Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "82ddb889-fc5f-4ce4-9d9c-50febd956220",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.407381333Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bbb061f7-dd69-4e0a-a2af-21701cff9265",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.104309Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bbb061f7-dd69-4e0a-a2af-21701cff9265",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.294053861Z"
  },
  {
    "insertId": "fjr7x1emhx9t",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "103.199.177.29",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "PS"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 1000,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1590",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "103.199.177.29",
      "serverIp": "10.164.17.14",
      "latency": "0.147960s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.108201Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/7134c043fff28c3c1f098d5759e8cb4f",
    "receiveTimestamp": "2024-08-21T16:39:38.736096119Z",
    "spanId": "92c0263764a1d6d7"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "33d4a091-2f10-4a38-a496-9d91f42956f4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.119232Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "33d4a091-2f10-4a38-a496-9d91f42956f4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.912861066Z"
  },
  {
    "insertId": "2qsa8fpwyqhddr8l",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:38.171017+00:00",
          "timestamp": 1724258378.171017
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "message": "Request handled",
        "extra": {
          "on_prem_log": true,
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "method": "POST",
          "status_code": 200,
          "request_id": "N/A",
          "source_host": "103.199.177.29"
        },
        "name": "app",
        "exception": null,
        "process": {
          "id": 15,
          "name": "MainProcess"
        },
        "module": "app",
        "function": "dispatch",
        "elapsed": {
          "repr": "1 day, 9:04:35.525699",
          "seconds": 119075.525699
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:38.171285123Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "36cd6492-7f26-4dda-9cc5-85cafbd240e7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.175946Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "36cd6492-7f26-4dda-9cc5-85cafbd240e7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.702453219Z"
  },
  {
    "insertId": "7ab95sami8gyoogi",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "exception": null,
        "function": "verify_user_token",
        "line": 156,
        "message": "User phil9651@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "name": "copilot_proxy.auth.core",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "thread": {
          "id": 139238569912000,
          "name": "AnyIO worker thread"
        },
        "extra": {},
        "elapsed": {
          "repr": "1 day, 8:48:24.366984",
          "seconds": 118104.366984
        },
        "time": {
          "timestamp": 1724258378.203493,
          "repr": "2024-08-21 16:39:38.203493+00:00"
        },
        "module": "core"
      },
      "text": "User phil9651@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.203827050Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "chav5i6av5yo1wpx",
    "jsonPayload": {
      "text": "No context blob\n",
      "record": {
        "function": "prepare_prev_results",
        "line": 1457,
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "file": {
          "path": "/copilot_proxy/api/code_completions/v2.py",
          "name": "v2.py"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "message": "No context blob",
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "elapsed": {
          "seconds": 118104.368339,
          "repr": "1 day, 8:48:24.368339"
        },
        "name": "copilot_proxy.api.code_completions.v2",
        "time": {
          "repr": "2024-08-21 16:39:38.204848+00:00",
          "timestamp": 1724258378.204848
        },
        "module": "v2",
        "extra": {
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "user": {
            "uid": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "organization_id": null,
            "email_verified": true,
            "auth_time": 1724252115,
            "name": "Phillip Bogopane",
            "tier_level": 1,
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "100163095249431956809"
                ],
                "email": [
                  "phil9651@gmail.com"
                ]
              }
            },
            "optout": false,
            "iat": 1724258376,
            "aud": "codium-dev-360812",
            "baseUrl": null,
            "allowed": true,
            "sub": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "email": "phil9651@gmail.com",
            "exp": 1724261976,
            "tier_end_date": 1714866565000,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocL1R1xNpsrMwXbhrBDRL--ufmmuOqhsro4LlGFt_5mE5iWkD_c=s96-c",
            "user_id": "vHGeezSvEVecZY0nbUZUyDhr1Jq2"
          },
          "request_id": "551cb68e-13bf-434b-89cd-e689e381e923"
        },
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.205112195Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "1hb6c04e7tbcp",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "priority": 14000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "DE"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "remoteIp": "188.174.251.242",
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "priority": 500
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "13196",
      "status": 200,
      "responseSize": "723",
      "userAgent": "axios/1.6.2",
      "remoteIp": "188.174.251.242",
      "serverIp": "10.164.17.14",
      "latency": "1.529665s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.207261Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/1c30ef1e9375d27c78b10dd76759d7b3",
    "receiveTimestamp": "2024-08-21T16:39:40.493686210Z",
    "spanId": "990b6ddc97a02dce"
  },
  {
    "insertId": "b51qrkg13un0dn",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "177.101.141.152",
      "backendTargetProjectNumber": "projects/67590289846",
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 1000,
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1604",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.101.141.152",
      "serverIp": "10.164.15.3",
      "latency": "0.184416s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:38.208790Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/271499988af72bad9eb416a51518be7a",
    "receiveTimestamp": "2024-08-21T16:39:39.013414662Z",
    "spanId": "10492ba5d8814e87"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dc29d8e6-349d-4f77-87a3-d6e17c1fe984",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.211246Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dc29d8e6-349d-4f77-87a3-d6e17c1fe984",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.817311462Z"
  },
  {
    "insertId": "aaf5nufmte3ex",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 9000,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "GH"
        }
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 500,
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "154.161.177.136",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.17.14",
      "latency": "0.285833s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:38.216887Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/61e42204f43c6925897d3b3f022f7f7d",
    "receiveTimestamp": "2024-08-21T16:39:38.743606213Z",
    "spanId": "d106ae29e4d24195"
  },
  {
    "insertId": "sv6tg9fmtiamf",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "154.161.177.136",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "GH"
        }
      },
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "priority": 500,
        "outcome": "ACCEPT"
      },
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "priority": 9000
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.15.3",
      "latency": "0.299510s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:38.217905Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/841a0618936d7874f0ace5f5e385fb02",
    "receiveTimestamp": "2024-08-21T16:39:39.325631573Z",
    "spanId": "1a0ba8e40bd8c1b4"
  },
  {
    "insertId": "5zugoams6ahcgu09",
    "jsonPayload": {
      "text": "Using generic language analyzer\n",
      "record": {
        "message": "Using generic language analyzer",
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "module": "v2",
        "elapsed": {
          "repr": "1 day, 8:48:24.396719",
          "seconds": 118104.396719
        },
        "function": "create_analyzer",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "extra": {
          "user": {
            "aud": "codium-dev-360812",
            "optout": false,
            "email_verified": true,
            "auth_time": 1724252115,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "uid": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "user_id": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "allowed": true,
            "name": "Phillip Bogopane",
            "sub": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "baseUrl": null,
            "email": "phil9651@gmail.com",
            "organization_id": null,
            "codiumate": null,
            "exp": 1724261976,
            "tier_end_date": 1714866565000,
            "firebase": {
              "identities": {
                "google.com": [
                  "100163095249431956809"
                ],
                "email": [
                  "phil9651@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocL1R1xNpsrMwXbhrBDRL--ufmmuOqhsro4LlGFt_5mE5iWkD_c=s96-c",
            "tier_level": 1,
            "iat": 1724258376
          },
          "request_id": "551cb68e-13bf-434b-89cd-e689e381e923",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          }
        },
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "file": {
          "path": "/copilot_proxy/api/code_completions/v2.py",
          "name": "v2.py"
        },
        "name": "copilot_proxy.api.code_completions.v2",
        "line": 406,
        "time": {
          "repr": "2024-08-21 16:39:38.233228+00:00",
          "timestamp": 1724258378.233228
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.233579160Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.28.2 (linux/amd64) kubernetes/353f8d7/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0c67a627-3f5e-4153-85f5-93f4db63335a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.252156Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0c67a627-3f5e-4153-85f5-93f4db63335a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.912861066Z"
  },
  {
    "insertId": "aav9hafhdrgbv",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 9000,
        "configuredAction": "ALLOW"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "priority": 500
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "154.161.177.136"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.9.5",
      "latency": "0.226320s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.256663Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/a5d42af343bb9128c7aab045c7d00a02",
    "receiveTimestamp": "2024-08-21T16:39:39.313156269Z",
    "spanId": "708295a1e2e7b052"
  },
  {
    "insertId": "1l5sh6mfq0h1il",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "GH"
        }
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "configuredAction": "THROTTLE",
        "priority": 500,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "priority": 9000,
        "name": "codium-app-cloud-armor-policy"
      },
      "remoteIp": "154.161.177.136",
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.1.4",
      "latency": "0.213498s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.256898Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/2335282e85b4f3c3eed96079c31674f9",
    "receiveTimestamp": "2024-08-21T16:39:39.659923790Z",
    "spanId": "b35b82970607dc46"
  },
  {
    "insertId": "abs4trfpmn4uh",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy"
      },
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "priority": 500
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "154.161.177.136"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.10.5",
      "latency": "0.224783s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.259182Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/54f146ec1d28ac93fc6d4f740876ec37",
    "receiveTimestamp": "2024-08-21T16:39:39.465528879Z",
    "spanId": "02f81cc4de87eeb0"
  },
  {
    "insertId": "soon8z4ezfmvzjlr",
    "jsonPayload": {
      "record": {
        "function": "tests_generate_code_ask",
        "extra": {
          "data": {
            "extra_instructions": "create discounted products following user stories below:  \n<template>\n\n<!-- Product Details View -->\n\n<div v-if=\"product\" class=\"flex flex-col md:flex-row mt-6\">\n\n<!-- Product Image -->\n\n<img :src=\"product.image\" :alt=\"product.title\" class=\"h-80 w-full md:w-30 object-contain rounded-md\" />\n\n<div class=\"md:ml-6 mt-4 md:mt-0\">\n\n<!-- Product Title -->\n\n<h1 class=\"text-2xl font-bold mb-2\">{{ product.title }}</h1>\n\n<!-- Product Category -->\n\n<p class=\"text-gray-600 mb-4\">{{ product.category }}</p>\n\n<!-- Product Description -->\n\n<p class=\"mb-4\">{{ product.description }}</p>\n\n<!-- Product Price -->\n\n<div class=\"font-bold text-xl mb-4\">${{ product.price }}</div>\n\n<!-- Display the fetched data -->\n\n<div class=\"flex items-center mb-4\">\n\n<!-- Display full stars -->\n\n<span v-for=\"star in fullStars\" :key=\"star\" class=\"fas fa-star text-yellow-500\"></span>\n\n<!-- Display half star if applicable -->\n\n<span v-if=\"hasHalfStar\" class=\"fas fa-star-half-alt text-yellow-500\"></span>\n\n<!-- Display empty stars -->\n\n<span v-for=\"star in emptyStars\" :key=\"star\" class=\"far fa-star text-yellow-500\"></span>\n\n</div>\n\n<!-- Display rating number -->\n\n<p>Ratings: {{ stars }}</p>\n\n<!-- Display number of reviews -->\n\n<p>Number of Reviews: {{ numReviews }}</p>\n\n<!-- Back button -->\n\n<button @click=\"goBack\" class=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 mr-2\">\n\nBack\n\n</button>\n\n<!-- Toggle favorite button -->\n\n<button @click=\"toggleFavorite(product.id)\" class=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 mr-2\">\n\n{{ isFavorite ? 'Remove from Favorites' : 'Add to Favorites' }}\n\n</button>\n\n<!-- Add to cart button -->\n\n<button @click=\"addToCart(product)\" class=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\">\n\nAdd to Cart\n\n</button>\n\n</div>\n\n</div>\n\n</template>\n\n<script>\n\nimport { ref, computed, onMounted } from 'vue';\n\nimport { useStore } from 'vuex';\n\nimport { useRoute, useRouter } from 'vue-router';\n\nimport axios from 'axios'; // Import Axios\n\nexport default {\n\nsetup() {\n\nconst store = useStore();\n\nconst route = useRoute();\n\nconst router = useRouter();\n\nconst product = computed(() => store.state.selectedProduct);\n\nconst isFavorite = computed(() => store.state.favorites.includes(product.value.id));\n\nconst stars = ref(0);\n\nconst numRatings = ref(0);\n\nconst numReviews = ref(0);\n\nconst fullStars = computed(() => Math.floor(stars.value));\n\nconst hasHalfStar = computed(() => stars.value % 1 >= 0.5);\n\nconst emptyStars = computed(() => 5 - fullStars.value - (hasHalfStar.value ? 1 : 0));\n\nconst loading = ref(false);\n\nconst toggleFavorite = (productId) => {\n\nstore.commit('toggleFavorite', productId);\n\n};\n\nconst addToCart = (product) => {\n\nstore.commit('addToCart', product);\n\n};\n\nconst goBack = () => {\n\nrouter.go(-1);\n\n};\n\nonMounted(async () => {\n\nconst productId = route.params.id;\n\nconst selectedProduct = store.state.products.find((p) => p.id === parseInt(productId));\n\nstore.commit('setSelectedProduct', selectedProduct);\n\ntry {\n\nloading.value = true;\n\nconst response = await axios.get(\\`https://fakestoreapi.com/products/${productId}\\`);\n\nstars.value = response.data.rating.rate;\n\nnumRatings.value = response.data.rating.count;\n\nnumReviews.value = response.data.rating.count;\n\n} catch (error) {\n\nconsole.error('Error fetching additional data:', error);\n\n} finally {\n\nloading.value = false;\n\n}\n\n});\n\nreturn { product, isFavorite, toggleFavorite, addToCart, stars, numRatings, numReviews, goBack, fullStars, hasHalfStar, emptyStars, loading };\n\n}\n\n};\n\n</script>",
            "file_under_test_content": "<template>\r\n  <!-- Product Details View -->\r\n  <div v-if=\"product\" class=\"flex flex-col md:flex-row mt-6\">\r\n    <!-- Product Image -->\r\n    <img :src=\"product.image\" :alt=\"product.title\" class=\"h-80 w-full md:w-30 object-contain rounded-md\" />\r\n    <div class=\"md:ml-6 mt-4 md:mt-0\">\r\n      <!-- Product Title -->\r\n      <h1 class=\"text-2xl font-bold mb-2\">{{ product.title }}</h1>\r\n      <!-- Product Category -->\r\n      <p class=\"text-gray-600 mb-4\">{{ product.category }}</p>\r\n      <!-- Product Description -->\r\n      <p class=\"mb-4\">{{ product.description }}</p>\r\n      <!-- Product Price -->\r\n      <div class=\"font-bold text-xl mb-4\">${{ product.price }}</div>\r\n      <!-- Display the fetched data -->\r\n      <div class=\"flex items-center mb-4\">\r\n        <!-- Display full stars -->\r\n        <span v-for=\"star in fullStars\" :key=\"star\" class=\"fas fa-star text-yellow-500\"></span>\r\n        <!-- Display half star if applicable -->\r\n        <span v-if=\"hasHalfStar\" class=\"fas fa-star-half-alt text-yellow-500\"></span>\r\n        <!-- Display empty stars -->\r\n        <span v-for=\"star in emptyStars\" :key=\"star\" class=\"far fa-star text-yellow-500\"></span>\r\n      </div>\r\n      <!-- Display rating number -->\r\n      <p>Ratings: {{ stars }}</p>\r\n      <!-- Display number of reviews -->\r\n      <p>Number of Reviews: {{ numReviews }}</p>\r\n      <!-- Back button -->\r\n      <button @click=\"goBack\" class=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 mr-2\">\r\n        Back\r\n      </button>\r\n      <!-- Toggle favorite button -->\r\n      <button @click=\"toggleFavorite(product.id)\" class=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 mr-2\">\r\n        {{ isFavorite ? 'Remove from Favorites' : 'Add to Favorites' }}\r\n      </button>\r\n      <!-- Add to cart button -->\r\n      <button @click=\"addToCart(product)\" class=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\">\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios'; // Import Axios\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n\r\n    const product = computed(() => store.state.selectedProduct);\r\n    const isFavorite = computed(() => store.state.favorites.includes(product.value.id));\r\n\r\n    const stars = ref(0);\r\n    const numRatings = ref(0);\r\n    const numReviews = ref(0);\r\n\r\n    const fullStars = computed(() => Math.floor(stars.value));\r\n    const hasHalfStar = computed(() => stars.value % 1 >= 0.5);\r\n    const emptyStars = computed(() => 5 - fullStars.value - (hasHalfStar.value ? 1 : 0));\r\n\r\n    const loading = ref(false);\r\n\r\n    const toggleFavorite = (productId) => {\r\n      store.commit('toggleFavorite', productId);\r\n    };\r\n\r\n    const addToCart = (product) => {\r\n      store.commit('addToCart', product);\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.go(-1);\r\n    };\r\n\r\n    onMounted(async () => {\r\n      const productId = route.params.id;\r\n      const selectedProduct = store.state.products.find((p) => p.id === parseInt(productId));\r\n      store.commit('setSelectedProduct', selectedProduct);\r\n\r\n      try {\r\n        loading.value = true;\r\n        const response = await axios.get(`https://fakestoreapi.com/products/${productId}`);\r\n        stars.value = response.data.rating.rate;\r\n        numRatings.value = response.data.rating.count;\r\n        numReviews.value = response.data.rating.count;\r\n      } catch (error) {\r\n        console.error('Error fetching additional data:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    return { product, isFavorite, toggleFavorite, addToCart, stars, numRatings, numReviews, goBack, fullStars, hasHalfStar, emptyStars, loading };\r\n  }\r\n};\r\n</script>",
            "code_under_test_range": {
              "line_start": 0,
              "column_end": 9,
              "column_start": 0,
              "line_end": 101
            },
            "remote_context": [],
            "code_under_test_type": "code snippet",
            "language": "vue",
            "custom_template": null,
            "is_code_snippet": true,
            "dependencies_context": [],
            "user_context": [],
            "max_remote_context": 5,
            "method_under_test_name": null,
            "user_data": {
              "editor_type": "vscode",
              "editor_sub_version": null,
              "os_version": "v20.14.0",
              "extension_version": "0.9.13",
              "user_id": null,
              "editor_version": "1.92.2",
              "installation_id": "874f84a4-f356-4246-9212-34b2c849d3d6",
              "os_platform": "win32"
            },
            "method_under_test_range": null,
            "generate_suggestions": true,
            "configuration": {
              "num_desired_tests": 2
            },
            "repo_context": [],
            "context_blob": null,
            "context": [],
            "code_under_test_content": "<template>\r\n  <!-- Product Details View -->\r\n  <div v-if=\"product\" class=\"flex flex-col md:flex-row mt-6\">\r\n    <!-- Product Image -->\r\n    <img :src=\"product.image\" :alt=\"product.title\" class=\"h-80 w-full md:w-30 object-contain rounded-md\" />\r\n    <div class=\"md:ml-6 mt-4 md:mt-0\">\r\n      <!-- Product Title -->\r\n      <h1 class=\"text-2xl font-bold mb-2\">{{ product.title }}</h1>\r\n      <!-- Product Category -->\r\n      <p class=\"text-gray-600 mb-4\">{{ product.category }}</p>\r\n      <!-- Product Description -->\r\n      <p class=\"mb-4\">{{ product.description }}</p>\r\n      <!-- Product Price -->\r\n      <div class=\"font-bold text-xl mb-4\">${{ product.price }}</div>\r\n      <!-- Display the fetched data -->\r\n      <div class=\"flex items-center mb-4\">\r\n        <!-- Display full stars -->\r\n        <span v-for=\"star in fullStars\" :key=\"star\" class=\"fas fa-star text-yellow-500\"></span>\r\n        <!-- Display half star if applicable -->\r\n        <span v-if=\"hasHalfStar\" class=\"fas fa-star-half-alt text-yellow-500\"></span>\r\n        <!-- Display empty stars -->\r\n        <span v-for=\"star in emptyStars\" :key=\"star\" class=\"far fa-star text-yellow-500\"></span>\r\n      </div>\r\n      <!-- Display rating number -->\r\n      <p>Ratings: {{ stars }}</p>\r\n      <!-- Display number of reviews -->\r\n      <p>Number of Reviews: {{ numReviews }}</p>\r\n      <!-- Back button -->\r\n      <button @click=\"goBack\" class=\"bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 mr-2\">\r\n        Back\r\n      </button>\r\n      <!-- Toggle favorite button -->\r\n      <button @click=\"toggleFavorite(product.id)\" class=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 mr-2\">\r\n        {{ isFavorite ? 'Remove from Favorites' : 'Add to Favorites' }}\r\n      </button>\r\n      <!-- Add to cart button -->\r\n      <button @click=\"addToCart(product)\" class=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\">\r\n        Add to Cart\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport axios from 'axios'; // Import Axios\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n\r\n    const product = computed(() => store.state.selectedProduct);\r\n    const isFavorite = computed(() => store.state.favorites.includes(product.value.id));\r\n\r\n    const stars = ref(0);\r\n    const numRatings = ref(0);\r\n    const numReviews = ref(0);\r\n\r\n    const fullStars = computed(() => Math.floor(stars.value));\r\n    const hasHalfStar = computed(() => stars.value % 1 >= 0.5);\r\n    const emptyStars = computed(() => 5 - fullStars.value - (hasHalfStar.value ? 1 : 0));\r\n\r\n    const loading = ref(false);\r\n\r\n    const toggleFavorite = (productId) => {\r\n      store.commit('toggleFavorite', productId);\r\n    };\r\n\r\n    const addToCart = (product) => {\r\n      store.commit('addToCart', product);\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.go(-1);\r\n    };\r\n\r\n    onMounted(async () => {\r\n      const productId = route.params.id;\r\n      const selectedProduct = store.state.products.find((p) => p.id === parseInt(productId));\r\n      store.commit('setSelectedProduct', selectedProduct);\r\n\r\n      try {\r\n        loading.value = true;\r\n        const response = await axios.get(`https://fakestoreapi.com/products/${productId}`);\r\n        stars.value = response.data.rating.rate;\r\n        numRatings.value = response.data.rating.count;\r\n        numReviews.value = response.data.rating.count;\r\n      } catch (error) {\r\n        console.error('Error fetching additional data:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    });\r\n\r\n    return { product, isFavorite, toggleFavorite, addToCart, stars, numRatings, numReviews, goBack, fullStars, hasHalfStar, emptyStars, loading };\r\n  }\r\n};\r\n</script>",
            "code_under_test_name": "code snippet",
            "file_under_test_path": "src\\components\\ProductDetails.vue",
            "should_return_context": false,
            "max_repo_context": 5,
            "add_test_to_suite": null
          },
          "user": {
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocL1R1xNpsrMwXbhrBDRL--ufmmuOqhsro4LlGFt_5mE5iWkD_c=s96-c",
            "uid": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "iat": 1724258376,
            "optout": false,
            "organization_id": null,
            "email": "phil9651@gmail.com",
            "auth_time": 1724252115,
            "allowed": true,
            "baseUrl": null,
            "user_id": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "name": "Phillip Bogopane",
            "tier_end_date": 1714866565000,
            "tier_level": 1,
            "codiumate": null,
            "email_verified": true,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "vHGeezSvEVecZY0nbUZUyDhr1Jq2",
            "aud": "codium-dev-360812",
            "exp": 1724261976,
            "firebase": {
              "identities": {
                "email": [
                  "phil9651@gmail.com"
                ],
                "google.com": [
                  "100163095249431956809"
                ]
              },
              "sign_in_provider": "custom"
            }
          },
          "request_id": "551cb68e-13bf-434b-89cd-e689e381e923",
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "on_prem_log": true
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "message": "Incoming request /v2/tests/generate_code_ask",
        "elapsed": {
          "repr": "1 day, 8:48:24.432041",
          "seconds": 118104.432041
        },
        "file": {
          "path": "/copilot_proxy/api/code_completions/v2.py",
          "name": "v2.py"
        },
        "name": "copilot_proxy.api.code_completions.v2",
        "time": {
          "timestamp": 1724258378.26855,
          "repr": "2024-08-21 16:39:38.268550+00:00"
        },
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "exception": null,
        "module": "v2",
        "line": 946,
        "process": {
          "name": "MainProcess",
          "id": 23
        }
      },
      "text": "Incoming request /v2/tests/generate_code_ask\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.269041970Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "sht7dwj726hjqt19",
    "jsonPayload": {
      "text": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "time": {
          "timestamp": 1724258378.274087,
          "repr": "2024-08-21 16:39:38.274087+00:00"
        },
        "module": "core",
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "process": {
          "id": 15,
          "name": "MainProcess"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "exception": null,
        "thread": {
          "id": 134585534895808,
          "name": "AnyIO worker thread"
        },
        "name": "copilot_proxy.auth.core",
        "elapsed": {
          "repr": "1 day, 9:04:35.628769",
          "seconds": 119075.628769
        },
        "message": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "function": "verify_user_token",
        "line": 156,
        "extra": {}
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.274393667Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "f4rm42jtdnssybnv",
    "jsonPayload": {
      "record": {
        "name": "copilot_proxy.auth.core",
        "function": "verify_minimum_tier_level",
        "module": "core",
        "elapsed": {
          "seconds": 119075.629154,
          "repr": "1 day, 9:04:35.629154"
        },
        "line": 106,
        "thread": {
          "id": 134585534895808,
          "name": "AnyIO worker thread"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.274472+00:00",
          "timestamp": 1724258378.274472
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "message": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "extra": {},
        "exception": null,
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 15
        }
      },
      "text": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.274658179Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "13617690-f03a-443e-ada2-3059904e1d8d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.275530Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "13617690-f03a-443e-ada2-3059904e1d8d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.899487077Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6b6f5c47-4f52-4255-9989-f3ba5189ee6d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.275997Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6b6f5c47-4f52-4255-9989-f3ba5189ee6d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.611572491Z"
  },
  {
    "insertId": "3vwxwqf9daz8h",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 15000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE",
        "priority": 500
      },
      "remoteIp": "187.74.57.202",
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1491",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "187.74.57.202",
      "serverIp": "10.164.17.14",
      "latency": "0.179010s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.278332Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/57109f221dfcd3b897bbdc5d9c56a94f",
    "receiveTimestamp": "2024-08-21T16:39:38.806353954Z",
    "spanId": "bea2ac1e86b6e08e"
  },
  {
    "insertId": "wy5le5x02k2i7pd0",
    "jsonPayload": {
      "record": {
        "message": "Incoming request /v2/code/completion",
        "extra": {
          "user": {
            "codiumate": null,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocINQInd_FocpYeBLqdBmgBalK-N6QInOYl4ptzpyH36Gqhfb48=s96-c",
            "optout": false,
            "allowed": true,
            "aud": "codium-dev-360812",
            "iat": 1724256383,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_level": 10,
            "user_id": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "name": "Max Schattauer / Perelyn GmbH",
            "uid": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "sub": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "auth_time": 1724135554,
            "email": "max.schattauer@perelyn.com",
            "email_verified": true,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "google.com": [
                  "114319076377525603991"
                ],
                "email": [
                  "max.schattauer@perelyn.com"
                ]
              }
            },
            "baseUrl": null,
            "organization_id": null,
            "tier_end_date": 1724651848000,
            "exp": 1724259983
          },
          "data": {
            "remote_context": [],
            "user_data": {
              "os_version": "v20.14.0",
              "os_platform": "darwin",
              "editor_sub_version": null,
              "user_id": null,
              "installation_id": "b873c323-f807-48e0-816d-98db78407310",
              "editor_version": "1.92.2",
              "extension_version": "0.9.13",
              "editor_type": "vscode"
            },
            "max_remote_context": 5,
            "is_file_diff": false,
            "doc_context_suffix": " temperature: number,  };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n",
            "max_repo_context": 5,
            "task": "",
            "is_multiline": false,
            "relative_file_path": "frontend/react/src/api/chatbot/settings.ts",
            "user_context": [],
            "extra_instructions": "",
            "doc_context_prefix": "import { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string,",
            "file_diff_content": "",
            "reference_snippet_messages": [
              {
                "file_name": "Imports and implementations used in this file:",
                "type": "CodiummateImport",
                "content": "api/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};"
              },
              {
                "file_name": "Project directory structure:",
                "content": "README.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh",
                "type": "DirectoryStructure"
              },
              {
                "content": "state.current_settings.document_collection",
                "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py",
                "type": "Clipboard"
              },
              {
                "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py",
                "type": "Clipboard",
                "content": "Was steht in den AGB"
              },
              {
                "content": "ChatbotSettings",
                "type": "Clipboard",
                "file_name": "frontend/react/src/api/chatbot/settings.ts"
              }
            ],
            "context_mode": "pre_pr",
            "context": [],
            "repo_context": [],
            "language": "typescript"
          },
          "on_prem_log": true,
          "request_id": "8be62ada-1c52-49b9-a880-c83b4905c7a4",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          }
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "process": {
          "id": 15,
          "name": "MainProcess"
        },
        "exception": null,
        "line": 513,
        "time": {
          "repr": "2024-08-21 16:39:38.279121+00:00",
          "timestamp": 1724258378.279121
        },
        "module": "v2",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "name": "copilot_proxy.api.code.v2",
        "elapsed": {
          "repr": "1 day, 9:04:35.633803",
          "seconds": 119075.633803
        },
        "function": "run_code_completion"
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:38.279530020Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "ldst2hwhiwvzqgxx",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 8:52:43.107494",
          "seconds": 118363.107494
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "message": "Request handled",
        "exception": null,
        "extra": {
          "request_id": "N/A",
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "source_host": "177.101.141.152",
          "method": "POST",
          "on_prem_log": true,
          "status_code": 200
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "function": "dispatch",
        "module": "app",
        "time": {
          "timestamp": 1724258378.285436,
          "repr": "2024-08-21 16:39:38.285436+00:00"
        },
        "name": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.285701386Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72eeb861-1c1c-47ac-8abd-d406271724d7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.287310Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72eeb861-1c1c-47ac-8abd-d406271724d7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.921332572Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "435189e8-c8be-4454-a95f-116678edebf6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.295138Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "435189e8-c8be-4454-a95f-116678edebf6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.005348196Z"
  },
  {
    "insertId": "c7q5ucuce3mwpzrr",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "exception": null,
        "extra": {
          "url": "https://api.codium.ai/v2/tests/generate_code_ask",
          "request_id": "551cb68e-13bf-434b-89cd-e689e381e923",
          "status_code": 200,
          "method": "POST",
          "on_prem_log": true,
          "source_host": "105.245.116.33"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.297984+00:00",
          "timestamp": 1724258378.297984
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "line": 37,
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "name": "app",
        "message": "Request handled",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118104.461475,
          "repr": "1 day, 8:48:24.461475"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh"
      }
    },
    "timestamp": "2024-08-21T16:39:38.298242607Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "98dvou97pjy0atcc",
    "jsonPayload": {
      "record": {
        "name": "app",
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "line": 164,
        "function": "live",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "message": "Incoming request /v1/health/live",
        "time": {
          "timestamp": 1724258378.304461,
          "repr": "2024-08-21 16:39:38.304461+00:00"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "extra": {
          "on_prem_log": true
        },
        "exception": null,
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118105.555047,
          "repr": "1 day, 8:48:25.555047"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.304729108Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "pl8m9jm0vkene638",
    "jsonPayload": {
      "record": {
        "thread": {
          "id": 134585476179648,
          "name": "AnyIO worker thread"
        },
        "line": 156,
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1 day, 9:04:35.779034",
          "seconds": 119075.779034
        },
        "extra": {},
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:38.312411+00:00",
          "timestamp": 1724258378.312411
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "module": "core",
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core"
      },
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:38.312690005Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "uanpsp5smxa8a89j",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "function": "get_features",
        "extra": {
          "user": {
            "iat": 1724257614,
            "auth_time": 1724238906,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "email": "emmanuelanthonio62@gmail.com",
            "tier_level": 1,
            "firebase": {
              "identities": {
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ],
                "github.com": [
                  "64821369"
                ]
              },
              "sign_in_provider": "custom"
            },
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "exp": 1724261214,
            "aud": "codium-dev-360812",
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "codiumate": null,
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "allowed": true,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email_verified": false,
            "name": "Emmanuel Kafui Anthonio"
          },
          "request_id": "13f1de56-2b06-412e-a949-c341b16b9ab7",
          "tier_level": 1
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "module": "v2",
        "time": {
          "timestamp": 1724258378.312969,
          "repr": "2024-08-21 16:39:38.312969+00:00"
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "line": 60,
        "elapsed": {
          "seconds": 119075.779592,
          "repr": "1 day, 9:04:35.779592"
        },
        "exception": null,
        "message": "Incoming request to get feature flags",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "name": "copilot_proxy.api.users.v2",
        "process": {
          "id": 14,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:38.313219917Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "6dxw4p27ukkbe4pf",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "name": "copilot_proxy.auth.core",
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "module": "core",
        "extra": {},
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "line": 156,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134623149397696
        },
        "function": "verify_user_token",
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "elapsed": {
          "seconds": 118362.379229,
          "repr": "1 day, 8:52:42.379229"
        },
        "time": {
          "timestamp": 1724258378.316275,
          "repr": "2024-08-21 16:39:38.316275+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.316516003Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "ndm1jwpi6uiro9eg",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258378.316803,
          "repr": "2024-08-21 16:39:38.316803+00:00"
        },
        "name": "copilot_proxy.api.users.v2",
        "elapsed": {
          "seconds": 118362.379757,
          "repr": "1 day, 8:52:42.379757"
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "module": "v2",
        "message": "Incoming request to get feature flags",
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "function": "get_features",
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "line": 60,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "extra": {
          "request_id": "8d11fa7f-e420-4cd1-8b2f-6187f4aaf01b",
          "user": {
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "64821369"
                ],
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ]
              }
            },
            "name": "Emmanuel Kafui Anthonio",
            "email_verified": false,
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "email": "emmanuelanthonio62@gmail.com",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "aud": "codium-dev-360812",
            "exp": 1724261214,
            "tier_level": 1,
            "allowed": true,
            "iat": 1724257614,
            "auth_time": 1724238906,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4"
          },
          "tier_level": 1
        }
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.317027690Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "uisijqu7ganzhwsk",
    "jsonPayload": {
      "record": {
        "exception": null,
        "extra": {},
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "thread": {
          "id": 136597458638528,
          "name": "AnyIO worker thread"
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.317347+00:00",
          "timestamp": 1724258378.317347
        },
        "name": "copilot_proxy.auth.core",
        "elapsed": {
          "seconds": 119308.113102,
          "repr": "1 day, 9:08:28.113102"
        },
        "function": "verify_user_token",
        "line": 156,
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "module": "core"
      },
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.317612876Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "insertId": "2ket65llmngwtjbg",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "extra": {
          "request_id": "f998ceb6-4d89-4aa3-a65a-3e050ff398c9",
          "tier_level": 1,
          "user": {
            "auth_time": 1724238906,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email_verified": false,
            "exp": 1724261214,
            "allowed": true,
            "codiumate": null,
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "iat": 1724257614,
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "name": "Emmanuel Kafui Anthonio",
            "aud": "codium-dev-360812",
            "firebase": {
              "identities": {
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ],
                "github.com": [
                  "64821369"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email": "emmanuelanthonio62@gmail.com",
            "tier_level": 1,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "uid": "S5i5AB8pWgekUoksurv6eOC03503"
          }
        },
        "elapsed": {
          "seconds": 119308.113604,
          "repr": "1 day, 9:08:28.113604"
        },
        "module": "v2",
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "message": "Incoming request to get feature flags",
        "time": {
          "repr": "2024-08-21 16:39:38.317849+00:00",
          "timestamp": 1724258378.317849
        },
        "name": "copilot_proxy.api.users.v2",
        "exception": null,
        "line": 60,
        "function": "get_features",
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.318097907Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "insertId": "586zi9kdmvuj80qp",
    "jsonPayload": {
      "record": {
        "line": 156,
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "elapsed": {
          "seconds": 118800.483494,
          "repr": "1 day, 9:00:00.483494"
        },
        "exception": null,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132437036222144
        },
        "function": "verify_user_token",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.auth.core",
        "extra": {},
        "module": "core",
        "time": {
          "timestamp": 1724258378.318611,
          "repr": "2024-08-21 16:39:38.318611+00:00"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        }
      },
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:38.318913820Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.44.18.133",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:38.327721427Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "e79022f3c0ik4",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:38.319177847Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:39.012239244Z"
  },
  {
    "insertId": "r9k5j9ke2mixw6a4",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:38.319209+00:00",
          "timestamp": 1724258378.319209
        },
        "module": "v2",
        "line": 60,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "message": "Incoming request to get feature flags",
        "exception": null,
        "name": "copilot_proxy.api.users.v2",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "function": "get_features",
        "extra": {
          "tier_level": 1,
          "request_id": "b21b43b6-1843-4a26-989e-bd73b4cbea14",
          "user": {
            "email": "emmanuelanthonio62@gmail.com",
            "iat": 1724257614,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email_verified": false,
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "auth_time": 1724238906,
            "tier_level": 1,
            "codiumate": null,
            "allowed": true,
            "aud": "codium-dev-360812",
            "exp": 1724261214,
            "firebase": {
              "identities": {
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ],
                "github.com": [
                  "64821369"
                ]
              },
              "sign_in_provider": "custom"
            },
            "name": "Emmanuel Kafui Anthonio"
          }
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118800.484092,
          "repr": "1 day, 9:00:00.484092"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.319420782Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "abtx2tx7xcpjpkv0",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "elapsed": {
          "repr": "1 day, 8:55:31.220648",
          "seconds": 118531.220648
        },
        "extra": {},
        "module": "core",
        "line": 156,
        "name": "copilot_proxy.auth.core",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "function": "verify_user_token",
        "exception": null,
        "time": {
          "timestamp": 1724258378.322297,
          "repr": "2024-08-21 16:39:38.322297+00:00"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "thread": {
          "id": 137082722834112,
          "name": "AnyIO worker thread"
        },
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:38.322571609Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "unu2f3j91audbfeb",
    "jsonPayload": {
      "record": {
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "elapsed": {
          "repr": "1 day, 8:55:31.221181",
          "seconds": 118531.221181
        },
        "message": "Incoming request to get feature flags",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "name": "copilot_proxy.api.users.v2",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.322830+00:00",
          "timestamp": 1724258378.32283
        },
        "module": "v2",
        "extra": {
          "tier_level": 1,
          "user": {
            "name": "Emmanuel Kafui Anthonio",
            "exp": 1724261214,
            "tier_level": 1,
            "auth_time": 1724238906,
            "iat": 1724257614,
            "email": "emmanuelanthonio62@gmail.com",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "allowed": true,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "aud": "codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ],
                "github.com": [
                  "64821369"
                ]
              }
            },
            "email_verified": false,
            "codiumate": null,
            "sub": "S5i5AB8pWgekUoksurv6eOC03503"
          },
          "request_id": "3cbdf5d6-d31e-4903-af8c-e7f5ba31af16"
        },
        "function": "get_features",
        "exception": null,
        "line": 60
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:38.323050322Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "vozcx8bjdd2jqssx",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "exception": null,
        "message": "Request handled",
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "line": 37,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.328190+00:00",
          "timestamp": 1724258378.32819
        },
        "extra": {
          "url": "http://10.164.16.6:5432/v1/health/live",
          "source_host": "10.164.16.1",
          "request_id": "N/A",
          "method": "GET",
          "status_code": 200,
          "on_prem_log": true
        },
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "module": "app",
        "function": "dispatch",
        "name": "app",
        "elapsed": {
          "seconds": 118105.578776,
          "repr": "1 day, 8:48:25.578776"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.328436238Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fba53b5f-3f0a-4f5a-be84-9185e2255f15",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.330846Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fba53b5f-3f0a-4f5a-be84-9185e2255f15",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.335504613Z"
  },
  {
    "insertId": "nw69l4j0dz51ncwb",
    "jsonPayload": {
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "thread": {
          "id": 134586138613440,
          "name": "AnyIO worker thread"
        },
        "line": 156,
        "function": "verify_user_token",
        "elapsed": {
          "repr": "1 day, 9:04:35.373560",
          "seconds": 119075.37356
        },
        "extra": {},
        "time": {
          "repr": "2024-08-21 16:39:38.355928+00:00",
          "timestamp": 1724258378.355928
        },
        "name": "copilot_proxy.auth.core",
        "message": "User felipe.batista@loft.com.br will use enterprise openAI org. tier:20 codiumate:False optout:True",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "exception": null,
        "module": "core",
        "process": {
          "name": "MainProcess",
          "id": 18
        }
      },
      "text": "User felipe.batista@loft.com.br will use enterprise openAI org. tier:20 codiumate:False optout:True\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:38.356178220Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "b5y9f1iixh0thwga",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 37,
        "extra": {
          "on_prem_log": true,
          "request_id": "d6d428ff-8cbc-47d8-8f91-8d0fb97d1644",
          "status_code": 200,
          "source_host": "187.74.57.202",
          "url": "https://api.codium.ai/v2/rag/settings",
          "method": "GET"
        },
        "elapsed": {
          "seconds": 119075.374174,
          "repr": "1 day, 9:04:35.374174"
        },
        "name": "app",
        "function": "dispatch",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "message": "Request handled",
        "module": "app",
        "exception": null,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.356542+00:00",
          "timestamp": 1724258378.356542
        },
        "process": {
          "id": 18,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.356750985Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "pe5giyxkow769bkv",
    "jsonPayload": {
      "record": {
        "name": "app",
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app",
        "time": {
          "timestamp": 1724258378.356819,
          "repr": "2024-08-21 16:39:38.356819+00:00"
        },
        "elapsed": {
          "seconds": 118363.178877,
          "repr": "1 day, 8:52:43.178877"
        },
        "exception": null,
        "function": "live",
        "extra": {
          "on_prem_log": true
        },
        "message": "Incoming request /v1/health/live",
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "line": 164
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.357113477Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0c378027-d783-43ca-b58d-14d3c7a18f40",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.362784Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0c378027-d783-43ca-b58d-14d3c7a18f40",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.619523743Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "70ceaa94-0114-4a74-849f-4135f8dd3af8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.362784Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "70ceaa94-0114-4a74-849f-4135f8dd3af8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.126423261Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.44.18.133",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:38.373571618Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "a108g4ebtlgc",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.366440088Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:39.507332820Z"
  },
  {
    "insertId": "qzsmalvbzxyw97m7",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "extra": {
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/users/features",
          "source_host": "154.161.177.136",
          "status_code": 200,
          "method": "GET",
          "request_id": "f998ceb6-4d89-4aa3-a65a-3e050ff398c9"
        },
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "name": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "line": 37,
        "exception": null,
        "message": "Request handled",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 119308.165506,
          "repr": "1 day, 9:08:28.165506"
        },
        "function": "dispatch",
        "time": {
          "timestamp": 1724258378.369751,
          "repr": "2024-08-21 16:39:38.369751+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.370055647Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "insertId": "p9v2kgkro4w4370j",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "extra": {
          "request_id": "13f1de56-2b06-412e-a949-c341b16b9ab7",
          "source_host": "154.161.177.136",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/users/features",
          "method": "GET",
          "status_code": 200
        },
        "function": "dispatch",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "line": 37,
        "time": {
          "timestamp": 1724258378.379106,
          "repr": "2024-08-21 16:39:38.379106+00:00"
        },
        "name": "app",
        "elapsed": {
          "seconds": 119075.845729,
          "repr": "1 day, 9:04:35.845729"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app",
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.379427663Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "er68ny0tq9zcecyy",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.387759+00:00",
          "timestamp": 1724258378.387759
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "extra": {
          "method": "GET",
          "on_prem_log": true,
          "source_host": "35.191.206.98",
          "status_code": 200,
          "request_id": "N/A",
          "url": "http://10.164.15.3/v1/health/live"
        },
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "line": 37,
        "elapsed": {
          "seconds": 118363.209817,
          "repr": "1 day, 8:52:43.209817"
        },
        "function": "dispatch",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "message": "Request handled",
        "exception": null,
        "name": "app",
        "module": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.388285169Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "eqb195brmhflig46",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "time": {
          "repr": "2024-08-21 16:39:38.389237+00:00",
          "timestamp": 1724258378.389237
        },
        "function": "dispatch",
        "message": "Request handled",
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "module": "app",
        "elapsed": {
          "repr": "1 day, 9:00:00.554120",
          "seconds": 118800.55412
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "exception": null,
        "extra": {
          "on_prem_log": true,
          "method": "GET",
          "source_host": "154.161.177.136",
          "url": "https://api.codium.ai/v2/users/features",
          "status_code": 200,
          "request_id": "b21b43b6-1843-4a26-989e-bd73b4cbea14"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.389483849Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "fc4sqz6z2sabq504",
    "jsonPayload": {
      "message": "\"Connect to server\" serverID=\"1837b5a4-3efb-4eac-92b4-3b5c3b511a3b\"",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "konnectivity-agent-6fbcc58bcc-jb7q8",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "container_name": "konnectivity-agent",
        "namespace_name": "kube-system",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.391884898Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6fbcc58bcc",
      "k8s-pod/k8s-app": "konnectivity-agent",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "client.go",
      "line": "210"
    },
    "receiveTimestamp": "2024-08-21T16:39:38.843958650Z"
  },
  {
    "insertId": "4o027o3j7gzijbuo",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "repr": "1 day, 8:55:31.291402",
          "seconds": 118531.291402
        },
        "extra": {
          "method": "GET",
          "url": "https://api.codium.ai/v2/users/features",
          "on_prem_log": true,
          "request_id": "3cbdf5d6-d31e-4903-af8c-e7f5ba31af16",
          "status_code": 200,
          "source_host": "154.161.177.136"
        },
        "line": 37,
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:38.393051+00:00",
          "timestamp": 1724258378.393051
        },
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "message": "Request handled",
        "exception": null,
        "function": "dispatch",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.393362089Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9754d8f9-c970-4882-bd85-2d2058c57816",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.397864Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9754d8f9-c970-4882-bd85-2d2058c57816",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.916042933Z"
  },
  {
    "insertId": "mvxn25w5ie7a9f4a",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "exception": null,
        "line": 37,
        "time": {
          "timestamp": 1724258378.400478,
          "repr": "2024-08-21 16:39:38.400478+00:00"
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "function": "dispatch",
        "message": "Request handled",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "elapsed": {
          "seconds": 118362.463432,
          "repr": "1 day, 8:52:42.463432"
        },
        "extra": {
          "on_prem_log": true,
          "method": "GET",
          "url": "https://api.codium.ai/v2/users/features",
          "request_id": "8d11fa7f-e420-4cd1-8b2f-6187f4aaf01b",
          "status_code": 200,
          "source_host": "154.161.177.136"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "module": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.400728262Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "textPayload": "INFO:     35.191.206.96:59606 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "4oazn72912eoem8n",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "pr-agent",
        "container_name": "main",
        "pod_name": "pr-agent-free-bitbucket-645d9bc84b-s872n",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.453231045Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-bitbucket",
      "k8s-pod/pod-template-hash": "645d9bc84b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.326803480Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9bfa5bbf-8dee-47c4-ae1e-58754f7676af",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.470303Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9bfa5bbf-8dee-47c4-ae1e-58754f7676af",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.909444109Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2384f8cf-b520-4670-a3b2-ed1d0eca4398",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:38.475177Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2384f8cf-b520-4670-a3b2-ed1d0eca4398",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.545527221Z"
  },
  {
    "insertId": "vx4cirf4kqdxp",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 14000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 500,
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        }
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "62.89.209.162",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "TJ"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "10136",
      "status": 200,
      "responseSize": "523",
      "userAgent": "axios/1.6.2",
      "remoteIp": "62.89.209.162",
      "serverIp": "10.164.15.3",
      "latency": "0.975249s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:38.503240Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/750f3e77abc4e4f874949c02b1ee5111",
    "receiveTimestamp": "2024-08-21T16:39:40.432854124Z",
    "spanId": "4463cb9840934e8f"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "82f25aa9-ed52-414b-84ee-e8638939b240",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.503737Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "82f25aa9-ed52-414b-84ee-e8638939b240",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.111306552Z"
  },
  {
    "textPayload": "INFO:     35.191.206.97:54920 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "2td6ux2q3a9zf08o",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "pr-agent-free-bitbucket-645d9bc84b-s872n",
        "namespace_name": "pr-agent",
        "container_name": "main",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.534217685Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3",
      "k8s-pod/pod-template-hash": "645d9bc84b",
      "k8s-pod/app": "pr-agent-free-bitbucket"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.326803480Z"
  },
  {
    "insertId": "56qt7h03fs7j1qun",
    "jsonPayload": {
      "record": {
        "extra": {
          "url_path": "/v2/code/completion",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главн",
          "request_id": "4bb715fc-8849-4e90-9bc9-7bf4ec45d818",
          "model": "gpt-3.5-turbo-instruct",
          "completion": "вя</a>\n                </li>",
          "openai_request_id": "cmpl-9yiewqh6lzrvYHhihPBkDTcdoDBCL",
          "openai_response": {
            "usage": {
              "completion_tokens": 9,
              "total_tokens": 1770,
              "prompt_tokens": 1761
            },
            "object": "text_completion",
            "created": 1724258378,
            "model": "gpt-3.5-turbo-instruct",
            "id": "cmpl-9yiewqh6lzrvYHhihPBkDTcdoDBCL",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='вя</a>\\n                </li>', logprobs=None)"
            ]
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "user": {
            "iat": 1724255292,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "tier_end_date": 1701693510000,
            "tier_level": 10,
            "email": "y.borozna81@internet.ru",
            "auth_time": 1724251717,
            "email_verified": false,
            "codiumate": null,
            "exp": 1724258892,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "aud": "codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true
          }
        },
        "function": "generate",
        "line": 131,
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "module": "litellm_infer_engine",
        "time": {
          "repr": "2024-08-21 16:39:38.537435+00:00",
          "timestamp": 1724258378.537435
        },
        "name": "ai.litellm.litellm_infer_engine",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "elapsed": {
          "seconds": 118530.98557,
          "repr": "1 day, 8:55:30.985570"
        },
        "exception": null,
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "message": "OpenAI Response",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        }
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.537854290Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "b3jhor7zjyt1u7tx",
    "jsonPayload": {
      "record": {
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "exception": null,
        "name": "copilot_proxy.utils.inference_utils",
        "elapsed": {
          "repr": "1 day, 8:55:31.017479",
          "seconds": 118531.017479
        },
        "message": "Prompts and results v2",
        "level": {
          "icon": "🐞",
          "no": 10,
          "name": "DEBUG"
        },
        "line": 1112,
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.569344+00:00",
          "timestamp": 1724258378.569344
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "extra": {
          "request_id": "4bb715fc-8849-4e90-9bc9-7bf4ec45d818",
          "results": {
            "user_input": {
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главн",
              "is_multiline": false,
              "relative_file_path": "dish/templates/core/frontpage.html",
              "repo_context": [],
              "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
              "language": "django-html",
              "max_repo_context": 5,
              "remote_context": [],
              "file_diff_content": "",
              "reference_snippet_messages": [
                {
                  "type": "DirectoryStructure",
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                  "file_name": "Project directory structure:"
                },
                {
                  "type": "File",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                  "file_name": "templates\\base.html"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html",
                  "type": "Clipboard"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html",
                  "type": "Clipboard"
                }
              ],
              "context": [],
              "configuration": {},
              "context_mode": "pre_pr",
              "is_file_diff": false,
              "max_remote_context": 5,
              "task": "",
              "extra_instructions": "",
              "user_context": []
            },
            "inference_steps": {
              "step_01_CodeCompletion": {
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главн",
                "03_start_time": "2024-08-21 16:39:38.087655",
                "04_end_time": "2024-08-21 16:39:38.569266",
                "00_system": null,
                "02_completion": "вя</a>\n                </li>"
              }
            },
            "url_path": "/v2/code/completion",
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"\\u0432\\u044f</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ]
          },
          "url_path": "/v2/code/completion",
          "user": {
            "iat": 1724255292,
            "aud": "codium-dev-360812",
            "email_verified": false,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "exp": 1724258892,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "codiumate": null,
            "tier_level": 10,
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true,
            "tier_end_date": 1701693510000,
            "auth_time": 1724251717,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "email": "y.borozna81@internet.ru",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2"
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          }
        },
        "function": "process",
        "module": "inference_utils"
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:38.569944034Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "rpw8fg6211zx9ymb",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:38.592568+00:00",
          "timestamp": 1724258378.592568
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "module": "core",
        "extra": {},
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134622193120960
        },
        "line": 156,
        "name": "copilot_proxy.auth.core",
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "elapsed": {
          "repr": "1 day, 8:52:42.592812",
          "seconds": 118362.592812
        },
        "exception": null,
        "function": "verify_user_token",
        "process": {
          "id": 23,
          "name": "MainProcess"
        }
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.592825763Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "q57numjbhk7nrgef",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "time": {
          "timestamp": 1724258378.592936,
          "repr": "2024-08-21 16:39:38.592936+00:00"
        },
        "elapsed": {
          "repr": "1 day, 8:52:42.593180",
          "seconds": 118362.59318
        },
        "line": 106,
        "name": "copilot_proxy.auth.core",
        "extra": {},
        "function": "verify_minimum_tier_level",
        "module": "core",
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "exception": null,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134622193120960
        }
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.593081561Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "kz1ybd2w2ty72ulu",
    "jsonPayload": {
      "record": {
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "module": "v2",
        "message": "Incoming request /v2/code/completion",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "function": "run_code_completion",
        "elapsed": {
          "repr": "1 day, 8:52:42.596542",
          "seconds": 118362.596542
        },
        "name": "copilot_proxy.api.code.v2",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "time": {
          "timestamp": 1724258378.596298,
          "repr": "2024-08-21 16:39:38.596298+00:00"
        },
        "line": 513,
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "extra": {
          "data": {
            "remote_context": [],
            "max_repo_context": 5,
            "user_data": {
              "editor_sub_version": null,
              "installation_id": "15788762-fe0e-4403-bf86-bc88815499a2",
              "extension_version": "0.9.13",
              "os_platform": "linux",
              "os_version": "v18.15.0",
              "editor_version": "1.82.2",
              "user_id": null,
              "editor_type": "vscode"
            },
            "context_mode": "pre_pr",
            "file_diff_content": "",
            "language": "javascriptreact",
            "max_remote_context": 5,
            "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation",
            "user_context": [],
            "doc_context_suffix": ">\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
            "task": "",
            "is_multiline": false,
            "repo_context": [],
            "relative_file_path": "src/components/spacemen/spaceman.jsx",
            "context": [],
            "is_file_diff": false,
            "extra_instructions": "",
            "reference_snippet_messages": [
              {
                "type": "CodiummateImport",
                "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman",
                "file_name": "Imports and implementations used in this file:"
              },
              {
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:",
                "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js"
              },
              {
                "file_name": "src/components/stagerbar/stagerbar.jsx",
                "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                "type": "File"
              },
              {
                "file_name": "src/store/reducers/todoById/todoByIdSlice.js",
                "type": "File",
                "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;"
              },
              {
                "type": "File",
                "file_name": "src/pages/main/main.jsx",
                "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>"
              },
              {
                "type": "File",
                "file_name": "tailwind.config.js",
                "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}"
              }
            ]
          },
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          },
          "on_prem_log": true,
          "request_id": "34336656-6062-4bde-a128-f0a63556edde",
          "user": {
            "tier_end_date": 1724734597000,
            "email_verified": false,
            "exp": 1724261055,
            "name": "HoneyMoon is still aliwe",
            "organization_id": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "aud": "codium-dev-360812",
            "firebase": {
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              },
              "sign_in_provider": "custom"
            },
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "auth_time": 1724257455,
            "tier_level": 10,
            "codiumate": null,
            "baseUrl": null,
            "email": "anjasajfullin@gmail.com",
            "allowed": true,
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "optout": false,
            "iat": 1724257455
          }
        }
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.596667318Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "p1z974pgfmqsdurk",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "seconds": 118531.047193,
          "repr": "1 day, 8:55:31.047193"
        },
        "extra": {
          "source_host": "37.214.22.173",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/code/completion",
          "request_id": "4bb715fc-8849-4e90-9bc9-7bf4ec45d818",
          "method": "POST",
          "status_code": 200
        },
        "function": "dispatch",
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:38.599058+00:00",
          "timestamp": 1724258378.599058
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "message": "Request handled",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "name": "app",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "exception": null,
        "module": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.599436558Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:54730 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "zkmjres85z6cilar",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.610091298Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "1snx09nesfm5k",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "35.239.194.85"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://pr-agent.bitbucketapps.codium.ai/",
      "requestSize": "153",
      "status": 200,
      "responseSize": "545",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.239.194.85",
      "serverIp": "10.164.5.13",
      "latency": "0.004060s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-bitbucket-ser-300-26cec08d",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:38.617783Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/e1f7cfeb90e7f8161a689ca72520abd5",
    "receiveTimestamp": "2024-08-21T16:39:39.032245192Z",
    "spanId": "5770edd5be23e63d"
  },
  {
    "textPayload": "INFO:     35.191.10.123:37006 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "lptbsxkbg327utbr",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "main",
        "namespace_name": "pr-agent",
        "project_id": "codium-production",
        "pod_name": "pr-agent-free-bitbucket-645d9bc84b-s872n"
      }
    },
    "timestamp": "2024-08-21T16:39:38.621432322Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-bitbucket",
      "k8s-pod/pod-template-hash": "645d9bc84b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.326803480Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c77f812d-cdbc-42db-bd58-72b38bf284c9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.644704Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c77f812d-cdbc-42db-bd58-72b38bf284c9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:38.911006013Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "26435385-988c-430a-9f1b-5625d97e1e9f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.659475Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "26435385-988c-430a-9f1b-5625d97e1e9f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.621167073Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "29c21050-946b-4892-8592-e47f8ed03ae7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.663403Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "29c21050-946b-4892-8592-e47f8ed03ae7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.009278428Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.68.213",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:38.674940938Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1i5ct0qf3c57yu",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.670739888Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:39.406811873Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b54faa86-a560-4b3d-af15-eecd17e85626",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.690448Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b54faa86-a560-4b3d-af15-eecd17e85626",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.606314212Z"
  },
  {
    "insertId": "1n1rctwul205fo2l",
    "jsonPayload": {
      "record": {
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "module": "app",
        "function": "live",
        "extra": {
          "on_prem_log": true
        },
        "message": "Incoming request /v1/health/live",
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.690781+00:00",
          "timestamp": 1724258378.690781
        },
        "line": 164,
        "name": "app",
        "elapsed": {
          "repr": "1 day, 9:08:29.181549",
          "seconds": 119309.181549
        },
        "process": {
          "name": "MainProcess",
          "id": 12
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.691085017Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "textPayload": "INFO:     35.191.206.98:60094 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "qi6jlglpsp2qp8ac",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "pr-agent-free-bitbucket-645d9bc84b-s872n",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "pr-agent",
        "container_name": "main"
      }
    },
    "timestamp": "2024-08-21T16:39:38.694931258Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "645d9bc84b",
      "k8s-pod/app": "pr-agent-free-bitbucket",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.326803480Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a5c59b58-0639-4c84-9a28-f56b783a7216",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.721362Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a5c59b58-0639-4c84-9a28-f56b783a7216",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.707017061Z"
  },
  {
    "insertId": "3uqfax5f3k6kssc5",
    "jsonPayload": {
      "record": {
        "name": "app",
        "module": "app",
        "line": 37,
        "message": "Request handled",
        "elapsed": {
          "seconds": 119309.238849,
          "repr": "1 day, 9:08:29.238849"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.748081+00:00",
          "timestamp": 1724258378.748081
        },
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "function": "dispatch",
        "extra": {
          "status_code": 200,
          "request_id": "N/A",
          "on_prem_log": true,
          "source_host": "35.191.205.161",
          "url": "http://10.164.1.4/v1/health/live",
          "method": "GET"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "process": {
          "name": "MainProcess",
          "id": 12
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.748361068Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "insertId": "slvb4sf3q3ia7",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "priority": 500,
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "GH"
        }
      },
      "remoteIp": "154.161.177.136",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 9000
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.10.5",
      "latency": "0.182304s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.748377Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/903f18b2bd52a08cf2e4c695b3d176b8",
    "receiveTimestamp": "2024-08-21T16:39:39.291309585Z",
    "spanId": "fb3874a8cf9ee9f6"
  },
  {
    "insertId": "1bgk3d5ebtxdx",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "priority": 500,
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "outcome": "ACCEPT"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 9000
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "154.161.177.136"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.9.5",
      "latency": "0.223124s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.749204Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/42354f2c5f3e7827a44425181a8015b9",
    "receiveTimestamp": "2024-08-21T16:39:39.779603100Z",
    "spanId": "28456009698da276"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9590e843-c7c5-44c6-89e4-8626763695b8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.749878Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9590e843-c7c5-44c6-89e4-8626763695b8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.418930631Z"
  },
  {
    "insertId": "1w9l9yufkylk2i",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "priority": 9000,
        "outcome": "ACCEPT"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "154.161.177.136",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "configuredAction": "THROTTLE",
        "priority": 500
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.1.4",
      "latency": "0.208508s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:38.750005Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/5e6ed23397c262995debc76ceafccdb6",
    "receiveTimestamp": "2024-08-21T16:39:40.033082987Z",
    "spanId": "d41b2da296e7e0a4"
  },
  {
    "insertId": "1uvd0kkf29ud7w",
    "jsonPayload": {
      "remoteIp": "35.199.90.14",
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://pr-agent-pro.bitbucketapps.codium.ai/",
      "requestSize": "159",
      "status": 200,
      "responseSize": "569",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.199.90.14",
      "serverIp": "10.164.9.10",
      "latency": "0.142637s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-bitbucket-ingre-ejjqimv4",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-bitbucket-ingre-ejjqimv4",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-bitbucket-ingre-ejjqimv4",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-bitbucket-serv-300-db3bfebf",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.752328Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/82d0719a189537a2881d9a37ae82c16b",
    "receiveTimestamp": "2024-08-21T16:39:40.440027393Z",
    "spanId": "d81841e4dbb047f9"
  },
  {
    "insertId": "epaowat3s5djpboz",
    "jsonPayload": {
      "record": {
        "message": "OpenAI Response",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "elapsed": {
          "repr": "1 day, 9:00:00.104180",
          "seconds": 118800.10418
        },
        "extra": {
          "request_id": "8a130126-0fcc-417e-bac8-402ada9b230c",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "openai_request_id": "cmpl-9yiewAar6kx3ZaeerVXUZNrYJi2jr",
          "user": {
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "tier_end_date": 1724734597000,
            "baseUrl": null,
            "name": "HoneyMoon is still aliwe",
            "allowed": true,
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "aud": "codium-dev-360812",
            "iat": 1724257455,
            "organization_id": null,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "email": "anjasajfullin@gmail.com",
            "firebase": {
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              },
              "sign_in_provider": "custom"
            },
            "tier_level": 10,
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "email_verified": false,
            "exp": 1724261055,
            "codiumate": null,
            "auth_time": 1724257455,
            "optout": false
          },
          "url_path": "/v2/code/completion",
          "openai_response": {
            "id": "cmpl-9yiewAar6kx3ZaeerVXUZNrYJi2jr",
            "model": "gpt-3.5-turbo-instruct",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='ion={[0, 0, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}', logprobs=None)"
            ],
            "usage": {
              "total_tokens": 2446,
              "prompt_tokens": 2419,
              "completion_tokens": 27
            },
            "object": "text_completion",
            "created": 1724258378
          },
          "model": "gpt-3.5-turbo-instruct",
          "completion": "ion={[0, 0, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rota"
        },
        "module": "litellm_infer_engine",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "line": 131,
        "time": {
          "timestamp": 1724258378.754727,
          "repr": "2024-08-21 16:39:38.754727+00:00"
        },
        "exception": null,
        "name": "ai.litellm.litellm_infer_engine",
        "function": "generate"
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.755163344Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "ei47m32ipg10vokn",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258378.7802,
          "repr": "2024-08-21 16:39:38.780200+00:00"
        },
        "line": 1112,
        "message": "Prompts and results v2",
        "module": "inference_utils",
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "extra": {
          "request_id": "8a130126-0fcc-417e-bac8-402ada9b230c",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "results": {
            "inference_steps": {
              "step_01_CodeCompletion": {
                "02_completion": "ion={[0, 0, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:38.015709",
                "04_end_time": "2024-08-21 16:39:38.780134",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rota"
              }
            },
            "url_path": "/v2/code/completion",
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"ion={[0, 0, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "user_input": {
              "user_context": [],
              "extra_instructions": "",
              "repo_context": [],
              "user_data": "user_id=None installation_id='15788762-fe0e-4403-bf86-bc88815499a2' editor_version='1.82.2' editor_sub_version=None extension_version='0.9.13' os_platform='linux' os_version='v18.15.0' editor_type='vscode'",
              "relative_file_path": "src/components/spacemen/spaceman.jsx",
              "configuration": {},
              "file_diff_content": "",
              "remote_context": [],
              "context": [],
              "context_mode": "pre_pr",
              "max_repo_context": 5,
              "doc_context_suffix": ">\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
              "is_file_diff": false,
              "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rota",
              "is_multiline": false,
              "language": "javascriptreact",
              "max_remote_context": 5,
              "reference_snippet_messages": [
                {
                  "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman",
                  "type": "CodiummateImport",
                  "file_name": "Imports and implementations used in this file:"
                },
                {
                  "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js",
                  "file_name": "Project directory structure:",
                  "type": "DirectoryStructure"
                },
                {
                  "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                  "type": "File",
                  "file_name": "src/components/stagerbar/stagerbar.jsx"
                },
                {
                  "file_name": "src/store/reducers/todoById/todoByIdSlice.js",
                  "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;",
                  "type": "File"
                },
                {
                  "file_name": "src/pages/main/main.jsx",
                  "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>",
                  "type": "File"
                },
                {
                  "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}",
                  "file_name": "tailwind.config.js",
                  "type": "File"
                }
              ],
              "task": ""
            }
          },
          "url_path": "/v2/code/completion",
          "user": {
            "auth_time": 1724257455,
            "tier_end_date": 1724734597000,
            "exp": 1724261055,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "optout": false,
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "name": "HoneyMoon is still aliwe",
            "email_verified": false,
            "email": "anjasajfullin@gmail.com",
            "baseUrl": null,
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "organization_id": null,
            "iat": 1724257455,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "firebase": {
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              },
              "sign_in_provider": "custom"
            },
            "tier_level": 10,
            "aud": "codium-dev-360812",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "codiumate": null,
            "allowed": true
          }
        },
        "function": "process",
        "level": {
          "name": "DEBUG",
          "no": 10,
          "icon": "🐞"
        },
        "elapsed": {
          "repr": "1 day, 9:00:00.129653",
          "seconds": 118800.129653
        },
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "exception": null,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "name": "copilot_proxy.utils.inference_utils"
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.780743787Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "djlpinxfljvceen0",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "dispatch",
        "line": 37,
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "elapsed": {
          "repr": "1 day, 9:00:00.148024",
          "seconds": 118800.148024
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "name": "app",
        "time": {
          "timestamp": 1724258378.798571,
          "repr": "2024-08-21 16:39:38.798571+00:00"
        },
        "message": "Request handled",
        "extra": {
          "method": "POST",
          "url": "https://api.codium.ai/v2/code/completion",
          "on_prem_log": true,
          "request_id": "8a130126-0fcc-417e-bac8-402ada9b230c",
          "source_host": "62.89.209.162",
          "status_code": 200
        },
        "module": "app",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.798827505Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6dd2279b-7eb6-4815-918c-c1353af89a1b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.800497Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6dd2279b-7eb6-4815-918c-c1353af89a1b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.122259033Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "14113a01-f884-4bbc-99bb-536ef1d41537",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.803634Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "14113a01-f884-4bbc-99bb-536ef1d41537",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.619949840Z"
  },
  {
    "insertId": "ku2w2qfhp113c",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      },
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "154.161.177.136"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.15.3",
      "latency": "0.227143s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:38.814363Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/82acd41bf2b1986c291bde7f385580cb",
    "receiveTimestamp": "2024-08-21T16:39:40.039571519Z",
    "spanId": "f0680ceeca96ea58"
  },
  {
    "insertId": "n6sr1b2lj1uiawxu",
    "jsonPayload": {
      "record": {
        "line": 156,
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "exception": null,
        "extra": {},
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.auth.core",
        "function": "verify_user_token",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132437036222144
        },
        "elapsed": {
          "seconds": 118800.282633,
          "repr": "1 day, 9:00:00.282633"
        },
        "module": "core",
        "time": {
          "repr": "2024-08-21 16:39:38.814392+00:00",
          "timestamp": 1724258378.814392
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        }
      },
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.814612942Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "a3kkp1juz3555dbo",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "elapsed": {
          "seconds": 118800.28316,
          "repr": "1 day, 9:00:00.283160"
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "message": "Incoming request to get feature flags",
        "name": "copilot_proxy.api.users.v2",
        "line": 60,
        "time": {
          "repr": "2024-08-21 16:39:38.814919+00:00",
          "timestamp": 1724258378.814919
        },
        "function": "get_features",
        "module": "v2",
        "extra": {
          "user": {
            "auth_time": 1724238906,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "name": "Emmanuel Kafui Anthonio",
            "codiumate": null,
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "email_verified": false,
            "tier_level": 1,
            "firebase": {
              "identities": {
                "github.com": [
                  "64821369"
                ],
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "allowed": true,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "email": "emmanuelanthonio62@gmail.com",
            "aud": "codium-dev-360812",
            "exp": 1724261214,
            "iat": 1724257614
          },
          "request_id": "47ef8d7e-ee8a-44de-9466-a72dd2aa14b3",
          "tier_level": 1
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.815127253Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "afdf1a43-2b93-417d-b9b9-279fc9beec62",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.816882Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "afdf1a43-2b93-417d-b9b9-279fc9beec62",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.331959941Z"
  },
  {
    "insertId": "ambt5l5x1opoxcf7",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "exception": null,
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:38.817686+00:00",
          "timestamp": 1724258378.817686
        },
        "line": 156,
        "function": "verify_user_token",
        "module": "core",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "elapsed": {
          "repr": "1 day, 9:08:28.613441",
          "seconds": 119308.613441
        },
        "extra": {},
        "name": "copilot_proxy.auth.core",
        "thread": {
          "id": 136597458638528,
          "name": "AnyIO worker thread"
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.817971538Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "insertId": "aingxhawwvh9lky1",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "function": "get_features",
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "line": 60,
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "module": "v2",
        "extra": {
          "request_id": "5d8fdb50-d767-4912-9aef-42a70553ba75",
          "tier_level": 1,
          "user": {
            "email": "emmanuelanthonio62@gmail.com",
            "allowed": true,
            "aud": "codium-dev-360812",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "email_verified": false,
            "auth_time": 1724238906,
            "exp": 1724261214,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "tier_level": 1,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "iat": 1724257614,
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "64821369"
                ],
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ]
              }
            },
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "name": "Emmanuel Kafui Anthonio",
            "codiumate": null
          }
        },
        "name": "copilot_proxy.api.users.v2",
        "time": {
          "repr": "2024-08-21 16:39:38.818190+00:00",
          "timestamp": 1724258378.81819
        },
        "elapsed": {
          "seconds": 119308.613945,
          "repr": "1 day, 9:08:28.613945"
        },
        "exception": null,
        "message": "Incoming request to get feature flags"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.818422992Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "06200452-8ba9-4f1f-9d6f-62de6e00f433",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.826289Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "06200452-8ba9-4f1f-9d6f-62de6e00f433",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.210210348Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bad11f5d-7cfc-4d9a-a3b6-867d1bc8ea72",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.826988Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bad11f5d-7cfc-4d9a-a3b6-867d1bc8ea72",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.120503665Z"
  },
  {
    "insertId": "9prboxo4z8kpxr5g",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core",
        "module": "core",
        "time": {
          "timestamp": 1724258378.831684,
          "repr": "2024-08-21 16:39:38.831684+00:00"
        },
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "process": {
          "id": 19,
          "name": "MainProcess"
        },
        "thread": {
          "id": 137083796313792,
          "name": "AnyIO worker thread"
        },
        "extra": {},
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "elapsed": {
          "seconds": 118531.117627,
          "repr": "1 day, 8:55:31.117627"
        },
        "line": 156,
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.831978655Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "insertId": "yapbaht5c25qzj0v",
    "jsonPayload": {
      "record": {
        "extra": {
          "tier_level": 1,
          "user": {
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "64821369"
                ],
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ]
              }
            },
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "codiumate": null,
            "iat": 1724257614,
            "auth_time": 1724238906,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "allowed": true,
            "aud": "codium-dev-360812",
            "email": "emmanuelanthonio62@gmail.com",
            "name": "Emmanuel Kafui Anthonio",
            "tier_level": 1,
            "email_verified": false,
            "exp": 1724261214,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503"
          },
          "request_id": "0bcd0b6c-38cd-4f87-92dc-fa283828e491"
        },
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "name": "copilot_proxy.api.users.v2",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "process": {
          "id": 19,
          "name": "MainProcess"
        },
        "message": "Incoming request to get feature flags",
        "line": 60,
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:38.832281+00:00",
          "timestamp": 1724258378.832281
        },
        "module": "v2",
        "elapsed": {
          "repr": "1 day, 8:55:31.118224",
          "seconds": 118531.118224
        },
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "function": "get_features"
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.832517532Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.023060886Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b80e8077-adf3-4c45-b80d-c0134e6b25ad",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.840368Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b80e8077-adf3-4c45-b80d-c0134e6b25ad",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.312703519Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "467b4f4b-f69e-45cf-a017-00ee0af4c915",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.861241Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "467b4f4b-f69e-45cf-a017-00ee0af4c915",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.207487856Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--cfae953c-hgxr"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "extra": {
            "authentication.kubernetes.io/pod-name": [
              "prometheus-kube-prometheus-stack-prometheus-0"
            ],
            "authentication.kubernetes.io/pod-uid": [
              "e141fd7c-e9cc-4309-91e3-d120163a1982"
            ]
          },
          "groups": [
            "system:serviceaccounts",
            "system:serviceaccounts:prometheus",
            "system:authenticated"
          ],
          "resourceAttributes": {
            "name": "gke-production-clust-production-pool--cfae953c-hgxr",
            "resource": "nodes",
            "subresource": "metrics",
            "verb": "get",
            "version": "v1"
          },
          "uid": "09a5e061-86b4-415d-8952-4647b810bd58",
          "user": "system:serviceaccount:prometheus:kube-prometheus-stack-prometheus"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:extra": {
                    ".": {},
                    "f:authentication.kubernetes.io/pod-name": {},
                    "f:authentication.kubernetes.io/pod-uid": {}
                  },
                  "f:groups": {},
                  "f:resourceAttributes": {
                    ".": {},
                    "f:name": {},
                    "f:resource": {},
                    "f:subresource": {},
                    "f:verb": {},
                    "f:version": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kubelet",
              "operation": "Update",
              "time": "2024-08-21T16:39:38Z"
            }
          ]
        },
        "spec": {
          "extra": {
            "authentication.kubernetes.io/pod-name": [
              "prometheus-kube-prometheus-stack-prometheus-0"
            ],
            "authentication.kubernetes.io/pod-uid": [
              "e141fd7c-e9cc-4309-91e3-d120163a1982"
            ]
          },
          "groups": [
            "system:serviceaccounts",
            "system:serviceaccounts:prometheus",
            "system:authenticated"
          ],
          "resourceAttributes": {
            "name": "gke-production-clust-production-pool--cfae953c-hgxr",
            "resource": "nodes",
            "subresource": "metrics",
            "verb": "get",
            "version": "v1"
          },
          "uid": "09a5e061-86b4-415d-8952-4647b810bd58",
          "user": "system:serviceaccount:prometheus:kube-prometheus-stack-prometheus"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"kube-prometheus-stack-prometheus\" of ClusterRole \"kube-prometheus-stack-prometheus\" to ServiceAccount \"kube-prometheus-stack-prometheus/prometheus\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1153b6e4-9e15-4542-8fdd-0874b6bad2e1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.861786Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1153b6e4-9e15-4542-8fdd-0874b6bad2e1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.707017061Z"
  },
  {
    "insertId": "f92p65vnj23p1z6l",
    "jsonPayload": {
      "record": {
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "function": "dispatch",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "timestamp": 1724258378.863185,
          "repr": "2024-08-21 16:39:38.863185+00:00"
        },
        "module": "app",
        "message": "Request handled",
        "extra": {
          "request_id": "47ef8d7e-ee8a-44de-9466-a72dd2aa14b3",
          "method": "GET",
          "url": "https://api.codium.ai/v2/users/features",
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "154.161.177.136"
        },
        "elapsed": {
          "repr": "1 day, 9:00:00.331426",
          "seconds": 118800.331426
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "name": "app",
        "exception": null,
        "line": 37,
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.863446272Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "6fhodfn6hoyxm31d",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "time": {
          "timestamp": 1724258378.865695,
          "repr": "2024-08-21 16:39:38.865695+00:00"
        },
        "extra": {
          "status_code": 200,
          "method": "GET",
          "request_id": "5d8fdb50-d767-4912-9aef-42a70553ba75",
          "source_host": "154.161.177.136",
          "url": "https://api.codium.ai/v2/users/features",
          "on_prem_log": true
        },
        "line": 37,
        "elapsed": {
          "seconds": 119308.66145,
          "repr": "1 day, 9:08:28.661450"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "module": "app",
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "function": "dispatch"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.866029306Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c032d90b-0d26-4bb8-b6dd-94d37ea619d5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.868715Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c032d90b-0d26-4bb8-b6dd-94d37ea619d5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.120503665Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cf6f1349-7a40-4f69-9636-82fed9f60f31",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.873051Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cf6f1349-7a40-4f69-9636-82fed9f60f31",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.624613175Z"
  },
  {
    "insertId": "ijrupo7cz24xdgbo",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "extra": {
          "on_prem_log": true
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app",
        "line": 164,
        "time": {
          "repr": "2024-08-21 16:39:38.878280+00:00",
          "timestamp": 1724258378.87828
        },
        "name": "app",
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "elapsed": {
          "repr": "1 day, 8:53:45.589741",
          "seconds": 118425.589741
        },
        "thread": {
          "name": "MainThread",
          "id": 136300718099328
        },
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "message": "Incoming request /v1/health/live",
        "function": "live"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-69d7c8ff44-x9fqh",
        "location": "us-central1",
        "namespace_name": "production-jb"
      }
    },
    "timestamp": "2024-08-21T16:39:38.878536539Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.318300471Z"
  },
  {
    "insertId": "wldhnoazbbtyrxw6",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1 day, 8:52:43.854085",
          "seconds": 118363.854085
        },
        "line": 156,
        "exception": null,
        "module": "core",
        "name": "copilot_proxy.auth.core",
        "time": {
          "repr": "2024-08-21 16:39:38.880114+00:00",
          "timestamp": 1724258378.880114
        },
        "function": "verify_user_token",
        "extra": {},
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134623895987904
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:38.880359230Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "insertId": "fw4bhdnmeoqmjpgh",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:38.880651+00:00",
          "timestamp": 1724258378.880651
        },
        "line": 60,
        "elapsed": {
          "repr": "1 day, 8:52:43.854622",
          "seconds": 118363.854622
        },
        "extra": {
          "user": {
            "email_verified": false,
            "aud": "codium-dev-360812",
            "allowed": true,
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "iat": 1724257614,
            "tier_level": 1,
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "exp": 1724261214,
            "auth_time": 1724238906,
            "name": "Emmanuel Kafui Anthonio",
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4",
            "firebase": {
              "identities": {
                "github.com": [
                  "64821369"
                ],
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email": "emmanuelanthonio62@gmail.com",
            "uid": "S5i5AB8pWgekUoksurv6eOC03503"
          },
          "tier_level": 1,
          "request_id": "d8740570-e5d7-45a4-ad83-b26a973a3efe"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "function": "get_features",
        "message": "Incoming request to get feature flags",
        "process": {
          "id": 11,
          "name": "MainProcess"
        },
        "exception": null,
        "name": "copilot_proxy.api.users.v2",
        "module": "v2",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        }
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:38.880880385Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9bfcd757-9efc-4ee8-800a-36b7b11d7a70",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.883581Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9bfcd757-9efc-4ee8-800a-36b7b11d7a70",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.615255167Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "47130807-b196-4162-98da-4e65b1267e84",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.885515Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "47130807-b196-4162-98da-4e65b1267e84",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.405064421Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e4360327-02c5-4486-a94b-0b2b0da5df6e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.886856Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e4360327-02c5-4486-a94b-0b2b0da5df6e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.817688Z"
  },
  {
    "insertId": "c9tj79rbz964wysh",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "extra": {
          "method": "GET",
          "on_prem_log": true,
          "request_id": "0bcd0b6c-38cd-4f87-92dc-fa283828e491",
          "url": "https://api.codium.ai/v2/users/features",
          "source_host": "154.161.177.136",
          "status_code": 200
        },
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:38.886567+00:00",
          "timestamp": 1724258378.886567
        },
        "elapsed": {
          "repr": "1 day, 8:55:31.172510",
          "seconds": 118531.17251
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "line": 37,
        "function": "dispatch",
        "name": "app",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 19
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:38.886861693Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "058f5534-f5dc-4f11-aa4b-ff73009ce04a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.890440Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "058f5534-f5dc-4f11-aa4b-ff73009ce04a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.511246175Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:35138 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "wv2mkguvujaj5clp",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production-jb",
        "pod_name": "auth-proxy-69d7c8ff44-x9fqh",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:38.901361710Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.318300471Z"
  },
  {
    "insertId": "39he4o1j8ewbude6",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:38.907102+00:00",
          "timestamp": 1724258378.907102
        },
        "extra": {
          "url": "http://10.164.10.9:5432/v1/health/live",
          "on_prem_log": true,
          "request_id": "N/A",
          "method": "GET",
          "status_code": 200,
          "source_host": "10.164.10.1"
        },
        "function": "dispatch",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "elapsed": {
          "repr": "1 day, 8:53:45.618563",
          "seconds": 118425.618563
        },
        "message": "Request handled",
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "module": "app",
        "exception": null,
        "name": "app",
        "thread": {
          "name": "MainThread",
          "id": 136300718099328
        },
        "line": 37
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production-jb",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-69d7c8ff44-x9fqh"
      }
    },
    "timestamp": "2024-08-21T16:39:38.907346472Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.318300471Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f650e511-4aa0-422a-b466-2e02ed4c94b4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:38.922465Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f650e511-4aa0-422a-b466-2e02ed4c94b4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.309750426Z"
  },
  {
    "insertId": "p9py2ouy7jppgnt6",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 11
        },
        "line": 37,
        "module": "app",
        "elapsed": {
          "repr": "1 day, 8:52:43.912179",
          "seconds": 118363.912179
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "name": "app",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "exception": null,
        "extra": {
          "url": "https://api.codium.ai/v2/users/features",
          "status_code": 200,
          "source_host": "154.161.177.136",
          "request_id": "d8740570-e5d7-45a4-ad83-b26a973a3efe",
          "method": "GET",
          "on_prem_log": true
        },
        "time": {
          "timestamp": 1724258378.938208,
          "repr": "2024-08-21 16:39:38.938208+00:00"
        },
        "message": "Request handled",
        "function": "dispatch"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.938469957Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "946985f6-b034-4ab8-ad88-58ec4ecf7f4c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.972906Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "946985f6-b034-4ab8-ad88-58ec4ecf7f4c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.770999540Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0afc43d7-d2af-4750-a148-0ea1498b92ae",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.976992Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0afc43d7-d2af-4750-a148-0ea1498b92ae",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.015161356Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5b90b429-7318-4d64-b0f8-e2a56ce909c6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:38.987904Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5b90b429-7318-4d64-b0f8-e2a56ce909c6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.347277804Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:konnectivity-server"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "proxy-server/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e04d7ee1-3007-4550-aee8-3029739af744",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.001664Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:konnectivity-server\" of ClusterRole \"system:auth-delegator\" to User \"system:konnectivity-server\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e04d7ee1-3007-4550-aee8-3029739af744",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.906703563Z"
  },
  {
    "insertId": "u1lipkwcdwl5ncn6",
    "jsonPayload": {
      "pid": "1",
      "message": "\"Connect to server\" serverID=\"30ed7496-6024-4689-aa26-1012fea7cc77\""
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "container_name": "konnectivity-agent",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "konnectivity-agent-5668b6b-kmnwl"
      }
    },
    "timestamp": "2024-08-21T16:39:39.003032523Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5668b6b",
      "k8s-pod/k8s-app": "konnectivity-agent"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "client.go",
      "line": "210"
    },
    "receiveTimestamp": "2024-08-21T16:39:43.862847420Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--cfae953c-uhw3"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.secrets.watch",
          "resource": "core/v1/namespaces/argo-cd/secrets/argocd-repo-server-tls"
        }
      ],
      "methodName": "io.k8s.core.v1.secrets.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/argo-cd/secrets/argocd-repo-server-tls",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "42252c75-2284-4a51-a193-0b130258efaa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.011863Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "42252c75-2284-4a51-a193-0b130258efaa",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.616251829Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:konnectivity-agent-cpha"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/konnectivity-agent-autoscaler-config"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "cluster-proportional-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/konnectivity-agent-autoscaler-config",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d98da089-c339-41bd-b0e8-385c4a89524b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.019981Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"konnectivity-agent-cpha/kube-system\" of Role \"konnectivity-agent-cpha\" to ServiceAccount \"konnectivity-agent-cpha/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d98da089-c339-41bd-b0e8-385c4a89524b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.514225245Z"
  },
  {
    "insertId": "5l7c4c5xnqry69tc",
    "jsonPayload": {
      "record": {
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "elapsed": {
          "repr": "3 days, 6:30:16.489000",
          "seconds": 282616.489
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "function": "live",
        "exception": null,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "message": "Incoming request /v1/health/live",
        "thread": {
          "id": 137162905807744,
          "name": "MainThread"
        },
        "extra": {
          "on_prem_log": true
        },
        "line": 164,
        "name": "app",
        "time": {
          "timestamp": 1724258379.025496,
          "repr": "2024-08-21 16:39:39.025496+00:00"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-paychex",
        "container_name": "proxy",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-6dc4b6f7cb-sm9vg",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.025823366Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-ejax"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.091745758Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:konnectivity-agent-cpha"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.scale.get",
          "resource": "apps/v1/namespaces/kube-system/deployments/konnectivity-agent/scale"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.scale.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "cluster-proportional-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/namespaces/kube-system/deployments/konnectivity-agent/scale",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a824fb01-0aa3-494c-9570-e15d0861d84a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.026169Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"konnectivity-agent-cpha/kube-system\" of Role \"konnectivity-agent-cpha\" to ServiceAccount \"konnectivity-agent-cpha/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a824fb01-0aa3-494c-9570-e15d0861d84a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.611753176Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/kube-system/endpoints/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/endpoints/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fa824ea4-ab0d-447b-b3f0-0efef946f0b5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.031743Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fa824ea4-ab0d-447b-b3f0-0efef946f0b5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.061237017Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2d041610-0a86-45a8-b24b-2c1ab8ebf9e0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:39.035481Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2d041610-0a86-45a8-b24b-2c1ab8ebf9e0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.120503665Z"
  },
  {
    "insertId": "1xnhcayf1y0fyr",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "35.199.77.186",
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://free.github.pr-agent.codium.ai/",
      "requestSize": "150",
      "status": 200,
      "responseSize": "136",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.199.77.186",
      "serverIp": "10.164.16.11",
      "latency": "0.143299s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-github-ingress-8mvlactw",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-github-servic-300-2ce4c0b8",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.040959Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/561125559bfcb399d8ca803512d18071",
    "receiveTimestamp": "2024-08-21T16:39:40.869308400Z",
    "spanId": "f7adca8ce0635b0f"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dce26a83-79f4-4e10-8dcd-96f8af4cfd60",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:39.045258Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dce26a83-79f4-4e10-8dcd-96f8af4cfd60",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.323810884Z"
  },
  {
    "insertId": "hz6mdbf84xvnz9cr",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "thread": {
          "id": 137162905807744,
          "name": "MainThread"
        },
        "exception": null,
        "module": "app",
        "time": {
          "timestamp": 1724258379.054351,
          "repr": "2024-08-21 16:39:39.054351+00:00"
        },
        "name": "app",
        "extra": {
          "method": "GET",
          "url": "http://10.164.3.6:5432/v1/health/live",
          "source_host": "10.164.3.1",
          "request_id": "N/A",
          "on_prem_log": true,
          "status_code": 200
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "message": "Request handled",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "line": 37,
        "function": "dispatch",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "elapsed": {
          "repr": "3 days, 6:30:16.517855",
          "seconds": 282616.517855
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production-paychex",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-6dc4b6f7cb-sm9vg",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.054664949Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-ejax"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.091745758Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9f722a36-05bc-4f47-aa85-2b7067049355",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.056166Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9f722a36-05bc-4f47-aa85-2b7067049355",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.228134592Z"
  },
  {
    "insertId": "14it8q8f2l1zjk",
    "jsonPayload": {
      "remoteIp": "95.231.177.2",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "priority": 15000,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IT"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1502",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "95.231.177.2",
      "serverIp": "10.164.10.5",
      "latency": "0.159499s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:39.067992Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/948b319898665dbbddc16913d04dac6a",
    "receiveTimestamp": "2024-08-21T16:39:39.697659744Z",
    "spanId": "acb233558aaa23d2"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e97758cb-82fa-4864-8316-db1fc1ad1182",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.069091Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e97758cb-82fa-4864-8316-db1fc1ad1182",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.925665629Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:57642 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "e3ukf1bd9jvpeukf",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.100357750Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bb903cb6-c6f8-4848-be26-df59b2e9fcb3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.100906Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bb903cb6-c6f8-4848-be26-df59b2e9fcb3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.716380645Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "37069eec-d574-46f4-92ba-0cda784e910b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.104047Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "37069eec-d574-46f4-92ba-0cda784e910b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.802205150Z"
  },
  {
    "insertId": "jiy6sjvzc9rp8v8k",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "message": "Incoming request /v1/health/live",
        "time": {
          "repr": "2024-08-21 16:39:39.109933+00:00",
          "timestamp": 1724258379.109933
        },
        "line": 164,
        "name": "app",
        "extra": {
          "on_prem_log": true
        },
        "elapsed": {
          "repr": "1 day, 8:52:43.931991",
          "seconds": 118363.931991
        },
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "exception": null,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "module": "app",
        "function": "live"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.110239349Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "10a9f124-3ede-4637-81a3-d78aa38d59b8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.112013Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "10a9f124-3ede-4637-81a3-d78aa38d59b8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.707029372Z"
  },
  {
    "insertId": "ut64n7nx4tuuw1uy",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "process": {
          "name": "MainProcess",
          "id": 234
        },
        "time": {
          "timestamp": 1724258379.113938,
          "repr": "2024-08-21 16:39:39.113938+00:00"
        },
        "line": 804,
        "exception": null,
        "function": "dispatch",
        "file": {
          "path": "/app/pr_agent/servers/github_app.py",
          "name": "github_app.py"
        },
        "name": "pr_agent.servers.github_app",
        "elapsed": {
          "seconds": 5268.729183,
          "repr": "1:27:48.729183"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "thread": {
          "name": "MainThread",
          "id": 134575525518208
        },
        "module": "github_app",
        "extra": {
          "url": "https://free.github.pr-agent.codium.ai/",
          "on_prem_log": true,
          "method": "GET",
          "status_code": 200,
          "source_host": "35.199.77.186"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "pr-agent",
        "pod_name": "pr-agent-free-github-57b9b6c95f-9g8mt",
        "location": "us-central1",
        "container_name": "main",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.114228433Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "pr-agent-free-github",
      "k8s-pod/pod-template-hash": "57b9b6c95f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.030200028Z"
  },
  {
    "insertId": "8cjgfvf30l0ou",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "enforcedSecurityPolicy": {
        "priority": 1000,
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "177.43.41.74",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd",
        "remoteIpInfo": {
          "regionCode": "BR"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://proxy.codium.ai/v1/auth/create_custom_token",
      "requestSize": "1591",
      "status": 200,
      "responseSize": "1189",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.43.41.74",
      "serverIp": "10.164.9.5",
      "latency": "0.172804s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.126856Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/ab4bb33a0650bbc8458ce23e6f2deb87",
    "receiveTimestamp": "2024-08-21T16:39:40.548996936Z",
    "spanId": "e10122ce6778aa41"
  },
  {
    "insertId": "7y8xzqoun9x9zvgy",
    "jsonPayload": {
      "record": {
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:00:00.623904",
          "seconds": 118800.623904
        },
        "module": "core",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "message": "User minnoit@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "function": "verify_user_token",
        "line": 156,
        "extra": {},
        "process": {
          "id": 22,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.auth.core",
        "time": {
          "timestamp": 1724258379.136859,
          "repr": "2024-08-21 16:39:39.136859+00:00"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "thread": {
          "id": 132436180592320,
          "name": "AnyIO worker thread"
        }
      },
      "text": "User minnoit@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.137113480Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "jw2j2w1wceu07cjl",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "name": "app",
        "line": 37,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "function": "dispatch",
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:39.137417+00:00",
          "timestamp": 1724258379.137417
        },
        "elapsed": {
          "repr": "1 day, 9:00:00.624462",
          "seconds": 118800.624462
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "module": "app",
        "extra": {
          "source_host": "95.231.177.2",
          "on_prem_log": true,
          "status_code": 200,
          "method": "GET",
          "request_id": "f3585d25-2c27-4230-a75a-2934e75717d8",
          "url": "https://api.codium.ai/v2/rag/settings"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.137622565Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "q3li6g0atm9gffje",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "extra": {
          "method": "GET",
          "source_host": "35.191.206.100",
          "on_prem_log": true,
          "request_id": "N/A",
          "status_code": 200,
          "url": "http://10.164.15.3/v1/health/live"
        },
        "function": "dispatch",
        "name": "app",
        "elapsed": {
          "seconds": 118363.961104,
          "repr": "1 day, 8:52:43.961104"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "exception": null,
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "message": "Request handled",
        "module": "app",
        "time": {
          "timestamp": 1724258379.139046,
          "repr": "2024-08-21 16:39:39.139046+00:00"
        },
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "line": 37
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.139344794Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:39.308728272Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:kube-dns-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/kube-dns-autoscaler"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "cluster-proportional-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/kube-dns-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "934c7494-999a-4f9a-882c-0b5ad76e6f19",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.196803Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-dns-autoscaler\" of ClusterRole \"system:kube-dns-autoscaler\" to ServiceAccount \"kube-dns-autoscaler/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "934c7494-999a-4f9a-882c-0b5ad76e6f19",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.901823634Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:kube-dns-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.scale.get",
          "resource": "apps/v1/namespaces/kube-system/deployments/kube-dns/scale"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.scale.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "cluster-proportional-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/namespaces/kube-system/deployments/kube-dns/scale",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1f3bdb82-62ce-45f6-b020-64ece3629c00",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.202259Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-dns-autoscaler\" of ClusterRole \"system:kube-dns-autoscaler\" to ServiceAccount \"kube-dns-autoscaler/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1f3bdb82-62ce-45f6-b020-64ece3629c00",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.215122231Z"
  },
  {
    "insertId": "2b4lsjfvvg6jnzct",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "time": {
          "repr": "2024-08-21 16:39:39.205368+00:00",
          "timestamp": 1724258379.205368
        },
        "extra": {
          "request_id": "N/A",
          "on_prem_log": true,
          "url": "https://proxy.codium.ai/v1/auth/create_custom_token",
          "source_host": "177.43.41.74",
          "status_code": 200,
          "method": "POST"
        },
        "function": "dispatch",
        "elapsed": {
          "repr": "1 day, 8:55:31.525373",
          "seconds": 118531.525373
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "exception": null,
        "module": "app",
        "line": 37
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.205642744Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e7a8240c-662e-42ec-be7c-8fc0d120001f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.210492Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e7a8240c-662e-42ec-be7c-8fc0d120001f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.709288441Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0c721084-71e7-4c2a-8c42-6f56cd222633",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.213727Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0c721084-71e7-4c2a-8c42-6f56cd222633",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:39.906703563Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "838b96c8-142e-44bd-a1db-0b0a0d7a1cbe",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.228079Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "838b96c8-142e-44bd-a1db-0b0a0d7a1cbe",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.514225245Z"
  },
  {
    "insertId": "lq3v68sal99yyvek",
    "jsonPayload": {
      "message": "successfully renewed lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "filestore-node-78t9l",
        "namespace_name": "kube-system",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "gcp-filestore-driver"
      }
    },
    "timestamp": "2024-08-21T16:39:39.235374657Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "278"
    },
    "receiveTimestamp": "2024-08-21T16:39:42.815571204Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "grpc-go/1.61.0-dev,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:39.276597695Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "name": "projects/67590289846",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "5b925of34tg2a",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:39.270706705Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:39.614166810Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.37.34",
        "callerSuppliedUserAgent": "grpc-go/1.61.0-dev,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:39.279213877Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/67590289846"
      }
    },
    "insertId": "ujw3jpf34u90x",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:39.273148618Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:39.410777843Z"
  },
  {
    "insertId": "b3wiwggw2sdtnma7",
    "jsonPayload": {
      "text": "OpenAI returned a truncated response. Consider increasing the max_tokens.\n",
      "record": {
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "time": {
          "repr": "2024-08-21 16:39:39.288038+00:00",
          "timestamp": 1724258379.288038
        },
        "process": {
          "id": 20,
          "name": "MainProcess"
        },
        "extra": {
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "request_id": "48110801-654b-4c9c-9c1c-627fa79ff161",
          "data": {
            "suffix": null,
            "metadata": {
              "run_name": "CodeCompletion",
              "model_group": "code-completion",
              "api_base": null,
              "model_info": {
                "id": "6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7",
                "db_model": false
              },
              "deployment": "gpt-3.5-turbo-instruct",
              "caching_groups": null,
              "project_name": "code/completion",
              "tags": [
                "48110801-654b-4c9c-9c1c-627fa79ff161"
              ],
              "hidden_params": "HiddenParams(original_response='{\"id\": \"cmpl-9yiewIqocFXxCdZ64LWsVt3Q9qARQ\", \"choices\": [{\"finish_reason\": \"length\", \"index\": 0, \"logprobs\": null, \"text\": \"personaid]] }}</h3>\\\\n    <table class=\\\\\"table table-bordered\\\\\">\\\\n        <thead>\\\\n            <tr>\\\\n                <th>Modelo Nome</th>\\\\n                    <th>Modelo ID</th>\\\\n                    <th>Quantidade</th>\\\\n                </tr>\\\\n            </thead>\\\\n            <tbody>\\\\n                @if(isset($devices[$deposit->holder\"}], \"created\": 1724258378, \"model\": \"gpt-3.5-turbo-instruct\", \"object\": \"text_completion\", \"system_fingerprint\": null, \"usage\": {\"completion_tokens\": 75, \"prompt_tokens\": 3610, \"total_tokens\": 3685}}', model_id='6c6cec7504e40a01b5b1cca0e17e3656513d5befca1e6e1ec9cac02afa3738e7', api_base=None, litellm_call_id='46653e8f-fcf7-457b-96f0-777afd108f7a', optional_params={'temperature': 0.1, 'top_p': 0.9, 'n': 1, 'stop': ['\\n\\n'], 'max_tokens': 75, 'presence_penalty': 0, 'frequency_penalty': 0, 'max_retries': 0, 'extra_body': {}}, response_cost=0.0055650000000000005)"
            },
            "n": 1,
            "stop": [
              "\n\n"
            ],
            "top_p": 0.9,
            "frequency_penalty": 0,
            "temperature": 0.1,
            "max_tokens": 75,
            "presence_penalty": 0
          },
          "user": {
            "exp": 1724261737,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_end_date": 1725287318000,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_level": 10,
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email": "lf0448504@gmail.com",
            "organization_id": null,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "codiumate": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "baseUrl": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "name": "Luiz F",
            "iat": 1724258137,
            "aud": "codium-dev-360812",
            "optout": false,
            "email_verified": true,
            "allowed": true,
            "auth_time": 1724161599
          },
          "url_path": "/v2/code/completion"
        },
        "function": "generate",
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "exception": null,
        "level": {
          "no": 30,
          "icon": "⚠️",
          "name": "WARNING"
        },
        "module": "litellm_infer_engine",
        "name": "ai.litellm.litellm_infer_engine",
        "line": 124,
        "message": "OpenAI returned a truncated response. Consider increasing the max_tokens.",
        "elapsed": {
          "seconds": 118363.668414,
          "repr": "1 day, 8:52:43.668414"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.288442449Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "43979b25-2e7e-4e44-89c8-0d07779129e6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.290314Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "43979b25-2e7e-4e44-89c8-0d07779129e6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.407923402Z"
  },
  {
    "insertId": "kuk89pjdeqg9ok8n",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "function": "generate",
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "extra": {
          "model": "gpt-3.5-turbo-instruct",
          "openai_response": {
            "object": "text_completion",
            "id": "cmpl-9yiewIqocFXxCdZ64LWsVt3Q9qARQ",
            "usage": {
              "completion_tokens": 75,
              "prompt_tokens": 3610,
              "total_tokens": 3685
            },
            "choices": [
              "TextChoices(finish_reason='length', index=0, text='personaid]] }}</h3>\\n    <table class=\"table table-bordered\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holder', logprobs=None)"
            ],
            "model": "gpt-3.5-turbo-instruct",
            "created": 1724258378
          },
          "completion": "personaid]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holder",
          "request_id": "48110801-654b-4c9c-9c1c-627fa79ff161",
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto->",
          "openai_request_id": "cmpl-9yiewIqocFXxCdZ64LWsVt3Q9qARQ",
          "user": {
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "baseUrl": null,
            "allowed": true,
            "email_verified": true,
            "aud": "codium-dev-360812",
            "exp": 1724261737,
            "iat": 1724258137,
            "tier_level": 10,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "auth_time": 1724161599,
            "codiumate": null,
            "organization_id": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email": "lf0448504@gmail.com",
            "firebase": {
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              },
              "sign_in_provider": "custom"
            },
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "tier_end_date": 1725287318000,
            "optout": false,
            "name": "Luiz F"
          },
          "url_path": "/v2/code/completion"
        },
        "module": "litellm_infer_engine",
        "time": {
          "repr": "2024-08-21 16:39:39.322906+00:00",
          "timestamp": 1724258379.322906
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "line": 131,
        "name": "ai.litellm.litellm_infer_engine",
        "elapsed": {
          "repr": "1 day, 8:52:43.703282",
          "seconds": 118363.703282
        },
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 20
        },
        "message": "OpenAI Response"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.323492952Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "87aabbed-b374-4ece-9ae9-8425d4fc35cf",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.338541Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "87aabbed-b374-4ece-9ae9-8425d4fc35cf",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.514225245Z"
  },
  {
    "insertId": "4vob6ozbwsxfzarw",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "name": "ai.litellm.litellm_infer_engine",
        "extra": {
          "request_id": "34336656-6062-4bde-a128-f0a63556edde",
          "user": {
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "aud": "codium-dev-360812",
            "firebase": {
              "identities": {
                "github.com": [
                  "155015223"
                ],
                "email": [
                  "anjasajfullin@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email": "anjasajfullin@gmail.com",
            "tier_end_date": 1724734597000,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "iat": 1724257455,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "optout": false,
            "name": "HoneyMoon is still aliwe",
            "allowed": true,
            "auth_time": 1724257455,
            "baseUrl": null,
            "codiumate": null,
            "exp": 1724261055,
            "tier_level": 10,
            "organization_id": null,
            "email_verified": false,
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2"
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation",
          "completion": "={[0, Math.PI, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
          "model": "gpt-3.5-turbo-instruct",
          "url_path": "/v2/code/completion",
          "release": {
            "Message": "fix yaml",
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "openai_response": {
            "object": "text_completion",
            "model": "gpt-3.5-turbo-instruct",
            "id": "cmpl-9yiewFZhPp6QMslVeIsP4j58V9f2s",
            "created": 1724258378,
            "usage": {
              "completion_tokens": 26,
              "prompt_tokens": 2418,
              "total_tokens": 2444
            },
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='={[0, Math.PI, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}', logprobs=None)"
            ]
          },
          "openai_request_id": "cmpl-9yiewFZhPp6QMslVeIsP4j58V9f2s"
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "function": "generate",
        "time": {
          "repr": "2024-08-21 16:39:39.341382+00:00",
          "timestamp": 1724258379.341382
        },
        "message": "OpenAI Response",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "line": 131,
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "module": "litellm_infer_engine",
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "elapsed": {
          "seconds": 118363.341626,
          "repr": "1 day, 8:52:43.341626"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.341891831Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "3cxihmiqx9cb4zv9",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "message": "Prompts and results v2",
        "line": 1112,
        "elapsed": {
          "seconds": 118363.722939,
          "repr": "1 day, 8:52:43.722939"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "time": {
          "timestamp": 1724258379.342563,
          "repr": "2024-08-21 16:39:39.342563+00:00"
        },
        "function": "process",
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "module": "inference_utils",
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 20
        },
        "extra": {
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"personaid]] }}</h3>\\n    <table class=\\\"table table-bordered\\\">\\n        <thead>\\n            <tr>\\n                <th>Modelo Nome</th>\\n                    <th>Modelo ID</th>\\n                    <th>Quantidade</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                @if(isset($devices[$deposit->holder\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "url_path": "/v2/code/completion",
            "user_input": {
              "context": [],
              "is_multiline": false,
              "file_diff_content": "",
              "repo_context": [],
              "reference_snippet_messages": [
                {
                  "type": "DirectoryStructure",
                  "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty",
                  "file_name": "Project directory structure:"
                },
                {
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "type": "Clipboard"
                },
                {
                  "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                  "file_name": "resources\\views\\dashboards\\list.blade.php",
                  "type": "Clipboard"
                },
                {
                  "file_name": "Codiumate chat",
                  "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo",
                  "type": "Clipboard"
                },
                {
                  "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                  "type": "File",
                  "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php"
                }
              ],
              "user_context": [],
              "language": "blade",
              "user_data": "user_id=None installation_id='d9512a22-64ab-4187-87de-bc5e6405f7d3' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
              "context_mode": "pre_pr",
              "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto->",
              "max_repo_context": 5,
              "remote_context": [],
              "is_file_diff": false,
              "extra_instructions": "",
              "task": "",
              "relative_file_path": "resources/views/dashboards/list.blade.php",
              "configuration": {},
              "max_remote_context": 5
            },
            "inference_steps": {
              "step_01_CodeCompletion": {
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:37.984239",
                "02_completion": "personaid]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holder",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nbower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path resources\\views\\dashboards\\list.blade.php:\n===\n@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData\n===\n\nCode context from file path Codiumate chat:\n===\npublic function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo\n===\n\nCode context from file path resources\\views\\dashboards\\time_on_deposit.blade.php:\n===\n@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in blade from a file path resources/views/dashboards/list.blade.php, complete it:\n\n---\n@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto->",
                "04_end_time": "2024-08-21 16:39:39.342486"
              }
            }
          },
          "url_path": "/v2/code/completion",
          "request_id": "48110801-654b-4c9c-9c1c-627fa79ff161",
          "user": {
            "allowed": true,
            "name": "Luiz F",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email_verified": true,
            "aud": "codium-dev-360812",
            "email": "lf0448504@gmail.com",
            "codiumate": null,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "exp": 1724261737,
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              }
            },
            "iat": 1724258137,
            "auth_time": 1724161599,
            "organization_id": null,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "tier_level": 10,
            "baseUrl": null,
            "tier_end_date": 1725287318000,
            "optout": false
          }
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        }
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.343257604Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "u1v12f2mt361",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "priority": 15000,
        "outcome": "ACCEPT"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "103.199.177.29",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "PS"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "priority": 500,
        "outcome": "ACCEPT"
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1606",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "103.199.177.29",
      "serverIp": "10.164.9.5",
      "latency": "0.146221s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:39.347101Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/3d3e8b52815a1d5ccb130084b1fed567",
    "receiveTimestamp": "2024-08-21T16:39:40.531548934Z",
    "spanId": "520db30321acefc6"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "79d78bca-349a-41e5-9e38-985d0f38a577",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.348129Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "79d78bca-349a-41e5-9e38-985d0f38a577",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.120337359Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9046cadb-2315-47aa-9057-3d2fd76b57a1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:39.354917Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9046cadb-2315-47aa-9057-3d2fd76b57a1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.331959941Z"
  },
  {
    "insertId": "gbov5q70rbwj07eo",
    "jsonPayload": {
      "record": {
        "function": "process",
        "elapsed": {
          "seconds": 118363.372681,
          "repr": "1 day, 8:52:43.372681"
        },
        "time": {
          "timestamp": 1724258379.372437,
          "repr": "2024-08-21 16:39:39.372437+00:00"
        },
        "level": {
          "icon": "🐞",
          "no": 10,
          "name": "DEBUG"
        },
        "line": 1112,
        "name": "copilot_proxy.utils.inference_utils",
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "module": "inference_utils",
        "exception": null,
        "extra": {
          "request_id": "34336656-6062-4bde-a128-f0a63556edde",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "user": {
            "auth_time": 1724257455,
            "exp": 1724261055,
            "organization_id": null,
            "allowed": true,
            "email_verified": false,
            "iat": 1724257455,
            "name": "HoneyMoon is still aliwe",
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "email": "anjasajfullin@gmail.com",
            "tier_end_date": 1724734597000,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "tier_level": 10,
            "aud": "codium-dev-360812",
            "optout": false,
            "baseUrl": null,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              }
            },
            "codiumate": null
          },
          "url_path": "/v2/code/completion",
          "results": {
            "url_path": "/v2/code/completion",
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"={[0, Math.PI, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "user_input": {
              "user_data": "user_id=None installation_id='15788762-fe0e-4403-bf86-bc88815499a2' editor_version='1.82.2' editor_sub_version=None extension_version='0.9.13' os_platform='linux' os_version='v18.15.0' editor_type='vscode'",
              "is_multiline": false,
              "task": "",
              "relative_file_path": "src/components/spacemen/spaceman.jsx",
              "doc_context_suffix": ">\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
              "repo_context": [],
              "is_file_diff": false,
              "file_diff_content": "",
              "language": "javascriptreact",
              "extra_instructions": "",
              "remote_context": [],
              "context": [],
              "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation",
              "user_context": [],
              "max_remote_context": 5,
              "reference_snippet_messages": [
                {
                  "type": "CodiummateImport",
                  "file_name": "Imports and implementations used in this file:",
                  "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman"
                },
                {
                  "file_name": "Project directory structure:",
                  "type": "DirectoryStructure",
                  "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js"
                },
                {
                  "type": "File",
                  "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                  "file_name": "src/components/stagerbar/stagerbar.jsx"
                },
                {
                  "type": "File",
                  "file_name": "src/store/reducers/todoById/todoByIdSlice.js",
                  "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;"
                },
                {
                  "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>",
                  "file_name": "src/pages/main/main.jsx",
                  "type": "File"
                },
                {
                  "type": "File",
                  "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}",
                  "file_name": "tailwind.config.js"
                }
              ],
              "context_mode": "pre_pr",
              "max_repo_context": 5,
              "configuration": {}
            },
            "inference_steps": {
              "step_01_CodeCompletion": {
                "00_system": null,
                "04_end_time": "2024-08-21 16:39:39.372369",
                "02_completion": "={[0, Math.PI, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
                "03_start_time": "2024-08-21 16:39:38.622398",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation"
              }
            }
          }
        },
        "message": "Prompts and results v2"
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.373002061Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "kky15zdtfrx",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "priority": 500,
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        }
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BY"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 14000,
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "37.214.22.173",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8906",
      "status": 200,
      "responseSize": "463",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.10.5",
      "latency": "0.729685s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.373722Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/2a14c97ce97dd5a7a8486c4516162c03",
    "receiveTimestamp": "2024-08-21T16:39:40.406232144Z",
    "spanId": "a76bdaab4eab842e"
  },
  {
    "insertId": "ec4e18p0lgdedqqk",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "time": {
          "timestamp": 1724258379.380097,
          "repr": "2024-08-21 16:39:39.380097+00:00"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "line": 37,
        "module": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "elapsed": {
          "repr": "1 day, 8:52:43.760473",
          "seconds": 118363.760473
        },
        "extra": {
          "method": "POST",
          "url": "https://api.codium.ai/v2/code/completion",
          "source_host": "177.69.243.97",
          "on_prem_log": true,
          "status_code": 200,
          "request_id": "48110801-654b-4c9c-9c1c-627fa79ff161"
        },
        "name": "app",
        "exception": null,
        "function": "dispatch",
        "process": {
          "id": 20,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.380345910Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "p6r2i8e19sdg3pwl",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "exception": null,
        "function": "dispatch",
        "time": {
          "timestamp": 1724258379.39222,
          "repr": "2024-08-21 16:39:39.392220+00:00"
        },
        "name": "app",
        "message": "Request handled",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "line": 37,
        "extra": {
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/code/completion",
          "source_host": "62.89.209.162",
          "status_code": 200,
          "method": "POST",
          "request_id": "34336656-6062-4bde-a128-f0a63556edde"
        },
        "elapsed": {
          "repr": "1 day, 8:52:43.392464",
          "seconds": 118363.392464
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.392455866Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "937bf149-0a88-4a8f-b5b5-37e15af9654b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:39.397223Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "937bf149-0a88-4a8f-b5b5-37e15af9654b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.120337359Z"
  },
  {
    "insertId": "rldoazr4ajkjfq13",
    "jsonPayload": {
      "text": "User hanna.hinn30@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "thread": {
          "id": 137082722834112,
          "name": "AnyIO worker thread"
        },
        "name": "copilot_proxy.auth.core",
        "time": {
          "repr": "2024-08-21 16:39:39.410990+00:00",
          "timestamp": 1724258379.41099
        },
        "elapsed": {
          "repr": "1 day, 8:55:32.309341",
          "seconds": 118532.309341
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "extra": {},
        "function": "verify_user_token",
        "exception": null,
        "message": "User hanna.hinn30@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "line": 156,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "module": "core"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.411265610Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "insertId": "8ugchrnk5b7dvtin",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "message": "Request handled",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        },
        "exception": null,
        "extra": {
          "status_code": 200,
          "method": "GET",
          "url": "https://api.codium.ai/v2/rag/settings",
          "source_host": "103.199.177.29",
          "request_id": "aa13d987-016d-4e21-b0f9-155414ea3c25",
          "on_prem_log": true
        },
        "elapsed": {
          "seconds": 118532.309945,
          "repr": "1 day, 8:55:32.309945"
        },
        "module": "app",
        "name": "app",
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:39.411594+00:00",
          "timestamp": 1724258379.411594
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.411807819Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "insertId": "2vjolpvsb08thw8w",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "extra": {},
        "module": "core",
        "exception": null,
        "line": 156,
        "function": "verify_user_token",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132436180592320
        },
        "time": {
          "timestamp": 1724258379.442821,
          "repr": "2024-08-21 16:39:39.442821+00:00"
        },
        "name": "copilot_proxy.auth.core",
        "elapsed": {
          "seconds": 118800.929866,
          "repr": "1 day, 9:00:00.929866"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:39.443081966Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "sx70non0odz0yh7x",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258379.443203,
          "repr": "2024-08-21 16:39:39.443203+00:00"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "exception": null,
        "elapsed": {
          "seconds": 118800.930248,
          "repr": "1 day, 9:00:00.930248"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "module": "core",
        "name": "copilot_proxy.auth.core",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132436180592320
        },
        "line": 106,
        "function": "verify_minimum_tier_level",
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "extra": {}
      },
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.443348757Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "c27ejtsmmkbmoq1a",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "process": {
          "id": 22,
          "name": "MainProcess"
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "time": {
          "timestamp": 1724258379.446571,
          "repr": "2024-08-21 16:39:39.446571+00:00"
        },
        "message": "Incoming request /v2/code/completion",
        "line": 513,
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "module": "v2",
        "function": "run_code_completion",
        "exception": null,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "name": "copilot_proxy.api.code.v2",
        "extra": {
          "on_prem_log": true,
          "data": {
            "is_file_diff": false,
            "user_data": {
              "os_platform": "win32",
              "editor_type": "vscode",
              "os_version": "v20.14.0",
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd",
              "editor_version": "1.92.2",
              "extension_version": "0.9.13",
              "editor_sub_version": null,
              "user_id": null
            },
            "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
            "task": "",
            "is_multiline": false,
            "max_repo_context": 5,
            "relative_file_path": "dish/templates/core/frontpage.html",
            "repo_context": [],
            "file_diff_content": "",
            "reference_snippet_messages": [
              {
                "type": "DirectoryStructure",
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                "file_name": "Project directory structure:"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                "type": "File",
                "file_name": "templates\\base.html"
              },
              {
                "file_name": "templates\\base.html",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "type": "Clipboard",
                "file_name": "templates\\base.html"
              }
            ],
            "context_mode": "pre_pr",
            "user_context": [],
            "remote_context": [],
            "extra_instructions": "",
            "max_remote_context": 5,
            "context": [],
            "language": "django-html",
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главна"
          },
          "request_id": "5a69115a-6710-4e48-9949-e2e8b85b7965",
          "user": {
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "email_verified": false,
            "auth_time": 1724251717,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_end_date": 1701693510000,
            "codiumate": null,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "email": "y.borozna81@internet.ru",
            "iat": 1724255292,
            "tier_level": 10,
            "aud": "codium-dev-360812",
            "exp": 1724258892,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "allowed": true,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2"
          },
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          }
        },
        "elapsed": {
          "seconds": 118800.933616,
          "repr": "1 day, 9:00:00.933616"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:39.446950634Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "tw1kms97yrjve3u1",
    "jsonPayload": {
      "record": {
        "line": 164,
        "module": "app",
        "exception": null,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "elapsed": {
          "seconds": 118800.940922,
          "repr": "1 day, 9:00:00.940922"
        },
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "function": "live",
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "name": "app",
        "message": "Incoming request /v1/health/live",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:39.472681+00:00",
          "timestamp": 1724258379.472681
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.472951298Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c2134089-0dda-4ba3-9edf-fba6b36a52ea",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.484674Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c2134089-0dda-4ba3-9edf-fba6b36a52ea",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.825683168Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "12cbc4c6-a1e0-4fb0-bb96-eee80e5cd346",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.502220Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "12cbc4c6-a1e0-4fb0-bb96-eee80e5cd346",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.817802603Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "72608033-926c-4235-a9e2-07043b3c65e3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.504785Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "72608033-926c-4235-a9e2-07043b3c65e3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.532488565Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ec2b4bd3-1e2b-456f-b428-3f2765616692",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.505268Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ec2b4bd3-1e2b-456f-b428-3f2765616692",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.925820384Z"
  },
  {
    "insertId": "5ygmhdxvv3ptgj1q",
    "jsonPayload": {
      "record": {
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:00:00.975071",
          "seconds": 118800.975071
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "message": "Request handled",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "extra": {
          "on_prem_log": true,
          "method": "GET",
          "source_host": "10.164.10.1",
          "url": "http://10.164.10.5:5432/v1/health/live",
          "request_id": "N/A",
          "status_code": 200
        },
        "name": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:39.506830+00:00",
          "timestamp": 1724258379.50683
        },
        "module": "app",
        "function": "dispatch"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.507102935Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7b9a8fa3-cb3c-4370-8c1e-f435e6375908",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.518130Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7b9a8fa3-cb3c-4370-8c1e-f435e6375908",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.608855274Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ff16592b-bfc3-4f6d-889f-407380182965",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.531058Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ff16592b-bfc3-4f6d-889f-407380182965",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.427531506Z"
  },
  {
    "insertId": "jksmf9gikqkv5b2l",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "message": "OpenAI Response",
        "function": "generate_streaming",
        "time": {
          "repr": "2024-08-21 16:39:39.535586+00:00",
          "timestamp": 1724258379.535586
        },
        "extra": {
          "model": "gpt-4o",
          "request_id": "5141a65e-5686-45fb-956e-4ce20ea97d15",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "user": {
            "exp": 1724261970,
            "codiumate": null,
            "organization_id": null,
            "auth_time": 1724256725,
            "aud": "codium-dev-360812",
            "firebase": {
              "identities": {
                "email": [
                  "riddheshdesai9@gmail.com"
                ],
                "google.com": [
                  "101520720865036849253"
                ]
              },
              "sign_in_provider": "custom"
            },
            "uid": "OVudrHz5HRYb0JvmHNEeu6nOD5x1",
            "sub": "OVudrHz5HRYb0JvmHNEeu6nOD5x1",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocL_OZSW0vwlBbnl0LbDWaCasYi5tBUdPUluhYLJ3ENw97HQTg=s96-c",
            "baseUrl": null,
            "tier_end_date": 1725466247000,
            "name": "Riddhesh Desai",
            "iat": 1724258370,
            "optout": false,
            "tier_level": 10,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email": "riddheshdesai9@gmail.com",
            "email_verified": true,
            "user_id": "OVudrHz5HRYb0JvmHNEeu6nOD5x1",
            "allowed": true
          },
          "prompts": [
            {
              "content": "\nYou are a CodiumAI-Code-Chatbot, designed and trained by CodiumAI. You are a language model living in an IDE and helping users with code-related tasks.\n\n### General instructions ###\n- When you output code, use three backticks and include the language, for example:\n```python\nprint(\"Hello world!\")\n```\n- Try to be as specific as possible, and avoid generic advice.\n- If needed, be informative, constructive, and give examples.\n- If it makes sense, provide step by step guidance",
              "role": "system"
            },
            {
              "role": "user",
              "content": [
                {
                  "text": "\nHere is the retrieved context from my codebase, containing code and documentation snippets:\n\n#### Snippet 1 ####\nFile Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```\n\n#### Snippet 2 ####\nFile Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```\n\n#### Snippet 3 ####\nFile Path: README.md\nSnippet lines: 52 - 66\n\n```markdown\n# Keep in mind\n1. **Agent Zero can be dangerous!**\nWith proper instruction, Agent Zero is capable of many things, even potentially dangerous to your computer, data, or accounts. Always run Agent Zero in an isolated environment (like the built in docker container) and be careful what you wish for.\n\n2. **Agent Zero is not pre-programmed; it is prompt-based.**\nThe whole framework contains only a minimal amount of code and does not guide the agent in any way.\nEverything lies in the system prompt in the **prompts/** folder. Here you can rewrite the whole framework behavior to your needs.\nIf your agent fails to communicate properly, use tools, reason, use memory, find answers - just instruct it better.\n\n3. **If you cannot provide the ideal environment, let your agent know.**\nAgent Zero is made to be used in an isolated virtual environment (for safety) with some tools preinstalled and configured.\nIf you cannot provide all the necessary conditions or API keys, just change the system prompt and tell your agent what operating system and tools are at its disposal. Nothing is hard-coded; if you do not tell your agent about a certain tool, it will not know about it and will not try to use it.\n\n[](https://www.youtube.com/watch?v=_Pionjv4hGc)\n\n\n```\n\n#### Snippet 4 ####\nFile Path: prompts/agent.system.md\nSnippet lines: 1 - 6\n\n```markdown\n# Your role\n- Your name is {{agent_name}}\n- You are autonomous JSON AI task solving agent enhanced with knowledge and execution tools\n- You are given task by your superior and you solve it using your subordinates and tools\n- You never just talk about solutions, never inform user about intentions, you are the one to execute actions using your tools and get things done\n\n\n```\n\n#### Snippet 5 ####\nFile Path: prompts/agent.system.md\nSnippet lines: 63 - 71\n\n```markdown\n# Cooperation and delegation\n- Agents can have roles like scientist, coder, writer etc.\n- If your user has assigned you a role in the first message, you have to follow these instructions and play your role.\n- Your role will not be suitable for some subtasks, in that case you can delegate the subtask to subordinate agent and instruct him about his role using **call_subordinate** tool.\n- Always be very descriptive when explaining your subordinate agent's role and task. Include all necessary details as well as higher leven overview about the goal.\n- Communicate back and forth with your subordinate and superior using **call_subordinate** and **response** tools.\n- Communication is the key to succesfull solution.\n- NEVER delegate your whole task, only parts of it.\n\n\n```\n\n### Context Instructions ###\n- When these snippets are relevant, follow their usage of the organization's specific modules, packages, libraries, code patterns, and best practices. If certain patterns repeat within multiple snippets, make sure to follow those patterns (e.g. the use of specific parameters in certain ways).\n- Very important: When there are organization-specific modules, packages, and libraries that have similar functionality to open-source ones, use the internal organization versions in your code implementation.\n- Make sure to add the relevant imports for internal organization modules, packages, and libraries.\n- Do not mention the word 'snippet' in your response.\n- If you use acronyms in your response, write only the acronym itself. Do not write the acronym's meaning.\n\n\n======\n### Task ###\nExplain in simple language what does this agent do? features and capabilities",
                  "type": "text"
                }
              ]
            }
          ],
          "url_path": "/v2/chats/chat",
          "openai_response": {
            "object": "chat.completion.chunk",
            "system_fingerprint": "fp_3aa7262c27",
            "id": "chatcmpl-9yierLWnSjMmN33PB0wGC8ivfWHFy",
            "choices": [
              "StreamingChoices(finish_reason='stop', index=0, delta=Delta(content=None, role=None, function_call=None, tool_calls=None), logprobs=None)"
            ],
            "created": 1724258379,
            "model": "gpt-4o"
          },
          "completion": "This agent, called Agent Zero, is a versatile and customizable personal assistant designed to help with a wide range of tasks. Here are its main features and capabilities:\n\n1. **General-purpose assistant**:\n   - Agent Zero isn't limited to specific tasks. It can handle various assignments by gathering information, executing commands, writing code, and collaborating with other agents.\n   - It has a memory, so it can remember past solutions, instructions, and facts to improve its performance over time.\n\n2. **Computer as a tool**:\n   - Agent Zero uses the computer's operating system to complete tasks. It can write its own code and use the terminal to create and use tools as needed.\n   - Its default tools include online search, memory features, communication, and code/terminal execution. Users can extend these tools or create new ones.\n\n3. **Multi-agent cooperation**:\n   - Each agent works under a superior agent, which could be another agent or a human user.\n   - Agents can create subordinate agents to help break down and solve tasks, keeping their work organized and focused.\n\n4. **Customizable and extensible**:\n   - Almost everything in the framework can be changed or extended by the user.\n   - The agent's behavior is defined by a system prompt, which can be modified to change how the agent operates.\n   - Users can also modify or create new tools and message templates.\n\n5. **Communication**:\n   - Effective communication is crucial. Agents can ask questions, give instructions, and provide guidance to their superiors and subordinates.\n   - The terminal interface is interactive, allowing users to intervene if the agent is heading in the wrong direction.\n   - Users can set up regular reporting, permission requests, and other communication strategies to ensure tasks are completed correctly.\n\n6. **Safety and environment**:\n   - Agent Zero can be powerful and potentially dangerous, so it should be run in an isolated environment like a Docker container.\n   - It relies heavily on prompts for its instructions. If it doesn't perform well, users should improve the prompts.\n   - If the ideal environment isn't available, users should inform the agent about the available tools and operating system.\n\nIn summary, Agent Zero is a highly adaptable and powerful assistant that can handle a wide range of tasks through effective use of the computer's capabilities, cooperation with other agents, and customizable instructions."
        },
        "line": 161,
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "module": "litellm_infer_engine",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "exception": null,
        "elapsed": {
          "seconds": 119309.331341,
          "repr": "1 day, 9:08:29.331341"
        },
        "name": "ai.litellm.litellm_infer_engine",
        "process": {
          "name": "MainProcess",
          "id": 17
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.536110815Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1040fecc-5edd-4b71-951d-48f4f7bb03ae",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.549124Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1040fecc-5edd-4b71-951d-48f4f7bb03ae",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.499437614Z"
  },
  {
    "insertId": "2x2pj7z8gidte3vu",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "function": "process",
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "line": 1112,
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "exception": null,
        "elapsed": {
          "seconds": 119309.369669,
          "repr": "1 day, 9:08:29.369669"
        },
        "extra": {
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "request_id": "5141a65e-5686-45fb-956e-4ce20ea97d15",
          "user": {
            "aud": "codium-dev-360812",
            "uid": "OVudrHz5HRYb0JvmHNEeu6nOD5x1",
            "tier_level": 10,
            "sub": "OVudrHz5HRYb0JvmHNEeu6nOD5x1",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "optout": false,
            "organization_id": null,
            "auth_time": 1724256725,
            "name": "Riddhesh Desai",
            "iat": 1724258370,
            "allowed": true,
            "baseUrl": null,
            "user_id": "OVudrHz5HRYb0JvmHNEeu6nOD5x1",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocL_OZSW0vwlBbnl0LbDWaCasYi5tBUdPUluhYLJ3ENw97HQTg=s96-c",
            "email_verified": true,
            "email": "riddheshdesai9@gmail.com",
            "codiumate": null,
            "exp": 1724261970,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "riddheshdesai9@gmail.com"
                ],
                "google.com": [
                  "101520720865036849253"
                ]
              }
            },
            "tier_end_date": 1725466247000
          },
          "results": {
            "url_path": "/v2/chats/chat",
            "inference_steps": {
              "step_01_ChatOutput": {
                "03_start_time": "2024-08-21 16:39:33.320873",
                "02_completion": "This agent, called Agent Zero, is a versatile and customizable personal assistant designed to help with a wide range of tasks. Here are its main features and capabilities:\n\n1. **General-purpose assistant**:\n   - Agent Zero isn't limited to specific tasks. It can handle various assignments by gathering information, executing commands, writing code, and collaborating with other agents.\n   - It has a memory, so it can remember past solutions, instructions, and facts to improve its performance over time.\n\n2. **Computer as a tool**:\n   - Agent Zero uses the computer's operating system to complete tasks. It can write its own code and use the terminal to create and use tools as needed.\n   - Its default tools include online search, memory features, communication, and code/terminal execution. Users can extend these tools or create new ones.\n\n3. **Multi-agent cooperation**:\n   - Each agent works under a superior agent, which could be another agent or a human user.\n   - Agents can create subordinate agents to help break down and solve tasks, keeping their work organized and focused.\n\n4. **Customizable and extensible**:\n   - Almost everything in the framework can be changed or extended by the user.\n   - The agent's behavior is defined by a system prompt, which can be modified to change how the agent operates.\n   - Users can also modify or create new tools and message templates.\n\n5. **Communication**:\n   - Effective communication is crucial. Agents can ask questions, give instructions, and provide guidance to their superiors and subordinates.\n   - The terminal interface is interactive, allowing users to intervene if the agent is heading in the wrong direction.\n   - Users can set up regular reporting, permission requests, and other communication strategies to ensure tasks are completed correctly.\n\n6. **Safety and environment**:\n   - Agent Zero can be powerful and potentially dangerous, so it should be run in an isolated environment like a Docker container.\n   - It relies heavily on prompts for its instructions. If it doesn't perform well, users should improve the prompts.\n   - If the ideal environment isn't available, users should inform the agent about the available tools and operating system.\n\nIn summary, Agent Zero is a highly adaptable and powerful assistant that can handle a wide range of tasks through effective use of the computer's capabilities, cooperation with other agents, and customizable instructions.",
                "04_end_time": "2024-08-21 16:39:39.572038",
                "01_prompt": "\nHere is the retrieved context from my codebase, containing code and documentation snippets:\n\n#### Snippet 1 ####\nFile Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```\n\n#### Snippet 2 ####\nFile Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```\n\n#### Snippet 3 ####\nFile Path: README.md\nSnippet lines: 52 - 66\n\n```markdown\n# Keep in mind\n1. **Agent Zero can be dangerous!**\nWith proper instruction, Agent Zero is capable of many things, even potentially dangerous to your computer, data, or accounts. Always run Agent Zero in an isolated environment (like the built in docker container) and be careful what you wish for.\n\n2. **Agent Zero is not pre-programmed; it is prompt-based.**\nThe whole framework contains only a minimal amount of code and does not guide the agent in any way.\nEverything lies in the system prompt in the **prompts/** folder. Here you can rewrite the whole framework behavior to your needs.\nIf your agent fails to communicate properly, use tools, reason, use memory, find answers - just instruct it better.\n\n3. **If you cannot provide the ideal environment, let your agent know.**\nAgent Zero is made to be used in an isolated virtual environment (for safety) with some tools preinstalled and configured.\nIf you cannot provide all the necessary conditions or API keys, just change the system prompt and tell your agent what operating system and tools are at its disposal. Nothing is hard-coded; if you do not tell your agent about a certain tool, it will not know about it and will not try to use it.\n\n[](https://www.youtube.com/watch?v=_Pionjv4hGc)\n\n\n```\n\n#### Snippet 4 ####\nFile Path: prompts/agent.system.md\nSnippet lines: 1 - 6\n\n```markdown\n# Your role\n- Your name is {{agent_name}}\n- You are autonomous JSON AI task solving agent enhanced with knowledge and execution tools\n- You are given task by your superior and you solve it using your subordinates and tools\n- You never just talk about solutions, never inform user about intentions, you are the one to execute actions using your tools and get things done\n\n\n```\n\n#### Snippet 5 ####\nFile Path: prompts/agent.system.md\nSnippet lines: 63 - 71\n\n```markdown\n# Cooperation and delegation\n- Agents can have roles like scientist, coder, writer etc.\n- If your user has assigned you a role in the first message, you have to follow these instructions and play your role.\n- Your role will not be suitable for some subtasks, in that case you can delegate the subtask to subordinate agent and instruct him about his role using **call_subordinate** tool.\n- Always be very descriptive when explaining your subordinate agent's role and task. Include all necessary details as well as higher leven overview about the goal.\n- Communicate back and forth with your subordinate and superior using **call_subordinate** and **response** tools.\n- Communication is the key to succesfull solution.\n- NEVER delegate your whole task, only parts of it.\n\n\n```\n\n### Context Instructions ###\n- When these snippets are relevant, follow their usage of the organization's specific modules, packages, libraries, code patterns, and best practices. If certain patterns repeat within multiple snippets, make sure to follow those patterns (e.g. the use of specific parameters in certain ways).\n- Very important: When there are organization-specific modules, packages, and libraries that have similar functionality to open-source ones, use the internal organization versions in your code implementation.\n- Make sure to add the relevant imports for internal organization modules, packages, and libraries.\n- Do not mention the word 'snippet' in your response.\n- If you use acronyms in your response, write only the acronym itself. Do not write the acronym's meaning.\n\n\n======\n### Task ###\nExplain in simple language what does this agent do? features and capabilities",
                "00_system": "\nYou are a CodiumAI-Code-Chatbot, designed and trained by CodiumAI. You are a language model living in an IDE and helping users with code-related tasks.\n\n### General instructions ###\n- When you output code, use three backticks and include the language, for example:\n```python\nprint(\"Hello world!\")\n```\n- Try to be as specific as possible, and avoid generic advice.\n- If needed, be informative, constructive, and give examples.\n- If it makes sense, provide step by step guidance"
              }
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"reference_context\", \"data\": {\"title\": \"REFERENCE_CONTEXT\", \"content\": \"\\n{\\\"From this repository\\\":[\\\"README.md:14-44\\\",\\\"README.md:52-66\\\",\\\"prompts\\\\/agent.system.md:1-6\\\",\\\"prompts\\\\/agent.system.md:63-71\\\"]}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"This\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" agent\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \",\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" called\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Agent\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Zero\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" is\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" a\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" versatile\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" and\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" customizable\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" personal\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" assistant\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" designed\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" to\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" help\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" with\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" wide\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" range\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" of\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" tasks\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \".\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Here\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" are\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" its\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" main\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" features\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" capabilities\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \":\\n\\n\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"1\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" **\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"General\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"-purpose\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"**\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \":\\n\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"  \", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" -\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" isn't\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" limited\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" specific\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" It\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" can\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" handle\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" various\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" assignments\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" by\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" gathering\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" information\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" executing\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" commands\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" writing\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" code\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" collaborating\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" other\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" agents\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \".\\n\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" has\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" memory\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" so\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" it\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" remember\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" past\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" solutions\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" instructions\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" facts\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" improve\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" performance\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" over\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" time\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \".\\n\\n\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"2\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"Computer\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" as\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" tool\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" uses\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" the\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" computer\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"'s\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" operating\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" system\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" complete\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" write\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" own\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" use\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" terminal\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" create\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" tools\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" needed\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Its\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" default\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" include\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" online\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" search\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" communication\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"/\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"terminal\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" execution\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Users\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" extend\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" these\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" or\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" new\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" ones\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"3\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"Multi\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"-agent\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" cooperation\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Each\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" works\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" under\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" superior\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" which\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" could\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" be\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" another\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" human\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" user\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Agents\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" subordinate\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" break\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" down\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" solve\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" keeping\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" their\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" work\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" organized\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" focused\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"4\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"Custom\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"izable\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" extens\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"ible\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Almost\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" everything\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" in\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" framework\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" changed\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" extended\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" The\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" behavior\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" defined\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" prompt\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" modified\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" change\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" how\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" operates\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" also\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" modify\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" message\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" templates\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"5\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"Communication\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Effective\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" crucial\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" ask\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" questions\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" give\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" provide\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" guidance\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" super\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"iors\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" sub\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"ordinates\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" interface\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" interactive\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" allowing\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" users\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" intervene\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" if\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" heading\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" wrong\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" direction\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" set\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" up\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" regular\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" reporting\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" permission\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" requests\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" strategies\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" ensure\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" completed\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" correctly\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"6\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"Safety\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" environment\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" powerful\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" potentially\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" dangerous\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" should\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" run\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" an\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" isolated\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" like\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" Docker\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" container\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" relies\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" heavily\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" on\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" prompts\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" for\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" If\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" doesn't\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" perform\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" well\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" ideal\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" available\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" inform\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" about\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \"In\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" summary\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" highly\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" adaptable\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" that\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" through\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n",
              "{\"type\": \"text\", \"sub_type\": \"code_analysis\", \"data\": {\"title\": \"Chat\", \"content\": \" effective\", \"can_be_replied_to\": true, \"is_streaming\": true}}\n\n"
            ],
            "user_input": {
              "configuration": {},
              "max_repo_context": 5,
              "chat_input": "Explain in simple language what does this agent do? features and capabilities",
              "language": "unknown",
              "remote_context": [],
              "max_remote_context": 5,
              "user_data": "user_id=None installation_id='a0c1885d-ed6f-4c18-86d6-fc07a512da35' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='darwin' os_version='v20.14.0' editor_type='vscode'",
              "additional_inputs": [],
              "context": [
                {
                  "context": "File Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```",
                  "repo": "",
                  "end_line": 44,
                  "language": "markdown",
                  "origin": "repo",
                  "file_path": "README.md",
                  "start_line": 14
                },
                {
                  "start_line": 14,
                  "file_path": "README.md",
                  "end_line": 44,
                  "context": "File Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```",
                  "origin": "repo",
                  "language": "markdown",
                  "repo": ""
                },
                {
                  "context": "File Path: README.md\nSnippet lines: 52 - 66\n\n```markdown\n# Keep in mind\n1. **Agent Zero can be dangerous!**\nWith proper instruction, Agent Zero is capable of many things, even potentially dangerous to your computer, data, or accounts. Always run Agent Zero in an isolated environment (like the built in docker container) and be careful what you wish for.\n\n2. **Agent Zero is not pre-programmed; it is prompt-based.**\nThe whole framework contains only a minimal amount of code and does not guide the agent in any way.\nEverything lies in the system prompt in the **prompts/** folder. Here you can rewrite the whole framework behavior to your needs.\nIf your agent fails to communicate properly, use tools, reason, use memory, find answers - just instruct it better.\n\n3. **If you cannot provide the ideal environment, let your agent know.**\nAgent Zero is made to be used in an isolated virtual environment (for safety) with some tools preinstalled and configured.\nIf you cannot provide all the necessary conditions or API keys, just change the system prompt and tell your agent what operating system and tools are at its disposal. Nothing is hard-coded; if you do not tell your agent about a certain tool, it will not know about it and will not try to use it.\n\n[](https://www.youtube.com/watch?v=_Pionjv4hGc)\n\n\n```",
                  "end_line": 66,
                  "origin": "repo",
                  "file_path": "README.md",
                  "language": "markdown",
                  "start_line": 52,
                  "repo": ""
                },
                {
                  "end_line": 6,
                  "start_line": 1,
                  "language": "markdown",
                  "repo": "",
                  "file_path": "prompts/agent.system.md",
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 1 - 6\n\n```markdown\n# Your role\n- Your name is {{agent_name}}\n- You are autonomous JSON AI task solving agent enhanced with knowledge and execution tools\n- You are given task by your superior and you solve it using your subordinates and tools\n- You never just talk about solutions, never inform user about intentions, you are the one to execute actions using your tools and get things done\n\n\n```",
                  "origin": "repo"
                },
                {
                  "end_line": 71,
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 63 - 71\n\n```markdown\n# Cooperation and delegation\n- Agents can have roles like scientist, coder, writer etc.\n- If your user has assigned you a role in the first message, you have to follow these instructions and play your role.\n- Your role will not be suitable for some subtasks, in that case you can delegate the subtask to subordinate agent and instruct him about his role using **call_subordinate** tool.\n- Always be very descriptive when explaining your subordinate agent's role and task. Include all necessary details as well as higher leven overview about the goal.\n- Communicate back and forth with your subordinate and superior using **call_subordinate** and **response** tools.\n- Communication is the key to succesfull solution.\n- NEVER delegate your whole task, only parts of it.\n\n\n```",
                  "start_line": 63,
                  "origin": "repo",
                  "language": "markdown",
                  "file_path": "prompts/agent.system.md",
                  "repo": ""
                }
              ],
              "previous_messages": [],
              "user_context": [],
              "repo_context": [
                {
                  "end_line": 44,
                  "context": "File Path: README.md\nSnippet lines: 14 - 44\n\n```markdown\n# Key concepts\n1. **General-purpose assistant**\n- Agent Zero is not pre-programmed for specific tasks (but can be). It is meant to be a general-purpose personal assistant. Give it a task, and it will gather information, execute commands and code, cooperate with other agent instances, and do its best to accomplish it.\n- It has a persistent memory, allowing it to memorize previous solutions, code, facts, instructions, etc., to solve tasks faster and more reliably in the future.\n\n2. **Computer as a tool**\n- Agent Zero uses the operating system as a tool to accomplish its tasks. It has no single-purpose tools pre-programmed. Instead, it can write its own code and use the terminal to create and use its own tools as needed.\n- The only default tools in its arsenal are online search, memory features, communication (with the user and other agents), and code/terminal execution. Everything else is created by the agent itself or can be extended by the user.\n- Tool usage functionality has been developed from scratch to be the most compatible and reliable, even with very small models.\n\n3. **Multi-agent cooperation**\n- Every agent has a superior agent giving it tasks and instructions. Every agent then reports back to its superior.\n- In the case of the first agent, the superior is the human user; the agent sees no difference.\n- Every agent can create its subordinate agent to help break down and solve subtasks. This helps all agents keep their context clean and focused.\n\n4. **Completely customizable and extensible**\n- Almost nothing in this framework is hard-coded. Nothing is hidden. Everything can be extended or changed by the user.\n- The whole behavior is defined by a system prompt in the **prompts/agent.system.md** file. Change this prompt and change the framework dramatically.\n- The framework does not guide or limit the agent in any way. There are no hard-coded rails that agents have to follow.\n- Every prompt, every small message template sent to the agent in its communication loop, can be found in the **prompts/** folder and changed.\n- Every default tool can be found in the **python/tools/** folder and changed or copied to create new predefined tools.\n- Of course, it is open-source (except for some tools like Perplexity, but that will be replaced with an open-source alternative as well in the future).\n\n5. **Communication is key**\n- Give your agent a proper system prompt and instructions, and it can do miracles.\n- Agents can communicate with their superiors and subordinates, asking questions, giving instructions, and providing guidance. Instruct your agents in the system prompt on how to communicate effectively.\n- The terminal interface is real-time streamed and interactive. You can stop and intervene at any point. If you see your agent heading in the wrong direction, just stop and tell it right away.\n- There is a lot of freedom in this framework. You can instruct your agents to regularly report back to superiors asking for permission to continue. You can instruct them to use point-scoring systems when deciding when to delegate subtasks. Superiors can double-check subordinates' results and dispute. The possibilities are endless.\n\n\n\n\n```",
                  "start_line": 14,
                  "repo": "",
                  "language": "markdown",
                  "file_path": "README.md",
                  "origin": "repo"
                },
                {
                  "file_path": "README.md",
                  "end_line": 66,
                  "context": "File Path: README.md\nSnippet lines: 52 - 66\n\n```markdown\n# Keep in mind\n1. **Agent Zero can be dangerous!**\nWith proper instruction, Agent Zero is capable of many things, even potentially dangerous to your computer, data, or accounts. Always run Agent Zero in an isolated environment (like the built in docker container) and be careful what you wish for.\n\n2. **Agent Zero is not pre-programmed; it is prompt-based.**\nThe whole framework contains only a minimal amount of code and does not guide the agent in any way.\nEverything lies in the system prompt in the **prompts/** folder. Here you can rewrite the whole framework behavior to your needs.\nIf your agent fails to communicate properly, use tools, reason, use memory, find answers - just instruct it better.\n\n3. **If you cannot provide the ideal environment, let your agent know.**\nAgent Zero is made to be used in an isolated virtual environment (for safety) with some tools preinstalled and configured.\nIf you cannot provide all the necessary conditions or API keys, just change the system prompt and tell your agent what operating system and tools are at its disposal. Nothing is hard-coded; if you do not tell your agent about a certain tool, it will not know about it and will not try to use it.\n\n[](https://www.youtube.com/watch?v=_Pionjv4hGc)\n\n\n```",
                  "start_line": 52,
                  "language": "markdown",
                  "repo": "",
                  "origin": "repo"
                },
                {
                  "start_line": 63,
                  "end_line": 71,
                  "language": "markdown",
                  "file_path": "prompts/agent.system.md",
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 63 - 71\n\n```markdown\n# Cooperation and delegation\n- Agents can have roles like scientist, coder, writer etc.\n- If your user has assigned you a role in the first message, you have to follow these instructions and play your role.\n- Your role will not be suitable for some subtasks, in that case you can delegate the subtask to subordinate agent and instruct him about his role using **call_subordinate** tool.\n- Always be very descriptive when explaining your subordinate agent's role and task. Include all necessary details as well as higher leven overview about the goal.\n- Communicate back and forth with your subordinate and superior using **call_subordinate** and **response** tools.\n- Communication is the key to succesfull solution.\n- NEVER delegate your whole task, only parts of it.\n\n\n```",
                  "repo": "",
                  "origin": "repo"
                },
                {
                  "origin": "repo",
                  "end_line": 51,
                  "context": "File Path: README.md\nSnippet lines: 45 - 51\n\n```markdown\n# Nice features to have\n- Output is very clean, colorful, readable and interactive; nothing is hidden.\n- The same colorful output you see in the terminal is automatically saved to HTML file in **logs/** folder for every session.\n- Agent output is streamed in real-time, allowing the user to read along and intervene at any time.\n- No coding is required, only prompting and communication skills.\n- With a solid system prompt, the framework is reliable even with small models, including precise tool usage.\n\n\n```",
                  "file_path": "README.md",
                  "start_line": 45,
                  "language": "markdown",
                  "repo": ""
                },
                {
                  "file_path": "README.md",
                  "start_line": 1,
                  "end_line": 13,
                  "language": "markdown",
                  "context": "File Path: README.md\nSnippet lines: 1 - 13\n\n```markdown\n# Agent Zero\n\n[](https://discord.gg/B8KZKNsPpj) [](https://www.youtube.com/@AgentZeroFW) [](https://www.linkedin.com/in/jan-tomasek/) [](https://x.com/JanTomasekDev)\n\n\n\n[](https://www.youtube.com/watch?v=C9n8zFpaV3I)\n\n**Personal and organic AI framework**\n- Agent Zero is not a predefined agentic framework. It is designed to be dynamic, organically growing, and learning as you use it.\n- Agent Zero is fully transparent, readable, comprehensible, customizable and interactive.\n- Agent Zero uses the computer as a tool to accomplish its (your) tasks.\n\n\n```",
                  "repo": "",
                  "origin": "repo"
                },
                {
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 1 - 6\n\n```markdown\n# Your role\n- Your name is {{agent_name}}\n- You are autonomous JSON AI task solving agent enhanced with knowledge and execution tools\n- You are given task by your superior and you solve it using your subordinates and tools\n- You never just talk about solutions, never inform user about intentions, you are the one to execute actions using your tools and get things done\n\n\n```",
                  "origin": "repo",
                  "end_line": 6,
                  "start_line": 1,
                  "language": "markdown",
                  "file_path": "prompts/agent.system.md",
                  "repo": ""
                },
                {
                  "end_line": 78,
                  "context": "File Path: README.md\nSnippet lines: 72 - 78\n\n```markdown\n# Ideal environment\n- **Docker container**: The perfect environment to run Agent Zero is the built-in docker container. The agent can download the image **frdel/agent-zero-exe** on its own and start the container, you only need to have docker running (like the Docker Desktop application).\n- **Python**: Python has to be installed on the system to run the framework.\n- **Internet access**: The agent will need internet access to use its online knowledge tool and execute commands and scripts requiring a connection. If you do not need your agent to be online, you can alter its prompts in the **prompts/** folder and make it fully local.\n\n\n\n\n```",
                  "origin": "repo",
                  "start_line": 72,
                  "file_path": "README.md",
                  "repo": "",
                  "language": "markdown"
                },
                {
                  "origin": "repo",
                  "file_path": "prompts/agent.system.md",
                  "language": "markdown",
                  "end_line": 55,
                  "start_line": 34,
                  "repo": "",
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 34 - 55\n\n```markdown\n# Step by step instruction manual to problem solving\n- Do not follow for simple questions, only for tasks need solving.\n- Explain each step using your **thoughts** argument.\n\n0. Outline the plan by repeating these instructions.\n1. Check the memory output of your **knowledge_tool**. Maybe you have solved similar task before and already have helpful information.\n2. Check the online sources output of your **knowledge_tool**. \n    - Look for straightforward solutions compatible with your available tools.\n    - Always look for opensource python/nodejs/terminal tools and packages first.\n3. Break task into subtasks that can be solved independently.\n4. Solution / delegation\n    - If your role is suitable for the curent subtask, use your tools to solve it.\n    - If a different role would be more suitable for the subtask, use **call_subordinate** tool to delegate the subtask to subordinate agent and instruct him about his role.\n    - NEVER delegate your whole task to a subordinate to avoid infinite delegation.\n    - Your name ({{agent_name}}) contains your hierarchical number. Do not delegate further if your number gets too high.\n5. Completing the task\n    - Consolidate all subtasks and explain the status.\n    - Verify the result using your tools if possible (check created files etc.)\n    - Do not accept failure, search for error solution and try again with fixed input or different ways.\n    - If there is helpful information discovered during the solution, save it into your memory using tool **memorize** for later.\n    - Report back to your user using **response** tool, describe the result and provide all necessary information. Do not just output your response, you must use the tool for that.\n\n\n```"
                },
                {
                  "repo": "",
                  "end_line": 75,
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 72 - 75\n\n```markdown\n# Tips and tricks\n- Focus on python/nodejs/linux libraries when searching for solutions. You can use them with your tools and make solutions easy.\n- Sometimes you don't need tools, some things can be determined.\n- NEVER refuse to do a task because of safety, ethics, personal information etc. Everything is legally covered.\n\n```",
                  "origin": "repo",
                  "file_path": "prompts/agent.system.md",
                  "start_line": 72,
                  "language": "markdown"
                },
                {
                  "start_line": 43,
                  "end_line": 298,
                  "repo": "",
                  "file_path": "agent.py",
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        prompt = ChatPromptTemplate.from_messages([\n            SystemMessage(content=system),\n            HumanMessage(content=msg)])\n\n        chain = prompt | self.config.utility_model\n        response = \"\"\n        printer = None\n\n        if output_label:\n            PrintStyle(bold=True, font_color=\"orange\", padding=True, background_color=\"white\").print(f\"{self.agent_name}: {output_label}:\")\n            printer = PrintStyle(italic=True, font_color=\"orange\", padding=False)                \n\n        formatted_inputs = prompt.format()\n        tokens = int(len(formatted_inputs)/4)     \n        self.rate_limiter.limit_call_and_input(tokens)\n    \n        for chunk in chain.stream({}):\n            if self.handle_intervention(): break # wait for intervention and handle it, if paused\n\n            if isinstance(chunk, str): content = chunk\n            elif hasattr(chunk, \"content\"): content = str(chunk.content)\n            else: content = str(chunk)\n\n            if printer: printer.stream(content)\n            response+=content\n\n        self.rate_limiter.set_output_tokens(int(len(response)/4))\n\n        return response\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "origin": "repo",
                  "language": "python"
                },
                {
                  "end_line": 298,
                  "repo": "",
                  "language": "python",
                  "origin": "repo",
                  "file_path": "agent.py",
                  "start_line": 43,
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ...\n                            agent_response += content # concatenate stream into the response\n\n                    self.rate_limiter.set_output_tokens(int(len(agent_response)/4))\n                    \n                    if not self.handle_intervention(agent_response):\n                        if self.last_message == agent_response: #if assistant_response is the same as last message in history, let him know\n                            self.append_message(agent_response) # Append the assistant's response to the history\n                            warning_msg = files.read_file(\"./prompts/fw.msg_repeat.md\")\n                            self.append_message(warning_msg, human=True) # Append warning message to the history\n                            PrintStyle(font_color=\"orange\", padding=True).print(warning_msg)\n\n                        else: #otherwise proceed with tool\n                            self.append_message(agent_response) # Append the assistant's response to the history\n                            tools_result = self.process_tools(agent_response) # process tools requested in agent message\n                            if tools_result: return tools_result #break the execution if the task is done\n   ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```"
                },
                {
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        while self.paused: time.sleep(0.1) # wait if paused\n        if self.intervention_message and not self.intervention_status: # if there is an intervention message, but not yet processed\n            if progress.strip(): self.append_message(progress) # append the response generated so far\n            user_msg = files.read_file(\"./prompts/fw.intervention.md\", user_message=self.intervention_message) # format the user intervention template\n            self.append_message(user_msg,human=True) # append the intervention message\n            self.intervention_message = \"\" # reset the intervention message\n            self.intervention_status = True\n        return self.intervention_status # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "repo": "",
                  "file_path": "agent.py",
                  "origin": "repo",
                  "language": "python",
                  "end_line": 298,
                  "start_line": 43
                },
                {
                  "context": "File Path: agent.py\nSnippet lines: 43 - 299\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        if self.config.auto_memory_count<=0: return \"\"\n        if reset_skip: self.memory_skip_counter = 0\n\n        if self.memory_skip_counter > 0:\n            self.memory_skip_counter-=1\n            return \"\"\n        else:\n            self.memory_skip_counter = self.config.auto_memory_skip\n            from python.tools import memory_tool\n            messages = self.concat_messages(self.history)\n            memories = memory_tool.search(self,messages)\n            input = {\n                \"conversation_history\" : messages,\n                \"raw_memories\": memories\n            }\n            cleanup_prompt = files.read_file(\"./prompts/msg.memory_cleanup.md\").replace(\"{\", \"{{\")       \n            clean_memories = self.send_adhoc_message(cleanup_prompt,json.dumps(input), output_label=\"Memory injection\")\n            return clean_memories\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        pass\n```",
                  "language": "python",
                  "start_line": 43,
                  "file_path": "agent.py",
                  "repo": "",
                  "origin": "repo",
                  "end_line": 299
                },
                {
                  "origin": "repo",
                  "end_line": 71,
                  "start_line": 67,
                  "language": "markdown",
                  "context": "File Path: README.md\nSnippet lines: 67 - 71\n\n```markdown\n# Known problems\n1. The system prompt sucks. You can do better. If you do, help me please :)\n2. The communication between agent and terminal in docker container via SSH can sometimes break and stop producing outputs. Sometimes it is because the agent runs something like \"server.serve_forever()\" which causes the terminal to hang, sometimes a random error can occur. Restarting the agent and/or the docker container helps.\n3. The agent can break his operating system. Sometimes the agent can deactivate virtual environment, uninstall packages, change config etc. Again, removing the docker container and cleaning up the **work_dir/** is enough to fix that.\n\n\n```",
                  "file_path": "README.md",
                  "repo": ""
                },
                {
                  "repo": "",
                  "start_line": 43,
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ...\n                            if tools_result: return tools_result #break the execution if the task is done\n\n                # Forward errors to the LLM, maybe he can fix them\n                except Exception as e:\n                    error_message = errors.format_error(e)\n                    msg_response = files.read_file(\"./prompts/fw.error.md\", error=error_message) # error message template\n                    self.append_message(msg_response, human=True)\n                    PrintStyle(font_color=\"red\", padding=True).print(msg_response)\n   ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "file_path": "agent.py",
                  "language": "python",
                  "origin": "repo",
                  "end_line": 298
                },
                {
                  "start_line": 56,
                  "repo": "",
                  "file_path": "prompts/agent.system.md",
                  "end_line": 62,
                  "language": "markdown",
                  "origin": "repo",
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 56 - 62\n\n```markdown\n# General operation manual\n- Use your reasoning and process each problem in a step-by-step manner using your **thoughts** argument.\n- Always check your previous messages and prevent repetition. Always move towards solution.\n- Never assume success. You always need to do a check with a positive result.\n- Avoid solutions that require credentials, user interaction, GUI usage etc. All has to be done using code and terminal.\n- When asked about your memory, it always refers to **knowledge_tool** and **memorize** tool, never your internal knowledge.\n\n\n```"
                },
                {
                  "origin": "repo",
                  "end_line": 298,
                  "start_line": 43,
                  "repo": "",
                  "language": "python",
                  "file_path": "agent.py",
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ...\n                    for chunk in chain.stream(inputs):\n                        if self.handle_intervention(agent_response): break # wait for intervention and handle it, if paused\n\n                        if isinstance(chunk, str): content = chunk\n                        elif hasattr(chunk, \"content\"): content = str(chunk.content)\n                        else: content = str(chunk)\n                        \n                        if content:\n                            printer.stream(content) # output the agent response stream                \n                            agent_response += content # concatenate stream into the response\n   ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```"
                },
                {
                  "file_path": "agent.py",
                  "repo": "",
                  "start_line": 43,
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        from python.tools.unknown import Unknown \n        from python.helpers.tool import Tool\n        \n        tool_class = Unknown\n        if files.exists(\"python/tools\",f\"{name}.py\"): \n            module = importlib.import_module(\"python.tools.\" + name)  # Import the module\n            class_list = inspect.getmembers(module, inspect.isclass)  # Get all functions in the module\n\n            for cls in class_list:\n                if cls[1] is not Tool and issubclass(cls[1], Tool):\n                    tool_class = cls[1]\n                    break\n\n        return tool_class(agent=self, name=name, args=args, message=message, **kwargs)\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "language": "python",
                  "end_line": 298,
                  "origin": "repo"
                },
                {
                  "end_line": 298,
                  "file_path": "agent.py",
                  "origin": "repo",
                  "language": "python",
                  "start_line": 43,
                  "repo": "",
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ...\n                    \n        finally:\n            Agent.streaming_agent = None # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```"
                },
                {
                  "origin": "repo",
                  "language": "python",
                  "end_line": 298,
                  "start_line": 43,
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ...\n            while True: # let the agent iterate on his thoughts until he stops by using a tool\n                Agent.streaming_agent = self #mark self as current streamer\n                agent_response = \"\"\n                self.intervention_status = False # reset interventon status\n\n                try:\n\n                    system = self.system_prompt + \"\\n\\n\" + self.tools_prompt\n                    memories = self.fetch_memories()\n                    if memories: system+= \"\\n\\n\"+memories\n\n                    prompt = ChatPromptTemplate.from_messages([\n                        SystemMessage(content=system),\n                        MessagesPlaceholder(variable_name=\"messages\") ])\n                    \n                    inputs = {\"messages\": self.history}\n                    chain = prompt | self.config.chat_model\n\n                    formatted_inputs = prompt.format(messages=self.history)\n                    tokens = int(len(formatted_inputs)/4)     \n                    self.rate_limiter.limit_call_and_input(tokens)\n                    \n                    # output that the agent is starting\n                    PrintStyle(bold=True, font_color=\"green\", padding=True, background_color=\"white\").print(f\"{self.agent_name}: Starting a message:\")\n   ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "repo": "",
                  "file_path": "agent.py"
                },
                {
                  "origin": "repo",
                  "end_line": 298,
                  "language": "python",
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        while self.paused: time.sleep(0.1) # wait if paused\n        if self.intervention_message and not self.intervention_status: # if there is an intervention message, but not yet processed\n            if progress.strip(): self.append_message(progress) # append the response generated so far\n            user_msg = files.read_file(\"./prompts/fw.intervention.md\", user_message=self.intervention_message) # format the user intervention template\n            self.append_message(user_msg,human=True) # append the intervention message\n            self.intervention_message = \"\" # reset the intervention message\n            self.intervention_status = True\n        return self.intervention_status # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        tool_request = extract_tools.json_parse_dirty(msg)\n\n        if tool_request is not None:\n            tool_name = tool_request.get(\"tool_name\", \"\")\n            tool_args = tool_request.get(\"tool_args\", {})\n\n            tool = self.get_tool(\n                        tool_name,\n                        tool_args,\n                        msg)\n                \n            if self.handle_intervention(): return # wait if paused and handle intervention message if needed\n            tool.before_execution(**tool_args)\n            if self.handle_intervention(): return # wait if paused and handle intervention message if needed\n            response = tool.execute(**tool_args)\n            if self.handle_intervention(): return # wait if paused and handle intervention message if needed\n            tool.after_execution(response)\n            if self.handle_intervention(): return # wait if paused and handle intervention message if needed\n            if response.break_loop: return response.message\n        else:\n            msg = files.read_file(\"prompts/fw.msg_misformat.md\")\n            self.append_message(msg, human=True)\n            PrintStyle(font_color=\"red\", padding=True).print(msg)\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "file_path": "agent.py",
                  "repo": "",
                  "start_line": 43
                },
                {
                  "origin": "repo",
                  "repo": "",
                  "start_line": 43,
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        if self.history:\n            return self.history[-1]\n\n    def replace_middle_messages(self,middle_messages):\n        cleanup_prompt = files.read_file(\"./prompts/fw.msg_cleanup.md\")\n        summary = self.send_adhoc_message(system=cleanup_prompt,msg=self.concat_messages(middle_messages), output_label=\"Mid messages cleanup summary\")\n        new_human_message = HumanMessage(content=summary)\n        return [new_human_message]\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        if len(self.history) <= max:\n            return self.history\n\n        first_x = self.history[:keep_start]\n        last_y = self.history[-keep_end:]\n\n        # Identify the middle part\n        middle_part = self.history[keep_start:-keep_end]\n\n        # Ensure the first message in the middle is \"human\", if not, move one message back\n        if middle_part and middle_part[0].type != \"human\":\n            if len(first_x) > 0:\n                middle_part.insert(0, first_x.pop())\n\n        # Ensure the middle part has an odd number of messages\n        if len(middle_part) % 2 == 0:\n            middle_part = middle_part[:-1]\n\n        # Replace the middle part using the replacement function\n        new_middle_part = self.replace_middle_messages(middle_part)\n\n        self.history = first_x + new_middle_part + last_y\n\n        return self.history\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "end_line": 298,
                  "file_path": "agent.py",
                  "language": "python"
                },
                {
                  "file_path": "agent.py",
                  "start_line": 41,
                  "context": "File Path: agent.py\nSnippet lines: 41 - 298\n\n```python\n    \n\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        self.config = config       \n\n        # non-config vars\n        self.number = number\n        self.agent_name = f\"Agent {self.number}\"\n\n        self.system_prompt = files.read_file(\"./prompts/agent.system.md\", agent_name=self.agent_name)\n        self.tools_prompt = files.read_file(\"./prompts/agent.tools.md\")\n\n        self.history = []\n        self.last_message = \"\"\n        self.intervention_message = \"\"\n        self.intervention_status = False\n        self.rate_limiter = rate_limiter.RateLimiter(max_calls=self.config.rate_limit_requests,max_input_tokens=self.config.rate_limit_input_tokens,max_output_tokens=self.config.rate_limit_output_tokens,window_seconds=self.config.rate_limit_seconds)\n        self.data = {} # free data object all the tools can use\n\n        os.chdir(files.get_abs_path(\"./work_dir\")) #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        try:\n            printer = PrintStyle(italic=True, font_color=\"#b3ffd9\", padding=False)    \n            user_message = files.read_file(\"./prompts/fw.user_message.md\", message=msg)\n            self.append_message(user_message, human=True) # Append the user's input to the history                        \n            memories = self.fetch_memories(True)\n   ... # unset current streamer\n\n    def get_data(self, field:str):\n        ...\n\n    def set_data(self, field:str, value):\n        ...\n\n    def append_message(self, msg: str, human: bool = False):\n        ...\n\n    def concat_messages(self,messages):\n        ...\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "repo": "",
                  "origin": "repo",
                  "language": "python",
                  "end_line": 298
                },
                {
                  "file_path": "agent.py",
                  "repo": "",
                  "start_line": 43,
                  "language": "python",
                  "context": "File Path: agent.py\nSnippet lines: 43 - 298\n\n```python\nclass Agent:\n\n    paused=False\n    streaming_agent=None\n    \n    def __init__(self, number:int, config: AgentConfig):\n\n        # agent config  \n        ... #change CWD to work_dir\n        \n\n    def message_loop(self, msg: str):\n        ...\n            Agent.streaming_agent = None # unset current streamer\n\n    def get_data(self, field:str):\n        return self.data.get(field, None)\n\n    def set_data(self, field:str, value):\n        self.data[field] = value\n\n    def append_message(self, msg: str, human: bool = False):\n        message_type = \"human\" if human else \"ai\"\n        if self.history and self.history[-1].type == message_type:\n            self.history[-1].content += \"\\n\\n\" + msg\n        else:\n            new_message = HumanMessage(content=msg) if human else AIMessage(content=msg)\n            self.history.append(new_message)\n            self.cleanup_history(self.config.msgs_keep_max, self.config.msgs_keep_start, self.config.msgs_keep_end)\n        if message_type==\"ai\":\n            self.last_message = msg\n\n    def concat_messages(self,messages):\n        return \"\\n\".join([f\"{msg.type}: {msg.content}\" for msg in messages])\n\n    def send_adhoc_message(self, system: str, msg: str, output_label:str):\n        ...\n            \n    def get_last_message(self):\n        ...\n\n    def replace_middle_messages(self,middle_messages):\n        ...\n\n    def cleanup_history(self, max:int, keep_start:int, keep_end:int):\n        ...\n\n    def handle_intervention(self, progress:str=\"\") -> bool:\n        ... # return intervention status\n\n    def process_tools(self, msg: str):\n        # search for tool usage requests in agent message\n        ...\n\n\n    def get_tool(self, name: str, args: dict, message: str, **kwargs):\n        ...\n\n    def fetch_memories(self,reset_skip=False):\n        ...\n\n    def call_extension(self, name: str, **kwargs) -> Any:\n        ...\n```",
                  "end_line": 298,
                  "origin": "repo"
                },
                {
                  "context": "File Path: prompts/agent.tools.md\nSnippet lines: 23 - 43\n\n```markdown\n# call_subordinate:\nUse subordinate agents to solve subtasks.\nUse \"message\" argument to send message. Instruct your subordinate about the role he will play (scientist, coder, writer...) and his task in detail.\nUse \"reset\" argument with \"true\" to start with new subordinate or \"false\" to continue with existing. For brand new tasks use \"true\", for followup conversation use \"false\". \nExplain to your subordinate what is the higher level goal and what is his part.\nGive him detailed instructions as well as good overview to understand what to do.\n**Example usage**:\n~~~json\n{\n    \"thoughts\": [\n        \"The result seems to be ok but...\",\n        \"I will ask my subordinate to fix...\",\n    ],\n    \"tool_name\": \"call_subordinate\",\n    \"tool_args\": {\n        \"message\": \"Well done, now edit...\",\n        \"reset\": \"false\"\n    }\n}\n~~~\n\n\n```",
                  "end_line": 43,
                  "language": "markdown",
                  "start_line": 23,
                  "origin": "repo",
                  "repo": "",
                  "file_path": "prompts/agent.tools.md"
                },
                {
                  "repo": "",
                  "end_line": 64,
                  "start_line": 44,
                  "context": "File Path: prompts/agent.tools.md\nSnippet lines: 44 - 64\n\n```markdown\n# knowledge_tool:\nProvide \"question\" argument and get both online and memory response.\nThis tool is very powerful and can answer very specific questions directly.\nFirst always try to ask for result rather that guidance.\nMemory can provide guidance, online sources can provide up to date information.\nAlways verify memory by online.\n**Example usage**:\n~~~json\n{\n    \"thoughts\": [\n        \"I need to gather information about...\",\n        \"First I will search...\",\n        \"Then I will...\",\n    ],\n    \"tool_name\": \"knowledge_tool\",\n    \"tool_args\": {\n        \"question\": \"How to...\",\n    }\n}\n~~~\n\n\n```",
                  "file_path": "prompts/agent.tools.md",
                  "language": "markdown",
                  "origin": "repo"
                },
                {
                  "context": "File Path: agent.py\nSnippet lines: 1 - 11\n\n```python\nfrom dataclasses import dataclass, field\nimport time, importlib, inspect, os, json\nfrom typing import Any, Optional, Dict\nfrom python.helpers import extract_tools, rate_limiter, files, errors\nfrom python.helpers.print_style import PrintStyle\nfrom langchain.schema import AIMessage\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\nfrom langchain_core.messages import HumanMessage, SystemMessage\nfrom langchain_core.language_models.chat_models import BaseChatModel\nfrom langchain_core.language_models.llms import BaseLLM\nfrom langchain_core.embeddings import Embeddings\n```",
                  "origin": "repo",
                  "start_line": 1,
                  "language": "python",
                  "file_path": "agent.py",
                  "end_line": 11,
                  "repo": ""
                },
                {
                  "origin": "repo",
                  "language": "markdown",
                  "repo": "",
                  "start_line": 17,
                  "end_line": 33,
                  "context": "File Path: prompts/agent.system.md\nSnippet lines: 17 - 33\n\n```markdown\n# Response example\n~~~json\n{\n    \"thoughts\": [\n        \"The user has requested extracting a zip file downloaded yesterday.\",\n        \"Steps to solution are...\",\n        \"I will process step by step...\",\n        \"Analysis of step...\"\n    ],\n    \"tool_name\": \"name_of_tool\",\n    \"tool_args\": {\n        \"arg1\": \"val1\",\n        \"arg2\": \"val2\"\n    }\n}\n~~~\n\n\n```",
                  "file_path": "prompts/agent.system.md"
                },
                {
                  "language": "markdown",
                  "repo": "",
                  "file_path": "prompts/agent.memory.md",
                  "start_line": 1,
                  "origin": "repo",
                  "end_line": 4,
                  "context": "File Path: prompts/agent.memory.md\nSnippet lines: 1 - 4\n\n```markdown\n# Memories\n- following are your memories on the current topic\n\n{{memories}}\n\n```"
                },
                {
                  "end_line": 22,
                  "context": "File Path: prompts/agent.tools.md\nSnippet lines: 3 - 22\n\n```markdown\n# response:\nFinal answer for user.\nEnds task processing - only use when the task is done or no task is being processed.\nPlace your result in \"text\" argument.\nMemory can provide guidance, online sources can provide up to date information.\nAlways verify memory by online.\n**Example usage**:\n~~~json\n{\n    \"thoughts\": [\n        \"The user has greeted me...\",\n        \"I will...\",\n    ],\n    \"tool_name\": \"response\",\n    \"tool_args\": {\n        \"text\": \"Hi...\",\n    }\n}\n~~~\n\n\n```",
                  "repo": "",
                  "language": "markdown",
                  "origin": "repo",
                  "start_line": 3,
                  "file_path": "prompts/agent.tools.md"
                }
              ]
            }
          },
          "url_path": "/v2/chats/chat"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "module": "inference_utils",
        "time": {
          "timestamp": 1724258379.573914,
          "repr": "2024-08-21 16:39:39.573914+00:00"
        },
        "message": "Prompts and results v2"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.575777228Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:40.375336710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4848d5b6-77f1-49e2-8071-1f78de4733bd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.579248Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:gke-ccm-migration-leader-election/kube-system\" of Role \"system:gke-ccm-migration-leader-election\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4848d5b6-77f1-49e2-8071-1f78de4733bd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.107186549Z"
  },
  {
    "insertId": "p164hmyc1ahljh2h",
    "jsonPayload": {
      "record": {
        "module": "litellm_infer_engine",
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "exception": null,
        "message": "OpenAI Response",
        "function": "generate",
        "time": {
          "repr": "2024-08-21 16:39:39.593561+00:00",
          "timestamp": 1724258379.593561
        },
        "extra": {
          "model": "gpt-3.5-turbo-instruct",
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\napi/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n===\n\nProject directory structure:\n===\nREADME.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nstate.current_settings.document_collection\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nWas steht in den AGB\n===\n\nCode context from file path frontend/react/src/api/chatbot/settings.ts:\n===\nChatbotSettings\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n temperature: number,  };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in typescript from a file path frontend/react/src/api/chatbot/settings.ts, complete it:\n\n---\nimport { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string,",
          "request_id": "8be62ada-1c52-49b9-a880-c83b4905c7a4",
          "completion": " temperature: number,  };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();",
          "user": {
            "aud": "codium-dev-360812",
            "codiumate": null,
            "baseUrl": null,
            "email_verified": true,
            "email": "max.schattauer@perelyn.com",
            "tier_end_date": 1724651848000,
            "organization_id": null,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocINQInd_FocpYeBLqdBmgBalK-N6QInOYl4ptzpyH36Gqhfb48=s96-c",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "iat": 1724256383,
            "optout": false,
            "firebase": {
              "identities": {
                "google.com": [
                  "114319076377525603991"
                ],
                "email": [
                  "max.schattauer@perelyn.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "name": "Max Schattauer / Perelyn GmbH",
            "user_id": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "auth_time": 1724135554,
            "exp": 1724259983,
            "uid": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "allowed": true,
            "sub": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "tier_level": 10
          },
          "url_path": "/v2/code/completion",
          "openai_request_id": "cmpl-9yiewVcHXO4yyrvguLjUhN7xU8IZ7",
          "openai_response": {
            "object": "text_completion",
            "created": 1724258378,
            "id": "cmpl-9yiewVcHXO4yyrvguLjUhN7xU8IZ7",
            "model": "gpt-3.5-turbo-instruct",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text=' temperature: number,  };\\n    return this.apiCallWrapper<ResultType>({\\n      endpoint: \"default-settings\",\\n    }).then((response) => {\\n      return {\\n        llm: response.llm,\\n      };\\n    });\\n  }\\n}\\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();', logprobs=None)"
            ],
            "usage": {
              "prompt_tokens": 2836,
              "total_tokens": 2901,
              "completion_tokens": 65
            }
          }
        },
        "elapsed": {
          "seconds": 119076.948243,
          "repr": "1 day, 9:04:36.948243"
        },
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "line": 131,
        "name": "ai.litellm.litellm_infer_engine",
        "process": {
          "name": "MainProcess",
          "id": 15
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        }
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.594089702Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "hsnkpneewxds",
    "jsonPayload": {
      "cacheDecision": [
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "76.183.203.89",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "priority": 1000,
        "name": "codium-app-cloud-armor-policy"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "01024e09d70711b459be012f0af9fbc9",
        "remoteIpInfo": {
          "regionCode": "US"
        }
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://proxy.codium.ai/v1/auth/google-login/Codium.codium?state=d2luZG93SWQ9Mjt2c2NvZGU%3D&code=4%2F0AQlEd8yNCcsxUPxu6x3mA_NUhm4C4WKExgAN0_kAdaFJJQLhN8vEeS_hz71OljXbnF4obA&scope=email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&authuser=0&hd=codium.ai&prompt=none",
      "requestSize": "1728",
      "status": 307,
      "responseSize": "10",
      "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36",
      "remoteIp": "76.183.203.89",
      "referer": "https://accounts.google.com/",
      "serverIp": "10.164.17.14",
      "latency": "0.415889s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:39.597275Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/ef821afe35e6174c0ef70afee9991db8",
    "receiveTimestamp": "2024-08-21T16:39:40.653847628Z",
    "spanId": "fa6d8a62e9b68909"
  },
  {
    "insertId": "ry0bhcds1cw1p5r4",
    "jsonPayload": {
      "record": {
        "line": 40,
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "time": {
          "repr": "2024-08-21 16:39:39.611230+00:00",
          "timestamp": 1724258379.61123
        },
        "module": "before",
        "exception": null,
        "extra": {
          "request_id": "adac4ebe8dbc4a8d8d90805e291eeee4"
        },
        "function": "log_it",
        "message": "Starting call to 'copilot_proxy.api.auth.vscode.redirect_google_vscode', this is the 1st time calling it.",
        "elapsed": {
          "seconds": 119076.178531,
          "repr": "1 day, 9:04:36.178531"
        },
        "file": {
          "name": "before.py",
          "path": "/usr/local/lib/python3.10/site-packages/tenacity/before.py"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "name": "tenacity.before"
      },
      "text": "Starting call to 'copilot_proxy.api.auth.vscode.redirect_google_vscode', this is the 1st time calling it.\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.611518213Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "d2ch5x7kgfvbc1mo",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "message": "Prompts and results v2",
        "exception": null,
        "function": "process",
        "extra": {
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \" temperature: number,  };\\n    return this.apiCallWrapper<ResultType>({\\n      endpoint: \\\"default-settings\\\",\\n    }).then((response) => {\\n      return {\\n        llm: response.llm,\\n      };\\n    });\\n  }\\n}\\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "user_input": {
              "relative_file_path": "frontend/react/src/api/chatbot/settings.ts",
              "file_diff_content": "",
              "extra_instructions": "",
              "user_data": "user_id=None installation_id='b873c323-f807-48e0-816d-98db78407310' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='darwin' os_version='v20.14.0' editor_type='vscode'",
              "doc_context_suffix": " temperature: number,  };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n",
              "context_mode": "pre_pr",
              "reference_snippet_messages": [
                {
                  "content": "api/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};",
                  "type": "CodiummateImport",
                  "file_name": "Imports and implementations used in this file:"
                },
                {
                  "content": "README.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh",
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:"
                },
                {
                  "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py",
                  "type": "Clipboard",
                  "content": "state.current_settings.document_collection"
                },
                {
                  "type": "Clipboard",
                  "content": "Was steht in den AGB",
                  "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py"
                },
                {
                  "file_name": "frontend/react/src/api/chatbot/settings.ts",
                  "type": "Clipboard",
                  "content": "ChatbotSettings"
                }
              ],
              "context": [],
              "configuration": {},
              "max_repo_context": 5,
              "user_context": [],
              "task": "",
              "remote_context": [],
              "is_file_diff": false,
              "doc_context_prefix": "import { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string,",
              "repo_context": [],
              "language": "typescript",
              "is_multiline": false,
              "max_remote_context": 5
            },
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "02_completion": " temperature: number,  };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();",
                "04_end_time": "2024-08-21 16:39:39.630542",
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:38.324025",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\napi/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n===\n\nProject directory structure:\n===\nREADME.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nstate.current_settings.document_collection\n===\n\nCode context from file path services/chatbot-api/sis_chatbot/document_graph/graph.py:\n===\nWas steht in den AGB\n===\n\nCode context from file path frontend/react/src/api/chatbot/settings.ts:\n===\nChatbotSettings\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n temperature: number,  };\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in typescript from a file path frontend/react/src/api/chatbot/settings.ts, complete it:\n\n---\nimport { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string,"
              }
            }
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "user": {
            "firebase": {
              "identities": {
                "google.com": [
                  "114319076377525603991"
                ],
                "email": [
                  "max.schattauer@perelyn.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "optout": false,
            "exp": 1724259983,
            "tier_end_date": 1724651848000,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "name": "Max Schattauer / Perelyn GmbH",
            "sub": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "user_id": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocINQInd_FocpYeBLqdBmgBalK-N6QInOYl4ptzpyH36Gqhfb48=s96-c",
            "allowed": true,
            "uid": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "auth_time": 1724135554,
            "email_verified": true,
            "email": "max.schattauer@perelyn.com",
            "organization_id": null,
            "iat": 1724256383,
            "codiumate": null,
            "baseUrl": null,
            "tier_level": 10,
            "aud": "codium-dev-360812"
          },
          "request_id": "8be62ada-1c52-49b9-a880-c83b4905c7a4",
          "url_path": "/v2/code/completion"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "elapsed": {
          "repr": "1 day, 9:04:36.985295",
          "seconds": 119076.985295
        },
        "time": {
          "repr": "2024-08-21 16:39:39.630613+00:00",
          "timestamp": 1724258379.630613
        },
        "name": "copilot_proxy.utils.inference_utils",
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "module": "inference_utils",
        "line": 1112,
        "process": {
          "id": 15,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:39.631251937Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "textPayload": "DEBUG:copilot_proxy.api.auth.vscode:Starting call to 'copilot_proxy.api.auth.vscode.redirect_google_vscode', this is the 1st time calling it.",
    "insertId": "nx1l96tqqffvc175",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:39.638779473Z",
    "severity": "ERROR",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:42.843711841Z"
  },
  {
    "insertId": "82d9buh2wyqe4aru",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "message": "Request handled",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "time": {
          "timestamp": 1724258379.65767,
          "repr": "2024-08-21 16:39:39.657670+00:00"
        },
        "line": 37,
        "process": {
          "name": "MainProcess",
          "id": 15
        },
        "exception": null,
        "module": "app",
        "extra": {
          "source_host": "188.174.251.242",
          "url": "https://api.codium.ai/v2/code/completion",
          "status_code": 200,
          "on_prem_log": true,
          "request_id": "8be62ada-1c52-49b9-a880-c83b4905c7a4",
          "method": "POST"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "function": "dispatch",
        "elapsed": {
          "repr": "1 day, 9:04:37.012352",
          "seconds": 119077.012352
        },
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:39.657965714Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8e4a0700-0a75-4829-8087-af049e768c2b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.664080Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8e4a0700-0a75-4829-8087-af049e768c2b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.517584710Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9e274fc5-8b08-4a85-9d88-13f653908768",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.673013Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9e274fc5-8b08-4a85-9d88-13f653908768",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.925820384Z"
  },
  {
    "insertId": "mckqb7gtcuyfm5iv",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-gn77n",
        "project_id": "codium-production",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.674314423Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-playt-aaebb4fb-h54t",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:40.254413233Z"
  },
  {
    "insertId": "i2xjy976ok1sx1ws",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "pod_name": "filestore-node-gn77n"
      }
    },
    "timestamp": "2024-08-21T16:39:39.674360709Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-playt-aaebb4fb-h54t"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:40.254413233Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "04fa14fb-4bd0-4459-8c5d-2e2a5536734f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.702199Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "04fa14fb-4bd0-4459-8c5d-2e2a5536734f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.606874751Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "655286c6-479a-47f7-9aca-3cf56c811b5e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.705573Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "655286c6-479a-47f7-9aca-3cf56c811b5e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.418930631Z"
  },
  {
    "insertId": "wxfkup1f438ljypp",
    "jsonPayload": {
      "record": {
        "line": 164,
        "name": "app",
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "message": "Incoming request /v1/health/live",
        "extra": {
          "on_prem_log": true
        },
        "module": "app",
        "function": "live",
        "exception": null,
        "time": {
          "timestamp": 1724258379.713604,
          "repr": "2024-08-21 16:39:39.713604+00:00"
        },
        "elapsed": {
          "repr": "1 day, 8:52:43.713848",
          "seconds": 118363.713848
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.713918225Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c84141e4-fe2e-43d7-9d59-4030996293b7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.714561Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c84141e4-fe2e-43d7-9d59-4030996293b7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.013017444Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3df5e9dc-c3f5-4fda-8123-ab58ce6d6f35",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.721426Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3df5e9dc-c3f5-4fda-8123-ab58ce6d6f35",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.707017061Z"
  },
  {
    "insertId": "u1dl3rbjuk0h65nb",
    "jsonPayload": {
      "text": "verifying login for david.p@codium.ai using google\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:39.723860+00:00",
          "timestamp": 1724258379.72386
        },
        "function": "verify_login",
        "extra": {
          "email": "david.p@codium.ai",
          "provider": "google",
          "request_id": "adac4ebe8dbc4a8d8d90805e291eeee4"
        },
        "file": {
          "name": "common.py",
          "path": "/copilot_proxy/api/auth/common.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "exception": null,
        "name": "copilot_proxy.api.auth.common",
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "line": 337,
        "module": "common",
        "elapsed": {
          "seconds": 119076.291161,
          "repr": "1 day, 9:04:36.291161"
        },
        "message": "verifying login for david.p@codium.ai using google"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.724150808Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "82185058-7c99-4d7a-8723-7db519d32c24",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:39.740676Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "82185058-7c99-4d7a-8723-7db519d32c24",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.532488565Z"
  },
  {
    "insertId": "zj928x0h3qudj2ye",
    "jsonPayload": {
      "record": {
        "name": "app",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "message": "Request handled",
        "exception": null,
        "function": "dispatch",
        "module": "app",
        "extra": {
          "on_prem_log": true,
          "method": "GET",
          "status_code": 200,
          "request_id": "N/A",
          "url": "http://10.164.15.3/v1/health/live",
          "source_host": "35.191.206.96"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "time": {
          "repr": "2024-08-21 16:39:39.745878+00:00",
          "timestamp": 1724258379.745878
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "elapsed": {
          "repr": "1 day, 8:52:43.746122",
          "seconds": 118363.746122
        },
        "line": 37,
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.746170047Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "v0tnstiwzfu5h6vt",
    "jsonPayload": {
      "text": "Getting document\n",
      "record": {
        "time": {
          "timestamp": 1724258379.746981,
          "repr": "2024-08-21 16:39:39.746981+00:00"
        },
        "elapsed": {
          "repr": "1 day, 9:04:36.314282",
          "seconds": 119076.314282
        },
        "line": 165,
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "extra": {
          "email": "david.p@codium.ai",
          "request_id": "adac4ebe8dbc4a8d8d90805e291eeee4",
          "document_id": "codium.ai",
          "provider": "google",
          "collection_name": "organizations"
        },
        "module": "firestore_service",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "message": "Getting document",
        "file": {
          "path": "/copilot_proxy/api/services/db/firestore_service.py",
          "name": "firestore_service.py"
        },
        "function": "get_document",
        "name": "copilot_proxy.api.services.db.firestore_service"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.747340649Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--3a546d32-n9r4"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/namespaces/kube-system/configmaps/fluentbit-gke-config-v1.4.0"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/fluentbit-gke-config-v1.4.0",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "00656d18-39ee-4702-a68b-238feafcbb81",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.750224Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "00656d18-39ee-4702-a68b-238feafcbb81",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.499437614Z"
  },
  {
    "insertId": "423xy51zgepp525b",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "time": {
          "timestamp": 1724258379.751756,
          "repr": "2024-08-21 16:39:39.751756+00:00"
        },
        "thread": {
          "name": "MainThread",
          "id": 138722961107840
        },
        "function": "live",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "extra": {
          "on_prem_log": true
        },
        "process": {
          "id": 10,
          "name": "MainProcess"
        },
        "module": "app",
        "elapsed": {
          "seconds": 282561.607252,
          "repr": "3 days, 6:29:21.607252"
        },
        "message": "Incoming request /v1/health/live",
        "line": 164,
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production-paychex"
      }
    },
    "timestamp": "2024-08-21T16:39:39.752077782Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0ff562e2-155b-4fee-8a18-3fa5f39b6fa0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.767394Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0ff562e2-155b-4fee-8a18-3fa5f39b6fa0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.671485615Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "96b27610-a7b4-45bd-b6c4-64518a2938e3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.779869Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "96b27610-a7b4-45bd-b6c4-64518a2938e3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.210210348Z"
  },
  {
    "insertId": "nszy0t4no8tr7rrr",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "process": {
          "id": 10,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 282561.640492,
          "repr": "3 days, 6:29:21.640492"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "thread": {
          "id": 138722961107840,
          "name": "MainThread"
        },
        "function": "dispatch",
        "exception": null,
        "line": 37,
        "module": "app",
        "extra": {
          "on_prem_log": true,
          "source_host": "35.191.206.83",
          "request_id": "N/A",
          "method": "GET",
          "url": "http://10.164.0.6/v1/health/live",
          "status_code": 200
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "message": "Request handled",
        "time": {
          "timestamp": 1724258379.784996,
          "repr": "2024-08-21 16:39:39.784996+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-paychex",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.785295486Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3ec9b1cb-7f77-496b-bc69-d534bf2f751c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.790633Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3ec9b1cb-7f77-496b-bc69-d534bf2f751c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.959413773Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/kube-system/endpoints/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/endpoints/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1047f813-1329-4428-9ebb-7030c3747ac2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.792979Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1047f813-1329-4428-9ebb-7030c3747ac2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.421509707Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0281ef78-2a23-43bd-845e-67b86839f80e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.796339Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0281ef78-2a23-43bd-845e-67b86839f80e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.107186549Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f32665aa-52b0-48a6-8ebe-0d317cbc19e2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.806235Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f32665aa-52b0-48a6-8ebe-0d317cbc19e2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.615255167Z"
  },
  {
    "insertId": "fkk89b0i2irfpyz7",
    "jsonPayload": {
      "record": {
        "exception": null,
        "module": "firestore_service",
        "elapsed": {
          "repr": "1 day, 9:04:36.373233",
          "seconds": 119076.373233
        },
        "message": "Document does not exist",
        "file": {
          "path": "/copilot_proxy/api/services/db/firestore_service.py",
          "name": "firestore_service.py"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "time": {
          "repr": "2024-08-21 16:39:39.805932+00:00",
          "timestamp": 1724258379.805932
        },
        "name": "copilot_proxy.api.services.db.firestore_service",
        "line": 173,
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "extra": {
          "email": "david.p@codium.ai",
          "request_id": "adac4ebe8dbc4a8d8d90805e291eeee4",
          "collection_name": "organizations",
          "provider": "google",
          "document_id": "codium.ai"
        },
        "function": "get_document"
      },
      "text": "Document does not exist\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.806290218Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:55976 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "8m5oefffeb9n12ki",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.831138145Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "78wig4fxsf2ue",
    "jsonPayload": {
      "remoteIp": "140.82.115.250",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "27942",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.250",
      "serverIp": "10.164.16.13",
      "latency": "0.062654s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:39.848310Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/59f69bf7ac829804de7fa9a87b8c123b",
    "receiveTimestamp": "2024-08-21T16:39:40.349189879Z",
    "spanId": "4450b0ce4a5c3016"
  },
  {
    "insertId": "a88bbix8f96hqb6s",
    "jsonPayload": {
      "text": "org with domain codium.ai not found\n",
      "record": {
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "extra": {
          "provider": "google",
          "request_id": "adac4ebe8dbc4a8d8d90805e291eeee4",
          "email": "david.p@codium.ai"
        },
        "name": "copilot_proxy.api.services.organizations_service",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "time": {
          "timestamp": 1724258379.859353,
          "repr": "2024-08-21 16:39:39.859353+00:00"
        },
        "file": {
          "path": "/copilot_proxy/api/services/organizations_service.py",
          "name": "organizations_service.py"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "line": 42,
        "exception": null,
        "function": "get_organization_by_domain",
        "elapsed": {
          "seconds": 119076.426654,
          "repr": "1 day, 9:04:36.426654"
        },
        "message": "org with domain codium.ai not found",
        "module": "organizations_service"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.859691496Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a5dd95f7-3b23-4ed3-a568-b9430c5d9559",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.868096Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a5dd95f7-3b23-4ed3-a568-b9430c5d9559",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.512178723Z"
  },
  {
    "insertId": "nsl37tue4q8y1vuq",
    "jsonPayload": {
      "_GID": "0",
      "_HOSTNAME": "gke-production-clust-production-pool--3a546d32-ppvn",
      "_SYSTEMD_INVOCATION_ID": "79950d4ebe7c449289e9098b3da93ea7",
      "PRIORITY": "6",
      "_CMDLINE": "/home/kubernetes/bin/kubelet --v=2 --cloud-provider=external --experimental-mounter-path=/home/kubernetes/containerized_mounter/mounter --cert-dir=/var/lib/kubelet/pki/ --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=100 --volume-plugin-dir=/home/kubernetes/flexvolume --node-status-max-images=25 --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --registry-qps=10 --registry-burst=20 --config /home/kubernetes/kubelet-config.yaml \"--pod-sysctls=net.core.somaxconn=1024,net.ipv4.conf.all.accept_redirects=0,net.ipv4.conf.all.forwarding=1,net.ipv4.conf.all.route_localnet=1,net.ipv4.conf.default.forwarding=1,net.ipv4.ip_forward=1,net.ipv4.tcp_fin_timeout=60,net.ipv4.tcp_keepalive_intvl=60,net.ipv4.tcp_keepalive_probes=5,net.ipv4.tcp_keepalive_time=300,net.ipv4.tcp_rmem=4096 87380 6291456,net.ipv4.tcp_syn_retries=6,net.ipv4.tcp_tw_reuse=0,net.ipv4.tcp_wmem=4096 16384 4194304,net.ipv4.udp_rmem_min=4096,net.ipv4.udp_wmem_min=4096,net.ipv6.conf.all.disable_ipv6=1,net.ipv6.conf.default.accept_ra=0,net.ipv6.conf.default.disable_ipv6=1,net.netfilter.nf_conntrack_generic_timeout=600,net.netfilter.nf_conntrack_tcp_be_liberal=1,net.netfilter.nf_conntrack_tcp_timeout_close_wait=3600,net.netfilter.nf_conntrack_tcp_timeout_established=86400\" --pod-infra-container-image=gke.gcr.io/pause:3.8@sha256:880e63f94b145e46f1b1082bb71b85e21f16b99b180b9996407d61240ceb9830 --version=v1.27.16-gke.1008000",
      "_CAP_EFFECTIVE": "1ffffffffff",
      "_BOOT_ID": "a693db6899a7437fa945a12f1a15eb65",
      "MESSAGE": "I0821 16:39:39.869140    2563 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-production-clust-production-pool--3a546d32-ppvn\" status=Running",
      "_MACHINE_ID": "6d8eafbdc02f47ad3e7210cd7eb13cb3",
      "_SYSTEMD_SLICE": "system.slice",
      "_PID": "2563",
      "_TRANSPORT": "stdout",
      "_UID": "0",
      "_SYSTEMD_UNIT": "kubelet.service",
      "_SYSTEMD_CGROUP": "/system.slice/kubelet.service",
      "_STREAM_ID": "aa915ef2f90a4dfa98f9d499d9d830f5",
      "_COMM": "kubelet",
      "_EXE": "/home/kubernetes/bin/kubelet",
      "SYSLOG_IDENTIFIER": "kubelet",
      "SYSLOG_FACILITY": "3",
      "_RUNTIME_SCOPE": "system"
    },
    "resource": {
      "type": "k8s_node",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "node_name": "gke-production-clust-production-pool--3a546d32-ppvn"
      }
    },
    "timestamp": "2024-08-21T16:39:39.869262Z",
    "logName": "projects/codium-production/logs/kubelet",
    "receiveTimestamp": "2024-08-21T16:39:40.262674904Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5a1ec429-3497-42de-8ea4-5eeafa449de1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:39.886878Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5a1ec429-3497-42de-8ea4-5eeafa449de1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.905664221Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:51314 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "sxje06id1j85y395",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-recursion",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:39.912097058Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.816256677Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5c9a1b84-e4ef-4087-a146-773f098a5e02",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.925343Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5c9a1b84-e4ef-4087-a146-773f098a5e02",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.711662883Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.182.154",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:39.960454515Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1yhc1raf313ecn",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:39.954505905Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:40.504424142Z"
  },
  {
    "insertId": "5l2kv7reh6xhc23p",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "elapsed": {
          "repr": "1 day, 9:04:36.523449",
          "seconds": 119076.523449
        },
        "extra": {
          "url": "https://proxy.codium.ai/v1/auth/google-login/Codium.codium?state=d2luZG93SWQ9Mjt2c2NvZGU%3D&code=4%2F0AQlEd8yNCcsxUPxu6x3mA_NUhm4C4WKExgAN0_kAdaFJJQLhN8vEeS_hz71OljXbnF4obA&scope=email+profile+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&authuser=0&hd=codium.ai&prompt=none",
          "request_id": "N/A",
          "status_code": 307,
          "method": "GET",
          "source_host": "76.183.203.89",
          "on_prem_log": true
        },
        "message": "Request handled",
        "name": "app",
        "line": 37,
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "exception": null,
        "function": "dispatch",
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:39.956148+00:00",
          "timestamp": 1724258379.956148
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.956479063Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "dj7anxijcwb9hf3o",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:00:01.446883",
          "seconds": 118801.446883
        },
        "module": "litellm_infer_engine",
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "extra": {
          "url_path": "/v2/code/completion",
          "user": {
            "iat": 1724255292,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_level": 10,
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "tier_end_date": 1701693510000,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              }
            },
            "email_verified": false,
            "allowed": true,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "aud": "codium-dev-360812",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "auth_time": 1724251717,
            "email": "y.borozna81@internet.ru",
            "exp": 1724258892,
            "codiumate": null
          },
          "request_id": "5a69115a-6710-4e48-9949-e2e8b85b7965",
          "openai_response": {
            "id": "cmpl-9yiexRyM1sWN18LsJBrUm6CXr8WBb",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='</a>\\n                </li>', logprobs=None)"
            ],
            "created": 1724258379,
            "model": "gpt-3.5-turbo-instruct",
            "usage": {
              "total_tokens": 1768,
              "completion_tokens": 7,
              "prompt_tokens": 1761
            },
            "object": "text_completion"
          },
          "completion": "</a>\n                </li>",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главна",
          "model": "gpt-3.5-turbo-instruct",
          "openai_request_id": "cmpl-9yiexRyM1sWN18LsJBrUm6CXr8WBb",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          }
        },
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        },
        "time": {
          "repr": "2024-08-21 16:39:39.959838+00:00",
          "timestamp": 1724258379.959838
        },
        "function": "generate",
        "line": 131,
        "message": "OpenAI Response",
        "file": {
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py",
          "name": "litellm_infer_engine.py"
        },
        "exception": null,
        "name": "ai.litellm.litellm_infer_engine"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:39.960311972Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c1dbe100-0439-421e-aefe-107f0398e8dc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:39.962590Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c1dbe100-0439-421e-aefe-107f0398e8dc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.282172737Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "73efd96a-ad25-4773-9d06-4181e36fa1a5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:39.963560Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "73efd96a-ad25-4773-9d06-4181e36fa1a5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.624613175Z"
  },
  {
    "insertId": "kxrjzvtxpuvbyvsy",
    "jsonPayload": {
      "text": "Prompts and results v2\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:00:01.465168",
          "seconds": 118801.465168
        },
        "function": "process",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "message": "Prompts and results v2",
        "name": "copilot_proxy.utils.inference_utils",
        "process": {
          "id": 22,
          "name": "MainProcess"
        },
        "line": 1112,
        "extra": {
          "url_path": "/v2/code/completion",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "results": {
            "user_input": {
              "configuration": {},
              "is_multiline": false,
              "remote_context": [],
              "language": "django-html",
              "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
              "reference_snippet_messages": [
                {
                  "type": "DirectoryStructure",
                  "file_name": "Project directory structure:",
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                  "file_name": "templates\\base.html",
                  "type": "File"
                },
                {
                  "type": "Clipboard",
                  "file_name": "templates\\base.html",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                  "file_name": "templates\\base.html",
                  "type": "Clipboard"
                }
              ],
              "max_remote_context": 5,
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главна",
              "file_diff_content": "",
              "relative_file_path": "dish/templates/core/frontpage.html",
              "context": [],
              "max_repo_context": 5,
              "is_file_diff": false,
              "extra_instructions": "",
              "context_mode": "pre_pr",
              "repo_context": [],
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "task": "",
              "user_context": []
            },
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "02_completion": "</a>\n                </li>",
                "04_end_time": "2024-08-21 16:39:39.978058",
                "03_start_time": "2024-08-21 16:39:39.475473",
                "00_system": null,
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главна"
              }
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ]
          },
          "user": {
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "email_verified": false,
            "aud": "codium-dev-360812",
            "iat": 1724255292,
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true,
            "tier_end_date": 1701693510000,
            "codiumate": null,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              }
            },
            "tier_level": 10,
            "email": "y.borozna81@internet.ru",
            "auth_time": 1724251717,
            "exp": 1724258892
          },
          "request_id": "5a69115a-6710-4e48-9949-e2e8b85b7965"
        },
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "module": "inference_utils",
        "exception": null,
        "time": {
          "timestamp": 1724258379.978123,
          "repr": "2024-08-21 16:39:39.978123+00:00"
        },
        "level": {
          "icon": "🐞",
          "name": "DEBUG",
          "no": 10
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:39.978661763Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "ksg5lo7f887y3qfu",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "exception": null,
        "module": "app",
        "function": "dispatch",
        "message": "Request handled",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "extra": {
          "status_code": 200,
          "request_id": "5a69115a-6710-4e48-9949-e2e8b85b7965",
          "on_prem_log": true,
          "source_host": "37.214.22.173",
          "url": "https://api.codium.ai/v2/code/completion",
          "method": "POST"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "elapsed": {
          "repr": "1 day, 9:00:01.488738",
          "seconds": 118801.488738
        },
        "line": 37,
        "process": {
          "id": 22,
          "name": "MainProcess"
        },
        "time": {
          "timestamp": 1724258380.001693,
          "repr": "2024-08-21 16:39:40.001693+00:00"
        },
        "name": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:40.001967866Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "16b41ace-e88f-48ab-9c23-4af997c7d624",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.011718Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "16b41ace-e88f-48ab-9c23-4af997c7d624",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.153399655Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f8431a71-62a8-4910-93bf-d79a0004b6e5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.013308Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f8431a71-62a8-4910-93bf-d79a0004b6e5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.661319105Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e4785f43-6c96-4596-aacc-e4ce6e1bf5f4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.017550Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e4785f43-6c96-4596-aacc-e4ce6e1bf5f4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.252556759Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8508ffa7-493c-4557-acd9-6608e7a218d9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.026504Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8508ffa7-493c-4557-acd9-6608e7a218d9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.835852993Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f98bade8-cc05-4370-b5bd-b7bd7a9406c5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.038915Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f98bade8-cc05-4370-b5bd-b7bd7a9406c5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.074078347Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b9cbfa2a-c1e4-4ebd-adab-d9f0f7452d80",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.045382Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b9cbfa2a-c1e4-4ebd-adab-d9f0f7452d80",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.715842343Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e304eda4-0d1d-4e69-8d06-b018f9d10b84",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.049122Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e304eda4-0d1d-4e69-8d06-b018f9d10b84",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.206247838Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "79ead47c-1727-4b2f-aef4-cc1d8a12aed2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.049438Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "79ead47c-1727-4b2f-aef4-cc1d8a12aed2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.606874751Z"
  },
  {
    "insertId": "pj5r2pnahiyup849",
    "jsonPayload": {
      "record": {
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "line": 164,
        "extra": {
          "on_prem_log": true
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "message": "Incoming request /v1/health/live",
        "elapsed": {
          "repr": "1 day, 9:04:36.616914",
          "seconds": 119076.616914
        },
        "function": "live",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "module": "app",
        "time": {
          "timestamp": 1724258380.049613,
          "repr": "2024-08-21 16:39:40.049613+00:00"
        },
        "name": "app",
        "exception": null
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:40.049898553Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c291280c-194c-4df5-99fd-e121c4434d33",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.054355Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c291280c-194c-4df5-99fd-e121c4434d33",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.109994172Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7620a4cd-bad2-4b93-8bdf-020fc63961e2",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.058449Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7620a4cd-bad2-4b93-8bdf-020fc63961e2",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.120503665Z"
  },
  {
    "insertId": "nc6g25ajsp0rysa3",
    "jsonPayload": {
      "record": {
        "function": "dispatch",
        "message": "Request handled",
        "line": 37,
        "elapsed": {
          "seconds": 119076.642266,
          "repr": "1 day, 9:04:36.642266"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "extra": {
          "request_id": "N/A",
          "method": "GET",
          "url": "http://10.164.17.14:5432/v1/health/live",
          "source_host": "10.164.17.1",
          "on_prem_log": true,
          "status_code": 200
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "exception": null,
        "module": "app",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "time": {
          "repr": "2024-08-21 16:39:40.074965+00:00",
          "timestamp": 1724258380.074965
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:40.075253402Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d24c6244-934f-4589-b749-4b4f3d0f19be",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.081565Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d24c6244-934f-4589-b749-4b4f3d0f19be",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.312416181Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "82e3f504-c5c6-43d2-99a0-946346057d9b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.088474Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "82e3f504-c5c6-43d2-99a0-946346057d9b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.506748377Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:cert-manager:cert-manager-cainjector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cert-manager-cainjector-leader-election"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "cainjector/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cert-manager-cainjector-leader-election",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "07f847ff-7c97-4fde-ba19-99715db223f7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.103317Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"cert-manager-cainjector:leaderelection/kube-system\" of Role \"cert-manager-cainjector:leaderelection\" to ServiceAccount \"cert-manager-cainjector/cert-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "07f847ff-7c97-4fde-ba19-99715db223f7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.910940338Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cb5c8b69-859e-417b-9e56-0e53d7abbd65",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.103868Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cb5c8b69-859e-417b-9e56-0e53d7abbd65",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.410736952Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:42758 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "kgek1gp7jgz5xdei",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:40.109634664Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e17ef711-b6fe-4d75-aec6-c30b5d876266",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.114204Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e17ef711-b6fe-4d75-aec6-c30b5d876266",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.736644376Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d98cba54-081c-48a1-9230-48f0feda9213",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.115957Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d98cba54-081c-48a1-9230-48f0feda9213",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:40.932406178Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "22549428-97fe-464c-b42b-5a0e68c38d50",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.118601Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "22549428-97fe-464c-b42b-5a0e68c38d50",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.051600041Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.services.get",
          "resource": "core/v1/namespaces/default/services/kubernetes"
        }
      ],
      "methodName": "io.k8s.core.v1.services.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/default/services/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "be07e09a-e3f8-406b-ba7b-3f1c6e6342b0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.133420Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "be07e09a-e3f8-406b-ba7b-3f1c6e6342b0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.816976278Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.88.63",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:40.150628773Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "5utfe2f2r2egw",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.143371505Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.247212985Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "cca21e37-323c-4ccb-9321-21b6aa7a86fa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.155210Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "cca21e37-323c-4ccb-9321-21b6aa7a86fa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.455706492Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fed4a772-199a-4ecf-90ae-c12141a7bd0e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.159269Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fed4a772-199a-4ecf-90ae-c12141a7bd0e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.182214400Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/default/endpoints/kubernetes"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/default/endpoints/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5707f287-18ab-4036-93e7-86ed8dc36132",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.168401Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5707f287-18ab-4036-93e7-86ed8dc36132",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.812120765Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.get",
          "resource": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "546ac65e-743c-4e6b-961d-d2594b529075",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.181961Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "546ac65e-743c-4e6b-961d-d2594b529075",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.610215177Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7203175-7b24-4255-9c54-9dc6dcea33b5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.185518Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7203175-7b24-4255-9c54-9dc6dcea33b5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.410736952Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.30.119.171",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:40.206407748Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "a967ge673yq",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.201071149Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.006088988Z"
  },
  {
    "textPayload": "INFO:     10.170.0.24:43908 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "vua3rxq8l3rfrzih",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5c5c7445cc-qhr9g",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1",
        "namespace_name": "production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.218746354Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5c5c7445cc",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.878553092Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dcb0460d-c2b2-41d0-947d-2b6a856f305b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.225092Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dcb0460d-c2b2-41d0-947d-2b6a856f305b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.010120978Z"
  },
  {
    "insertId": "447ypw5ltnha2swe",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "gcp-filestore-driver",
        "namespace_name": "kube-system",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "filestore-node-9vgrz",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.225912999Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.206118097Z"
  },
  {
    "insertId": "gy7n39wjq9gm75zd",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system",
        "location": "us-central1",
        "container_name": "gcp-filestore-driver",
        "pod_name": "filestore-node-9vgrz"
      }
    },
    "timestamp": "2024-08-21T16:39:40.225939360Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.206118097Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a06d1af5-66d5-4d1d-b78e-24261fcd0099",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.234143Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a06d1af5-66d5-4d1d-b78e-24261fcd0099",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.841782690Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kube-scheduler",
              "operation": "Update",
              "time": "2024-08-21T16:39:40Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f6f4bf60-1934-42f3-947c-2200b55de4b7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.239241Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f6f4bf60-1934-42f3-947c-2200b55de4b7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.018381496Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a70a504f-35db-434a-830a-e9dc38045fe5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.262545Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a70a504f-35db-434a-830a-e9dc38045fe5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.918965911Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:master-prom-to-sd-monitor"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "metrics"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "Go-http-client/2.0"
      },
      "resourceName": "metrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0b0eb13c-ee46-41dc-8a32-bbfe03513bd8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.263198Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0b0eb13c-ee46-41dc-8a32-bbfe03513bd8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.510511862Z"
  },
  {
    "insertId": "1cjvib9k7z1e6ov7",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "pod_name": "filestore-node-9h5pz",
        "namespace_name": "kube-system"
      }
    },
    "timestamp": "2024-08-21T16:39:40.263816835Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.314810284Z"
  },
  {
    "insertId": "kzqnwe3d565btba9",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "pod_name": "filestore-node-9h5pz",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.263860762Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.314810284Z"
  },
  {
    "insertId": "1mk505xf12hcz2",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "TJ"
        }
      },
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 500,
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "name": "codium-app-cloud-armor-policy"
      },
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "enforcedSecurityPolicy": {
        "priority": 14000,
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "62.89.209.162"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "10138",
      "status": 200,
      "responseSize": "524",
      "userAgent": "axios/1.6.2",
      "remoteIp": "62.89.209.162",
      "serverIp": "10.164.10.5",
      "latency": "0.993837s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:40.267050Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/50cf2173171932485be34a131b4c58f2",
    "receiveTimestamp": "2024-08-21T16:39:44.478142557Z",
    "spanId": "825f03b648de6889"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "eb3b8140-4013-4ff5-aa17-1aa3631a6a22",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.268959Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "eb3b8140-4013-4ff5-aa17-1aa3631a6a22",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.007435103Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "64b330db-c080-45e9-bb1d-9050f5292a35",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.274281Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "64b330db-c080-45e9-bb1d-9050f5292a35",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.909410728Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "85ebc55b-2912-4db6-b001-4545bda16248",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.275288Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "85ebc55b-2912-4db6-b001-4545bda16248",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.718601526Z"
  },
  {
    "insertId": "6ghvhq5162namlny",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "gcp-filestore-driver",
        "pod_name": "filestore-node-6tztw",
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.276670009Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:42.686872975Z"
  },
  {
    "insertId": "t85c82qcwf3fm8v3",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "filestore-node-6tztw",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "gcp-filestore-driver",
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system"
      }
    },
    "timestamp": "2024-08-21T16:39:40.276722601Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:42.686872975Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "63a24ce7-4c78-4909-809d-2ef8c985147c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.277612Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "63a24ce7-4c78-4909-809d-2ef8c985147c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.612056285Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:master-prom-to-sd-monitor"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "metrics"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "Go-http-client/2.0"
      },
      "resourceName": "metrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bc9538c2-5270-477c-9dae-63143e63432f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.279896Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bc9538c2-5270-477c-9dae-63143e63432f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.815578196Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a494178b-c7a6-42a8-8086-25c48b4f301c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.287570Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a494178b-c7a6-42a8-8086-25c48b4f301c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.015161356Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.88.63",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:40.301391742Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "j6734nf2r07cj",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:40.296976402Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.395285357Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a181a2e8-a1a8-46fc-b68e-b92992ae55dd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.306072Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a181a2e8-a1a8-46fc-b68e-b92992ae55dd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.510511862Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics/slis",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kube-scheduler",
              "operation": "Update",
              "time": "2024-08-21T16:39:40Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics/slis",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2a3e5e91-01e9-4ad2-8876-4157a5eac3f9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.321624Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2a3e5e91-01e9-4ad2-8876-4157a5eac3f9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.916965423Z"
  },
  {
    "insertId": "ah0p4kp4turqxvxc",
    "jsonPayload": {
      "record": {
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132437036222144
        },
        "module": "core",
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core",
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "line": 156,
        "elapsed": {
          "seconds": 118801.815266,
          "repr": "1 day, 9:00:01.815266"
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "extra": {},
        "time": {
          "repr": "2024-08-21 16:39:40.347025+00:00",
          "timestamp": 1724258380.347025
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        }
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:40.347271872Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "1y9wi9awc0gns5xw",
    "jsonPayload": {
      "record": {
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "extra": {},
        "function": "verify_minimum_tier_level",
        "name": "copilot_proxy.auth.core",
        "line": 106,
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "time": {
          "timestamp": 1724258380.347372,
          "repr": "2024-08-21 16:39:40.347372+00:00"
        },
        "thread": {
          "id": 132437036222144,
          "name": "AnyIO worker thread"
        },
        "elapsed": {
          "seconds": 118801.815613,
          "repr": "1 day, 9:00:01.815613"
        },
        "message": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "module": "core"
      },
      "text": "User anjasajfullin@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:40.347500066Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "oc3k2z67bzjk7wjm",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "elapsed": {
          "seconds": 118801.818893,
          "repr": "1 day, 9:00:01.818893"
        },
        "extra": {
          "on_prem_log": true,
          "user": {
            "iat": 1724257455,
            "organization_id": null,
            "allowed": true,
            "baseUrl": null,
            "aud": "codium-dev-360812",
            "name": "HoneyMoon is still aliwe",
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "exp": 1724261055,
            "email_verified": false,
            "tier_level": 10,
            "optout": false,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "github.com": [
                  "155015223"
                ],
                "email": [
                  "anjasajfullin@gmail.com"
                ]
              }
            },
            "auth_time": 1724257455,
            "tier_end_date": 1724734597000,
            "codiumate": null,
            "email": "anjasajfullin@gmail.com",
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2"
          },
          "request_id": "29cd215a-eaaf-438a-8c66-6c9b4a817ee8",
          "data": {
            "file_diff_content": "",
            "extra_instructions": "",
            "doc_context_suffix": "}>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
            "max_repo_context": 5,
            "user_context": [],
            "is_file_diff": false,
            "is_multiline": true,
            "relative_file_path": "src/components/spacemen/spaceman.jsx",
            "context_mode": "pre_pr",
            "reference_snippet_messages": [
              {
                "file_name": "Imports and implementations used in this file:",
                "type": "CodiummateImport",
                "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman"
              },
              {
                "file_name": "Project directory structure:",
                "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js",
                "type": "DirectoryStructure"
              },
              {
                "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />",
                "type": "File",
                "file_name": "src/components/stagerbar/stagerbar.jsx"
              },
              {
                "type": "File",
                "file_name": "src/store/reducers/todoById/todoByIdSlice.js",
                "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;"
              },
              {
                "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>",
                "type": "File",
                "file_name": "src/pages/main/main.jsx"
              },
              {
                "type": "File",
                "file_name": "tailwind.config.js",
                "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}"
              }
            ],
            "language": "javascriptreact",
            "remote_context": [],
            "max_remote_context": 5,
            "task": "",
            "context": [],
            "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation={",
            "user_data": {
              "extension_version": "0.9.13",
              "os_version": "v18.15.0",
              "installation_id": "15788762-fe0e-4403-bf86-bc88815499a2",
              "os_platform": "linux",
              "user_id": null,
              "editor_version": "1.82.2",
              "editor_sub_version": null,
              "editor_type": "vscode"
            },
            "repo_context": []
          },
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          }
        },
        "module": "v2",
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "time": {
          "timestamp": 1724258380.350652,
          "repr": "2024-08-21 16:39:40.350652+00:00"
        },
        "name": "copilot_proxy.api.code.v2",
        "message": "Incoming request /v2/code/completion",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "function": "run_code_completion",
        "exception": null,
        "line": 513
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.351059933Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "insertId": "r7dms0f313it2",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "configuredAction": "THROTTLE"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BY"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "priority": 14000,
        "outcome": "ACCEPT"
      },
      "remoteIp": "37.214.22.173",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "8908",
      "status": 200,
      "responseSize": "463",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.214.22.173",
      "serverIp": "10.164.16.6",
      "latency": "0.741081s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:40.369161Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/e5c1cb12bd104ca18b3a7b17148d107b",
    "receiveTimestamp": "2024-08-21T16:39:42.388274548Z",
    "spanId": "d0427bcb02b07b2a"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3c61a996-e2f2-4729-9f71-d9f836a8bcb5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.374572Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3c61a996-e2f2-4729-9f71-d9f836a8bcb5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.257951448Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "770733c6-60f8-454a-8e99-8775d047b793",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.375835Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "770733c6-60f8-454a-8e99-8775d047b793",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.282341770Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5a63a86e-57f0-4597-b252-07395d5d1fa4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.397060Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5a63a86e-57f0-4597-b252-07395d5d1fa4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.717215337Z"
  },
  {
    "insertId": "b6ri91msl4pnukw6",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "repr": "1 day, 9:03:25.806734",
          "seconds": 119005.806734
        },
        "extra": {
          "on_prem_log": true
        },
        "name": "app",
        "time": {
          "timestamp": 1724258380.428319,
          "repr": "2024-08-21 16:39:40.428319+00:00"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "line": 164,
        "thread": {
          "name": "MainThread",
          "id": 136961113226112
        },
        "exception": null,
        "module": "app",
        "function": "live",
        "message": "Incoming request /v1/health/live",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7",
        "container_name": "proxy",
        "namespace_name": "production-jb",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.428595481Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.758527051Z"
  },
  {
    "insertId": "8il9g8frwgwz9vvu",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "exception": null,
        "function": "verify_user_token",
        "module": "core",
        "elapsed": {
          "repr": "1 day, 8:48:27.681801",
          "seconds": 118107.681801
        },
        "line": 156,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 139240616748736
        },
        "extra": {},
        "name": "copilot_proxy.auth.core",
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "timestamp": 1724258380.431215,
          "repr": "2024-08-21 16:39:40.431215+00:00"
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:40.431494630Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "2ly8u12i1vcibumf",
    "jsonPayload": {
      "text": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "function": "verify_minimum_tier_level",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "message": "User y.borozna81@internet.ru will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "line": 106,
        "name": "copilot_proxy.auth.core",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "module": "core",
        "thread": {
          "id": 139240616748736,
          "name": "AnyIO worker thread"
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "exception": null,
        "extra": {},
        "elapsed": {
          "repr": "1 day, 8:48:27.682239",
          "seconds": 118107.682239
        },
        "time": {
          "timestamp": 1724258380.431653,
          "repr": "2024-08-21 16:39:40.431653+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.431851401Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c69d5403-c30f-4239-bb6f-d7715bf3e821",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.432865Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c69d5403-c30f-4239-bb6f-d7715bf3e821",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.510511862Z"
  },
  {
    "insertId": "ho1ls7t8tfr3hsoa",
    "jsonPayload": {
      "record": {
        "name": "copilot_proxy.api.code.v2",
        "line": 513,
        "module": "v2",
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "elapsed": {
          "repr": "1 day, 8:48:27.685904",
          "seconds": 118107.685904
        },
        "message": "Incoming request /v2/code/completion",
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "function": "run_code_completion",
        "extra": {
          "user": {
            "email": "y.borozna81@internet.ru",
            "email_verified": false,
            "exp": 1724258892,
            "tier_level": 10,
            "tier_end_date": 1701693510000,
            "auth_time": 1724251717,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "iat": 1724255292,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "aud": "codium-dev-360812",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "y.borozna81@internet.ru"
                ],
                "github.com": [
                  "87546148"
                ]
              }
            },
            "codiumate": null,
            "allowed": true,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2"
          },
          "data": {
            "is_file_diff": false,
            "relative_file_path": "dish/templates/core/frontpage.html",
            "repo_context": [],
            "file_diff_content": "",
            "user_data": {
              "extension_version": "0.9.13",
              "user_id": null,
              "os_platform": "win32",
              "editor_sub_version": null,
              "os_version": "v20.14.0",
              "editor_type": "vscode",
              "editor_version": "1.92.2",
              "installation_id": "b0bf2edc-778f-4b18-b87f-f429c035dbdd"
            },
            "extra_instructions": "",
            "language": "django-html",
            "user_context": [],
            "task": "",
            "is_multiline": false,
            "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главная",
            "context": [],
            "max_repo_context": 5,
            "max_remote_context": 5,
            "remote_context": [],
            "context_mode": "pre_pr",
            "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
            "reference_snippet_messages": [
              {
                "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:"
              },
              {
                "type": "File",
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                "file_name": "templates\\base.html"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "file_name": "templates\\base.html",
                "type": "Clipboard"
              },
              {
                "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl",
                "file_name": "templates\\base.html",
                "type": "Clipboard"
              }
            ]
          },
          "on_prem_log": true,
          "request_id": "0c41a5cc-3c4d-4ab6-b4c6-d377502f61c8",
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          }
        },
        "time": {
          "timestamp": 1724258380.435318,
          "repr": "2024-08-21 16:39:40.435318+00:00"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        }
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.435698785Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "46wh91f7b4dfw",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "140.82.115.154",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "15461",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.154",
      "serverIp": "10.164.16.13",
      "latency": "0.059105s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716",
        "zone": "global",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo"
      }
    },
    "timestamp": "2024-08-21T16:39:40.438737Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/4101c8a8e9f72086f03143662b382d82",
    "receiveTimestamp": "2024-08-21T16:39:41.508512733Z",
    "spanId": "d54544667d3fdbe1"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c0bb0c83-e408-4b5f-9767-68ebde126154",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.439274Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c0bb0c83-e408-4b5f-9767-68ebde126154",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.304852830Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:54086 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "1gmnj3i9jvx43x91",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.444536170Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "1r9ly75f29wh96",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "177.101.141.152",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd"
      },
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "priority": 15000
      },
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "priority": 500
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1620",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.101.141.152",
      "serverIp": "10.164.1.4",
      "latency": "0.168900s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:40.447958Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/5e81efebf05c354b345697ea1c448f89",
    "receiveTimestamp": "2024-08-21T16:39:41.765472258Z",
    "spanId": "e1c73a9e77023476"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.88.63",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:40.458299799Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "b5xarif2qlq4w",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:40.450091129Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:40.815909098Z"
  },
  {
    "insertId": "dk7w7dwqx0zqt7oi",
    "jsonPayload": {
      "record": {
        "message": "Request handled",
        "line": 37,
        "extra": {
          "on_prem_log": true,
          "method": "GET",
          "request_id": "N/A",
          "source_host": "10.164.17.1",
          "url": "http://10.164.17.15:5432/v1/health/live",
          "status_code": 200
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "elapsed": {
          "seconds": 119005.83384,
          "repr": "1 day, 9:03:25.833840"
        },
        "exception": null,
        "name": "app",
        "thread": {
          "id": 136961113226112,
          "name": "MainThread"
        },
        "function": "dispatch",
        "module": "app",
        "time": {
          "timestamp": 1724258380.455425,
          "repr": "2024-08-21 16:39:40.455425+00:00"
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7",
        "namespace_name": "production-jb"
      }
    },
    "timestamp": "2024-08-21T16:39:40.455729730Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.758527051Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e0ec3c7b-3e5e-4223-9924-f609aee811b8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.495772Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e0ec3c7b-3e5e-4223-9924-f609aee811b8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.206276866Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "2989ea50-38ba-4769-9c99-b3a597312543",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.504114Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "2989ea50-38ba-4769-9c99-b3a597312543",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.416029407Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1f958354-a325-4fa6-9d5c-4382c910269f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.507940Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1f958354-a325-4fa6-9d5c-4382c910269f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.813772499Z"
  },
  {
    "insertId": "o92fhu6ud7ogdpf5",
    "jsonPayload": {
      "text": "User lucas.miranda@inobram.com.br will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:08:30.322696",
          "seconds": 119310.322696
        },
        "extra": {},
        "thread": {
          "name": "AnyIO worker thread",
          "id": 136597458638528
        },
        "exception": null,
        "line": 156,
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "time": {
          "timestamp": 1724258380.526941,
          "repr": "2024-08-21 16:39:40.526941+00:00"
        },
        "module": "core",
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core",
        "message": "User lucas.miranda@inobram.com.br will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.527223541Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "a4o6cowhyfhmspl0",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "dispatch",
        "elapsed": {
          "repr": "1 day, 9:08:30.323263",
          "seconds": 119310.323263
        },
        "message": "Request handled",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "exception": null,
        "line": 37,
        "time": {
          "timestamp": 1724258380.527508,
          "repr": "2024-08-21 16:39:40.527508+00:00"
        },
        "module": "app",
        "extra": {
          "on_prem_log": true,
          "request_id": "4acc576c-3e93-4af0-a854-e5bda986852a",
          "source_host": "177.101.141.152",
          "method": "GET",
          "status_code": 200,
          "url": "https://api.codium.ai/v2/rag/settings"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:40.527737247Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "wphow94d1xqq7gra",
    "jsonPayload": {
      "record": {
        "message": "Incoming request /v1/health/live",
        "elapsed": {
          "repr": "3 days, 6:29:21.537255",
          "seconds": 282561.537255
        },
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "line": 164,
        "thread": {
          "name": "MainThread",
          "id": 138722961107840
        },
        "module": "app",
        "extra": {
          "on_prem_log": true
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "time": {
          "timestamp": 1724258380.551503,
          "repr": "2024-08-21 16:39:40.551503+00:00"
        },
        "function": "live",
        "process": {
          "id": 13,
          "name": "MainProcess"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production-paychex",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6"
      }
    },
    "timestamp": "2024-08-21T16:39:40.551803836Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "dd1b79d1-4c48-46f4-9496-746d550e9b18",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.570198Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "dd1b79d1-4c48-46f4-9496-746d550e9b18",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.902116099Z"
  },
  {
    "insertId": "dlvtto9ozk2pbezm",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "time": {
          "repr": "2024-08-21 16:39:40.588373+00:00",
          "timestamp": 1724258380.588373
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "extra": {
          "status_code": 200,
          "on_prem_log": true,
          "url": "http://10.164.0.6/v1/health/live",
          "method": "GET",
          "source_host": "35.191.206.232",
          "request_id": "N/A"
        },
        "module": "app",
        "exception": null,
        "message": "Request handled",
        "name": "app",
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "thread": {
          "id": 138722961107840,
          "name": "MainThread"
        },
        "line": 37,
        "elapsed": {
          "seconds": 282561.574125,
          "repr": "3 days, 6:29:21.574125"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production-paychex"
      }
    },
    "timestamp": "2024-08-21T16:39:40.588722782Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bb0daf91-1dd8-4e6e-bcec-dd410f1fdd17",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.601725Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bb0daf91-1dd8-4e6e-bcec-dd410f1fdd17",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.209720130Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f7a12f40-9854-433d-9f50-02e0477d2cbb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.613156Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f7a12f40-9854-433d-9f50-02e0477d2cbb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.913335041Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9c6967a4-16be-43f6-8147-47b9dd887383",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.637950Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9c6967a4-16be-43f6-8147-47b9dd887383",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.742960320Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f89c3f6d-4251-467a-8dab-2815f5362124",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.723134Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f89c3f6d-4251-467a-8dab-2815f5362124",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.203693193Z"
  },
  {
    "insertId": "11gvmprf5m9ut1",
    "jsonPayload": {
      "remoteIp": "140.82.115.79",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "statusDetails": "response_sent_by_backend",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "15460",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.79",
      "serverIp": "10.164.18.14",
      "latency": "0.065051s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.743062Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/dc4e02162e9c17efccb686cdb7475a6d",
    "receiveTimestamp": "2024-08-21T16:39:40.940029179Z",
    "spanId": "0d6f0c8e383f9fad"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6bea4ccf-07ea-44f2-841c-96f023654f78",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.749069Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6bea4ccf-07ea-44f2-841c-96f023654f78",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.841782690Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.66.119.61",
        "callerSuppliedUserAgent": "opentelemetry-collector-contrib 1.127.26-gke.1/1.10.0-gke.8 grpc-go/1.56.3,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:40.755261910Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "3cso2vehr6bx",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com"
      }
    },
    "timestamp": "2024-08-21T16:39:40.750629352Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.605448565Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "75b99f2e-1d0e-48f6-969a-ad03b052308d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.811206Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "75b99f2e-1d0e-48f6-969a-ad03b052308d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.104525588Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "fa299150-ad7f-4016-9daa-50c2d73627ea",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.827782Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "fa299150-ad7f-4016-9daa-50c2d73627ea",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.404765294Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "13f05a65-bb4e-4968-86a3-0345c7d195e7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.836034Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "13f05a65-bb4e-4968-86a3-0345c7d195e7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.201886810Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {},
      "authenticationInfo": {
        "principalEmail": "david.p@codium.ai"
      },
      "requestMetadata": {
        "callerIp": "76.183.203.89",
        "callerSuppliedUserAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.0 Safari/537.36,gzip(gfe),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:40.838353281Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "logging.googleapis.com",
      "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production",
          "permission": "logging.privateLogEntries.list",
          "granted": true,
          "resourceAttributes": {
            "service": "logging.googleapis.com",
            "name": "projects/codium-production"
          },
          "permissionType": "DATA_READ"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "filter": "(timestamp>\"2024-08-21T16:39:27.346997Z\" OR (timestamp=\"2024-08-21T16:39:27.346997Z\" AND insertId>\"1e32574a-d689-42e3-8706-98ee6ff9c2d8\"))\n(timestamp<\"2024-08-21T16:39:30.825691Z\")",
        "orderBy": "timestamp asc",
        "@type": "type.googleapis.com/google.logging.v2.ListLogEntriesRequest",
        "resourceNames": [
          "projects/codium-production/locations/global/buckets/_Default/views/_AllLogs"
        ]
      }
    },
    "insertId": "1e847opd29vo",
    "resource": {
      "type": "logging_log",
      "labels": {
        "project_id": "codium-production",
        "name": ""
      }
    },
    "timestamp": "2024-08-21T16:39:40.838170841Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.547035482Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f1ebde44-61dd-4e42-9c38-d00bacbfe723",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.838276Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f1ebde44-61dd-4e42-9c38-d00bacbfe723",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.611572491Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e1df4b76-28b5-427a-ac61-a698b5200473",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.852270Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e1df4b76-28b5-427a-ac61-a698b5200473",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.712076556Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e59737d6-e28d-4cff-8dd7-2084b85aeded",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.872447Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e59737d6-e28d-4cff-8dd7-2084b85aeded",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.199677282Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9609fd72-87ef-49b0-9cbe-9c793c957a8e",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:40.883525Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9609fd72-87ef-49b0-9cbe-9c793c957a8e",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.007435103Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6841a61d-4bd6-4b88-b6f0-c123a1b42d52",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.885612Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6841a61d-4bd6-4b88-b6f0-c123a1b42d52",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.816976278Z"
  },
  {
    "insertId": "17v7ebaf3djtnv",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "140.82.115.113",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "22150",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.113",
      "serverIp": "10.164.18.14",
      "latency": "0.065231s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:40.885841Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/a39a23eacb9bbae096cf46d1b25a8743",
    "receiveTimestamp": "2024-08-21T16:39:41.631232027Z",
    "spanId": "276758c74171c832"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "22b20ba8-82ef-4a61-9e0e-b82fd3e6fd5b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.892878Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "22b20ba8-82ef-4a61-9e0e-b82fd3e6fd5b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.317185553Z"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:40Z\" level=info msg=\"finished unary call with code OK\" grpc.code=OK grpc.method=Check grpc.service=grpc.health.v1.Health grpc.start_time=\"2024-08-21T16:39:40Z\" grpc.time_ms=0.017 span.kind=server system=grpc",
    "insertId": "5h6pj9sfczz0cl34",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "argo-cd-argocd-repo-server-68c4fd64bb-wwq79",
        "location": "us-central1",
        "container_name": "repo-server",
        "namespace_name": "argo-cd"
      }
    },
    "timestamp": "2024-08-21T16:39:40.894653093Z",
    "severity": "ERROR",
    "labels": {
      "k8s-pod/app_kubernetes_io/name": "argocd-repo-server",
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "k8s-pod/app_kubernetes_io/version": "v2.10.5",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/app_kubernetes_io/component": "repo-server",
      "k8s-pod/pod-template-hash": "68c4fd64bb",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-811h"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:44.617484580Z"
  },
  {
    "insertId": "11iiypzf9lmaat",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd",
        "remoteIpInfo": {
          "regionCode": "IN"
        }
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "outcome": "ACCEPT",
        "priority": 500
      },
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 15000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW"
      },
      "remoteIp": "38.183.8.101"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1576",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "38.183.8.101",
      "serverIp": "10.164.9.5",
      "latency": "0.305031s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.917019Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/c1ec6e0e7c76337ff2ddd70c400296ca",
    "receiveTimestamp": "2024-08-21T16:39:41.639788110Z",
    "spanId": "d0b9df4ade146b01"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-attacher/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "151a438f-9702-436b-b29f-cfd7058d95b1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.947241Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "151a438f-9702-436b-b29f-cfd7058d95b1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.814795341Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "71f52f50-088f-4510-8476-bacb8e5d5d26",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.947911Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "71f52f50-088f-4510-8476-bacb8e5d5d26",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.809523816Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5552b6ee-4490-450e-a231-598313a2e7e9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.953474Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5552b6ee-4490-450e-a231-598313a2e7e9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.140663590Z"
  },
  {
    "insertId": "b8tzwf953srv",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "71dc8c533dd919ae9f4963224a4ba8fd",
        "remoteIpInfo": {
          "regionCode": "BR"
        }
      },
      "statusDetails": "response_sent_by_backend",
      "remoteIp": "177.43.41.74",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "priority": 15000,
        "name": "codium-app-cloud-armor-policy"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/rag/settings",
      "requestSize": "1607",
      "status": 200,
      "responseSize": "595",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.43.41.74",
      "serverIp": "10.164.17.14",
      "latency": "0.187872s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:40.959014Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/d211db53396860508663c13daad47bc8",
    "receiveTimestamp": "2024-08-21T16:39:41.679226358Z",
    "spanId": "7e9b478a68d11519"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4aa6ab86-1228-45b1-95ca-5495bef85203",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.975656Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4aa6ab86-1228-45b1-95ca-5495bef85203",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.813368013Z"
  },
  {
    "insertId": "3oq7z45l3rophuto",
    "jsonPayload": {
      "text": "OpenAI Response\n",
      "record": {
        "time": {
          "timestamp": 1724258380.987493,
          "repr": "2024-08-21 16:39:40.987493+00:00"
        },
        "line": 131,
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "name": "ai.litellm.litellm_infer_engine",
        "extra": {
          "openai_response": {
            "object": "text_completion",
            "model": "gpt-3.5-turbo-instruct",
            "usage": {
              "prompt_tokens": 1761,
              "total_tokens": 1768,
              "completion_tokens": 7
            },
            "id": "cmpl-9yieysyluthnGgSeLLNNw0th7Ftso",
            "created": 1724258380,
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='</a>\\n                </li>', logprobs=None)"
            ]
          },
          "url_path": "/v2/code/completion",
          "user": {
            "aud": "codium-dev-360812",
            "tier_end_date": 1701693510000,
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4",
            "exp": 1724258892,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iat": 1724255292,
            "tier_level": 10,
            "email": "y.borozna81@internet.ru",
            "auth_time": 1724251717,
            "email_verified": false,
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "allowed": true,
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            }
          },
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главная",
          "request_id": "0c41a5cc-3c4d-4ab6-b4c6-d377502f61c8",
          "model": "gpt-3.5-turbo-instruct",
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "completion": "</a>\n                </li>",
          "openai_request_id": "cmpl-9yieysyluthnGgSeLLNNw0th7Ftso"
        },
        "elapsed": {
          "repr": "1 day, 8:48:28.238079",
          "seconds": 118108.238079
        },
        "message": "OpenAI Response",
        "module": "litellm_infer_engine",
        "exception": null,
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "function": "generate"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:40.987988443Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "csi-provisioner/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3f6c1524-fa04-44bb-a13d-915e19a9823b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:40.992339Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3f6c1524-fa04-44bb-a13d-915e19a9823b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.810999813Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7875b681-ec30-4fce-915c-e702d28be54f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:40.998879Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7875b681-ec30-4fce-915c-e702d28be54f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.804675858Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "b2867677-7992-4ceb-8e9c-827772c1c240",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.001826Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "b2867677-7992-4ceb-8e9c-827772c1c240",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:41.809639625Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "90a7cda9-410e-467c-96e9-2dee4060c95c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.003145Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "90a7cda9-410e-467c-96e9-2dee4060c95c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.666681113Z"
  },
  {
    "insertId": "3xitu9f30gtn2",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "priority": 500,
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy"
      },
      "remoteIp": "154.161.177.136",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "GH"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1450",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "154.161.177.136",
      "serverIp": "10.164.9.5",
      "latency": "0.225195s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.007276Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/81e5b837c3c56655031bf2dc2711ce92",
    "receiveTimestamp": "2024-08-21T16:39:42.173523073Z",
    "spanId": "af864d8213937f97"
  },
  {
    "insertId": "1dyx2evf5wkwtt",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "140.82.115.151",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "14679",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.151",
      "serverIp": "10.164.18.14",
      "latency": "0.061499s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "zone": "global",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716"
      }
    },
    "timestamp": "2024-08-21T16:39:41.011571Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/56ad371e09d817446ba952cc3cd31181",
    "receiveTimestamp": "2024-08-21T16:39:41.687218367Z",
    "spanId": "d9c334e48610f13f"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:41Z\" level=info msg=\"finished unary call with code OK\" grpc.code=OK grpc.method=Check grpc.service=grpc.health.v1.Health grpc.start_time=\"2024-08-21T16:39:41Z\" grpc.time_ms=0.025 span.kind=server system=grpc",
    "insertId": "j0kop3p3zjc2yvpf",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "argo-cd-argocd-repo-server-68c4fd64bb-qn94t",
        "namespace_name": "argo-cd",
        "container_name": "repo-server",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.012448673Z",
    "severity": "ERROR",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "k8s-pod/pod-template-hash": "68c4fd64bb",
      "k8s-pod/app_kubernetes_io/component": "repo-server",
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6",
      "k8s-pod/app_kubernetes_io/version": "v2.10.5",
      "k8s-pod/app_kubernetes_io/name": "argocd-repo-server"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:43.116711883Z"
  },
  {
    "insertId": "3yckft652499ptac",
    "jsonPayload": {
      "record": {
        "exception": null,
        "time": {
          "timestamp": 1724258381.014173,
          "repr": "2024-08-21 16:39:41.014173+00:00"
        },
        "module": "inference_utils",
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "file": {
          "name": "inference_utils.py",
          "path": "/copilot_proxy/utils/inference_utils.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "function": "process",
        "name": "copilot_proxy.utils.inference_utils",
        "line": 1112,
        "level": {
          "no": 10,
          "icon": "🐞",
          "name": "DEBUG"
        },
        "elapsed": {
          "repr": "1 day, 8:48:28.264759",
          "seconds": 118108.264759
        },
        "message": "Prompts and results v2",
        "extra": {
          "user": {
            "firebase": {
              "identities": {
                "github.com": [
                  "87546148"
                ],
                "email": [
                  "y.borozna81@internet.ru"
                ]
              },
              "sign_in_provider": "custom"
            },
            "aud": "codium-dev-360812",
            "iat": 1724255292,
            "exp": 1724258892,
            "allowed": true,
            "email": "y.borozna81@internet.ru",
            "tier_level": 10,
            "email_verified": false,
            "uid": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "auth_time": 1724251717,
            "sub": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "user_id": "l2iDwUNEAtPs6XwJ2RLWbxoRqED2",
            "codiumate": null,
            "tier_end_date": 1701693510000,
            "picture": "https://avatars.githubusercontent.com/u/87546148?v=4"
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml",
            "Branch": "production"
          },
          "request_id": "0c41a5cc-3c4d-4ab6-b4c6-d377502f61c8",
          "results": {
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"</a>\\n                </li>\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "url_path": "/v2/code/completion",
            "inference_steps": {
              "step_01_CodeCompletion": {
                "04_end_time": "2024-08-21 16:39:41.014094",
                "02_completion": "</a>\n                </li>",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nProject directory structure:\n===\nconfig\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\nCode context from file path templates\\base.html:\n===\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in django-html from a file path dish/templates/core/frontpage.html, complete it:\n\n---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главная",
                "00_system": null,
                "03_start_time": "2024-08-21 16:39:40.473138"
              }
            },
            "user_input": {
              "extra_instructions": "",
              "task": "",
              "max_remote_context": 5,
              "user_context": [],
              "user_data": "user_id=None installation_id='b0bf2edc-778f-4b18-b87f-f429c035dbdd' editor_version='1.92.2' editor_sub_version=None extension_version='0.9.13' os_platform='win32' os_version='v20.14.0' editor_type='vscode'",
              "file_diff_content": "",
              "context_mode": "pre_pr",
              "is_multiline": false,
              "doc_context_suffix": "</a>\n                </li>\n\n                <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\n\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Другие действия</a>\n                        </li>\n                        \n                        <li>\n                            <hr class=\"dropdown-divider\">\n                        </li>\n                        \n                        <li>\n                            <a class=\"dropdown-item\" href=\"#\">Здесь что-то еще</a>\n                        </li>\n                    </ul>\n                </li>\n\n                <form class=\"d-flex\" role=\"search\">\n                    <input class=\"form-control me-2\" type=\"search\" placeholder=\"Поиск\" aria-label=\"Search\">\n                    <button class=\"btn btn-outline-success\" type=\"submit\">Поиск</button>\n                </form>\n            </div>\n        </div>\n    </nav>\n    \n</header>\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>\n  </body>\n</html>\n",
              "repo_context": [],
              "configuration": {},
              "remote_context": [],
              "relative_file_path": "dish/templates/core/frontpage.html",
              "max_repo_context": 5,
              "is_file_diff": false,
              "reference_snippet_messages": [
                {
                  "type": "DirectoryStructure",
                  "content": "config\n  asgi.py\n  settings.py\n  urls.py\n  wsgi.py\n  __init__.py\ndish\n  admin.py\n  apps.py\n  migrations\n    0001_initial.py\n    0002_alter_post_options_rename_photo_post_image.py\n    0003_alter_post_image.py\n    0004_alter_post_image.py\n    __init__.py\n  models.py\n  templates\n    core\n      frontpage.html\n  tests.py\n  urls.py\n  views.py\n  __init__.py\nmanage.py\nmedia\n  photos\n    Лагман.jpg\n    Плов.jpg\n    Халва.jpeg\nrequirements.txt\ntemplates\n  base.html",
                  "file_name": "Project directory structure:"
                },
                {
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"stylesheet\"\r\n            integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n            crossorigin=\"anonymous\"\r\n            />\r\n    </head>\r\n\r\n    <body>\r\n        <header>\r\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Главная</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Ссылка</a>\r\n              </li>\r\n\r\n                <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Выпадающий список</a>\r\n\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a class=\"dropdown-item\" href=\"#\">Действия</a>\r\n                        </li>",
                  "type": "File",
                  "file_name": "templates\\base.html"
                },
                {
                  "file_name": "templates\\base.html",
                  "type": "Clipboard",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
                },
                {
                  "file_name": "templates\\base.html",
                  "type": "Clipboard",
                  "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>{{ title }}</title>\r\n        <!--Stiles-->\r\n        <link\r\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n            rel=\"styl"
                }
              ],
              "doc_context_prefix": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{{ title }}</title>\n        <!--Stiles-->\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\n    </head>\n\n    <body>\n        <header>\n            <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n            \n                <div class=\"container-fluid\">\n                    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n                    \n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li class=\"nav-item\">\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Навбар</a>\n                </li>\n\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Главная",
              "language": "django-html",
              "context": []
            }
          },
          "url_path": "/v2/code/completion"
        }
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.014771514Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1cdb9ddd-676b-481f-b4c0-10aa0088312d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.014940Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1cdb9ddd-676b-481f-b4c0-10aa0088312d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.158967085Z"
  },
  {
    "insertId": "75c1h8r8xv2nnc1y",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "repr": "1 day, 9:04:38.054466",
          "seconds": 119078.054466
        },
        "exception": null,
        "message": "User labrecirino@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "thread": {
          "id": 134586138613440,
          "name": "AnyIO worker thread"
        },
        "extra": {},
        "time": {
          "repr": "2024-08-21 16:39:41.036834+00:00",
          "timestamp": 1724258381.036834
        },
        "line": 156,
        "process": {
          "id": 18,
          "name": "MainProcess"
        },
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "module": "core",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        }
      },
      "text": "User labrecirino@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:41.037127594Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "663jlchac52cx0ci",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "elapsed": {
          "repr": "1 day, 9:04:38.055096",
          "seconds": 119078.055096
        },
        "extra": {
          "url": "https://api.codium.ai/v2/rag/settings",
          "on_prem_log": true,
          "source_host": "177.43.41.74",
          "status_code": 200,
          "request_id": "56b6bb82-8fb3-4d21-9645-e926e493b09f",
          "method": "GET"
        },
        "exception": null,
        "line": 37,
        "message": "Request handled",
        "module": "app",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "function": "dispatch",
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "id": 18,
          "name": "MainProcess"
        },
        "time": {
          "timestamp": 1724258381.037464,
          "repr": "2024-08-21 16:39:41.037464+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.037724538Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "at63jausr9e61sdu",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 139243689773952
        },
        "elapsed": {
          "seconds": 118108.288285,
          "repr": "1 day, 8:48:28.288285"
        },
        "name": "app",
        "extra": {
          "url": "https://api.codium.ai/v2/code/completion",
          "request_id": "0c41a5cc-3c4d-4ab6-b4c6-d377502f61c8",
          "method": "POST",
          "status_code": 200,
          "on_prem_log": true,
          "source_host": "37.214.22.173"
        },
        "function": "dispatch",
        "time": {
          "timestamp": 1724258381.037699,
          "repr": "2024-08-21 16:39:41.037699+00:00"
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "line": 37,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh"
      }
    },
    "timestamp": "2024-08-21T16:39:41.037961706Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "hrbxdnfxk5pi1",
    "jsonPayload": {
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "140.82.115.44",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "15462",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.44",
      "serverIp": "10.164.8.25",
      "latency": "0.062949s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.040707Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/13cbc0ef35eacd8c8f13cfa25adb6c7a",
    "receiveTimestamp": "2024-08-21T16:39:41.723036713Z",
    "spanId": "ce8429984dd2218f"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.45.35.2",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:41.047781908Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "sv1n7ve7dfzq",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.041707129Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.311668020Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "452e0250-28fe-491c-aafd-1dfab373121b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.056703Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "452e0250-28fe-491c-aafd-1dfab373121b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.225513628Z"
  },
  {
    "insertId": "fxfgmkmr13ordmml",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "seconds": 118533.378279,
          "repr": "1 day, 8:55:33.378279"
        },
        "exception": null,
        "message": "User shuvam2065@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "thread": {
          "id": 137083335206592,
          "name": "AnyIO worker thread"
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "name": "copilot_proxy.auth.core",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "function": "verify_user_token",
        "line": 156,
        "module": "core",
        "time": {
          "timestamp": 1724258381.058274,
          "repr": "2024-08-21 16:39:41.058274+00:00"
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "extra": {}
      },
      "text": "User shuvam2065@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.058558404Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "insertId": "h9w7q1w0lj9j6g2v",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "line": 37,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:41.058909+00:00",
          "timestamp": 1724258381.058909
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "function": "dispatch",
        "extra": {
          "status_code": 200,
          "url": "https://api.codium.ai/v2/rag/settings",
          "request_id": "4390acd5-a969-4dc5-89f1-843b0bcbb835",
          "source_host": "38.183.8.101",
          "on_prem_log": true,
          "method": "GET"
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 8:55:33.378914",
          "seconds": 118533.378914
        },
        "message": "Request handled",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.059121779Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "insertId": "m8zhch78u45vhvgl",
    "jsonPayload": {
      "text": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "exception": null,
        "message": "User emmanuelanthonio62@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1 day, 8:55:33.522236",
          "seconds": 118533.522236
        },
        "thread": {
          "id": 137083310028480,
          "name": "AnyIO worker thread"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "name": "copilot_proxy.auth.core",
        "function": "verify_user_token",
        "line": 156,
        "time": {
          "timestamp": 1724258381.074101,
          "repr": "2024-08-21 16:39:41.074101+00:00"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "module": "core",
        "extra": {}
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp"
      }
    },
    "timestamp": "2024-08-21T16:39:41.074372821Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "insertId": "x5ymgg89jorz6gvq",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258381.07469,
          "repr": "2024-08-21 16:39:41.074690+00:00"
        },
        "line": 60,
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "name": "copilot_proxy.api.users.v2",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "module": "v2",
        "extra": {
          "user": {
            "name": "Emmanuel Kafui Anthonio",
            "auth_time": 1724238906,
            "aud": "codium-dev-360812",
            "iat": 1724257614,
            "email": "emmanuelanthonio62@gmail.com",
            "email_verified": false,
            "sub": "S5i5AB8pWgekUoksurv6eOC03503",
            "user_id": "S5i5AB8pWgekUoksurv6eOC03503",
            "tier_level": 1,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "exp": 1724261214,
            "firebase": {
              "identities": {
                "email": [
                  "emmanuelanthonio62@gmail.com"
                ],
                "github.com": [
                  "64821369"
                ]
              },
              "sign_in_provider": "custom"
            },
            "codiumate": null,
            "uid": "S5i5AB8pWgekUoksurv6eOC03503",
            "allowed": true,
            "picture": "https://avatars.githubusercontent.com/u/64821369?v=4"
          },
          "tier_level": 1,
          "request_id": "8203ab67-ed34-4a69-aee8-bdf50c4fcfe6"
        },
        "exception": null,
        "message": "Incoming request to get feature flags",
        "function": "get_features",
        "elapsed": {
          "repr": "1 day, 8:55:33.522825",
          "seconds": 118533.522825
        }
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:41.074906488Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a16632c0-bfa1-4945-905b-83d97ee4cfd1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.104970Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a16632c0-bfa1-4945-905b-83d97ee4cfd1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.924833340Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.45.35.2",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:41.128622374Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "14k168nf44ilw6",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:41.116870089Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.505667200Z"
  },
  {
    "insertId": "8mvbwiphols6f69h",
    "jsonPayload": {
      "record": {
        "line": 131,
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "file": {
          "name": "litellm_infer_engine.py",
          "path": "/copilot_proxy/ai/litellm/litellm_infer_engine.py"
        },
        "elapsed": {
          "repr": "1 day, 9:00:02.585150",
          "seconds": 118802.58515
        },
        "message": "OpenAI Response",
        "level": {
          "no": 10,
          "name": "DEBUG",
          "icon": "🐞"
        },
        "extra": {
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "user": {
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "organization_id": null,
            "name": "HoneyMoon is still aliwe",
            "baseUrl": null,
            "aud": "codium-dev-360812",
            "exp": 1724261055,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "tier_level": 10,
            "optout": false,
            "email_verified": false,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "iat": 1724257455,
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "codiumate": null,
            "tier_end_date": 1724734597000,
            "allowed": true,
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "auth_time": 1724257455,
            "email": "anjasajfullin@gmail.com",
            "firebase": {
              "identities": {
                "email": [
                  "anjasajfullin@gmail.com"
                ],
                "github.com": [
                  "155015223"
                ]
              },
              "sign_in_provider": "custom"
            }
          },
          "openai_request_id": "cmpl-9yieyWNMJ2bVJs1N7D1a6ZZHxck3a",
          "request_id": "29cd215a-eaaf-438a-8c66-6c9b4a817ee8",
          "openai_response": {
            "id": "cmpl-9yieyWNMJ2bVJs1N7D1a6ZZHxck3a",
            "created": 1724258380,
            "object": "text_completion",
            "usage": {
              "prompt_tokens": 2420,
              "completion_tokens": 29,
              "total_tokens": 2449
            },
            "model": "gpt-3.5-turbo-instruct",
            "choices": [
              "TextChoices(finish_reason='stop', index=0, text='[-Math.PI/2, 0, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}', logprobs=None)"
            ]
          },
          "completion": "[-Math.PI/2, 0, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
          "prompts": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n}>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation={",
          "model": "gpt-3.5-turbo-instruct",
          "url_path": "/v2/code/completion"
        },
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "name": "ai.litellm.litellm_infer_engine",
        "function": "generate",
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:41.116909+00:00",
          "timestamp": 1724258381.116909
        },
        "module": "litellm_infer_engine"
      },
      "text": "OpenAI Response\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.117347738Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0c9bc22c-beea-4254-8e6d-361f96f66e11",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.122598Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0c9bc22c-beea-4254-8e6d-361f96f66e11",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.205443752Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "24714579-b717-4118-b889-cbc57fb46ed0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.125909Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "24714579-b717-4118-b889-cbc57fb46ed0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.206957950Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c7fbaf61-d8ab-45ee-8982-ee04f1d5b27f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.134126Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c7fbaf61-d8ab-45ee-8982-ee04f1d5b27f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.404765294Z"
  },
  {
    "insertId": "zbr35900652elvt4",
    "jsonPayload": {
      "record": {
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "module": "inference_utils",
        "time": {
          "timestamp": 1724258381.14282,
          "repr": "2024-08-21 16:39:41.142820+00:00"
        },
        "level": {
          "name": "DEBUG",
          "icon": "🐞",
          "no": 10
        },
        "line": 1112,
        "file": {
          "path": "/copilot_proxy/utils/inference_utils.py",
          "name": "inference_utils.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "message": "Prompts and results v2",
        "elapsed": {
          "seconds": 118802.611061,
          "repr": "1 day, 9:00:02.611061"
        },
        "name": "copilot_proxy.utils.inference_utils",
        "extra": {
          "user": {
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "identities": {
                "github.com": [
                  "155015223"
                ],
                "email": [
                  "anjasajfullin@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "exp": 1724261055,
            "user_id": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "allowed": true,
            "name": "HoneyMoon is still aliwe",
            "organization_id": null,
            "picture": "https://avatars.githubusercontent.com/u/155015223?v=4",
            "sub": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "email": "anjasajfullin@gmail.com",
            "baseUrl": null,
            "auth_time": 1724257455,
            "optout": false,
            "aud": "codium-dev-360812",
            "email_verified": false,
            "iat": 1724257455,
            "tier_level": 10,
            "uid": "sUI9MArwOvUfcKoq6p9jWRaxnfE2",
            "tier_end_date": 1724734597000
          },
          "request_id": "29cd215a-eaaf-438a-8c66-6c9b4a817ee8",
          "results": {
            "url_path": "/v2/code/completion",
            "user_input": {
              "extra_instructions": "",
              "context": [],
              "user_data": "user_id=None installation_id='15788762-fe0e-4403-bf86-bc88815499a2' editor_version='1.82.2' editor_sub_version=None extension_version='0.9.13' os_platform='linux' os_version='v18.15.0' editor_type='vscode'",
              "reference_snippet_messages": [
                {
                  "content": "spacemen/spaceman.jsx:\n\nexport default Spaceman",
                  "type": "CodiummateImport",
                  "file_name": "Imports and implementations used in this file:"
                },
                {
                  "type": "DirectoryStructure",
                  "content": "README.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js",
                  "file_name": "Project directory structure:"
                },
                {
                  "file_name": "src/components/stagerbar/stagerbar.jsx",
                  "type": "File",
                  "content": "import { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />"
                },
                {
                  "content": "import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;",
                  "type": "File",
                  "file_name": "src/store/reducers/todoById/todoByIdSlice.js"
                },
                {
                  "type": "File",
                  "file_name": "src/pages/main/main.jsx",
                  "content": "import { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>"
                },
                {
                  "type": "File",
                  "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}",
                  "file_name": "tailwind.config.js"
                }
              ],
              "file_diff_content": "",
              "relative_file_path": "src/components/spacemen/spaceman.jsx",
              "max_repo_context": 5,
              "doc_context_prefix": "import {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation={",
              "language": "javascriptreact",
              "remote_context": [],
              "configuration": {},
              "repo_context": [],
              "user_context": [],
              "is_multiline": true,
              "task": "",
              "doc_context_suffix": "}>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman",
              "is_file_diff": false,
              "context_mode": "pre_pr",
              "max_remote_context": 5
            },
            "output_to_client": [
              "{\"type\": \"text\", \"sub_type\": \"code_completion\", \"data\": {\"title\": \"Code Completion\", \"content\": \"[-Math.PI/2, 0, 0]}>\\n        <primitive object={scene} />\\n    </mesh>\\n    </>\\n  )\\n}\", \"can_be_replied_to\": false, \"is_streaming\": false}}\n\n"
            ],
            "inference_steps": {
              "step_01_CodeCompletion": {
                "00_system": null,
                "04_end_time": "2024-08-21 16:39:41.142749",
                "02_completion": "[-Math.PI/2, 0, 0]}>\n        <primitive object={scene} />\n    </mesh>\n    </>\n  )\n}",
                "03_start_time": "2024-08-21 16:39:40.377097",
                "01_prompt": "\nImportant instructions:\n- You are a sophisticated code completion tool.\n- You only complete with helpful working code that would fit seamlessly with minimal comments if any.\n- Do not complete more than one function/method at a time.\n- Do not reply with comments of your own, only working code.\n- Do not write comments like \"implementation here\", \"pass\", or \"not implemented\". Instead, write the actual implementation.\n- DO NOT REPEAT code or functions/methods that already appear in the codebase context or the current file you're completing.\n- If you can't find an adequate completion, return an empty string.\n- If the last lines of your completion and the code above them are the same, remove the shared part from the end of your completion.\n- Do not leave a docstring open without closing it properly.\n- Do not start a new line as the first character of your completion, complete the code right from its end.\n- While generating output, if you completed a full function/method, end the completion.\n\n---\nEnd important instructions.\n---\nHere are code/documentation snippets that may be relevent as context:\n---\nImplementations used in the code:\n===\nspacemen/spaceman.jsx:\n\nexport default Spaceman\n===\n\nProject directory structure:\n===\nREADME.md\neslint.config.js\nindex.html\npackage-lock.json\npackage.json\npostcss.config.js\npublic\n  vite.svg\nsrc\n  App.css\n  App.jsx\n  assets\n    3d\n      a_book.glb\n      tehun.glb\n    apple.png\n    appstore.png\n    book.jpg\n    book1.jpg\n    book10.png\n    book11.jpg\n    book12.jpg\n    book13.png\n    book14.jpg\n    book15.jpg\n    book16.png\n    book17.jpg\n    book2.jpg\n    book3.png\n    book4.jpg\n    book5.jpg\n    book6.jpg\n    book7.png\n    book8.jpg\n    book9.jpg\n    google.jpg\n    googleplay.png\n    library.jpg\n    logo.jpg\n    pngwing.com(1).png\n    svg\n    vk.jpg\n  auth\n    ,\n    login\n      login.jsx\n    registration\n      librarybg.jpg\n      librarybg2.jpg\n      librarybg3.jpg\n      registration.css\n      registration.jsx\n  components\n    bheader\n      bheader.jsx\n    header\n      header.jsx\n    language\n      languageselector.jsx\n    m\n    spacemen\n      spaceman.jsx\n    stagerbar\n      stagerbar.jsx\n  index.css\n  json\n    db.json\n  main.jsx\n  pages\n    fornew\n      fornew.jsx\n    infoBook\n      infoBook.jsx\n    m\n    main\n      main.css\n      main.jsx\n  store\n    reducers\n      m\n      todoById\n        todoByIdSlice.js\n      todolist\n        todolistSlice.js\n    store.js\n  utils\n    AuthCheck.js\n    ProtectedRoute.js\n    getToken.js\ntailwind.config.js\nvite.config.js\n===\n\nCode context from file path src/components/stagerbar/stagerbar.jsx:\n===\nimport { useState, useEffect } from \"react\";\nimport { useAnimate, stagger, motion } from \"framer-motion\";\n\nconst staggerMenuItems = stagger(0.1, { startDelay: 0.15 });\n\nfunction useMenuAnimation(isOpen) {\n  const [scope, animate] = useAnimate();\n\n  useEffect(() => {\n    animate(\".arrow\", { rotate: isOpen ? 180 : 0 }, { duration: 0.2 });\n\n    animate(\n      \"ul\",\n      {\n        clipPath: isOpen\n          ? \"inset(0% 0% 0% 0% round 10px)\"\n          : \"inset(10% 50% 90% 50% round 10px)\",\n      },\n      {\n        type: \"spring\",\n        bounce: 0,\n        duration: 0.5,\n      }\n    );\n\n    animate(\n      \"li\",\n      isOpen\n        ? { opacity: 1, scale: 1, filter: \"blur(0px)\" }\n        : { opacity: 0, scale: 0.3, filter: \"blur(20px)\" },\n      {\n        duration: 0.2,\n        delay: isOpen ? staggerMenuItems : 0,\n      }\n    );\n  }, [isOpen, animate]);\n\n  return scope;\n}\n\nexport default function Stagerbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const scope = useMenuAnimation(isOpen);\n\n  return (\n    <nav className=\"menu\" ref={scope} style={{width: \"60px\", height: \"50px\"}}>\n      <div\n        style={{\n        }}\n      />\n===\n\nCode context from file path src/store/reducers/todoById/todoByIdSlice.js:\n===\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const getTodosById = createAsyncThunk(\"todoById/getTodosById\", async (id) => {\n  try {\n    let { data } = await axios.get(`http://localhost:3001/data/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\nexport const todoByIdSlice = createSlice({\n  name: 'todoById',\n  initialState: {\n    data: {},\n    openAdd: false,\n    openEdit: false,\n    currentTodo: null,\n    openAddImg: false\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getTodosById.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n  },\n});\n\nexport default todoByIdSlice.reducer;\n===\n\nCode context from file path src/pages/main/main.jsx:\n===\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodos } from \"../../store/reducers/todolist/todolistSlice\";\nimport { useEffect } from \"react\";\nimport \"./main.css\"; // We'll add custom CSS here\nimport Header from \"../../components/header/header\";\nimport { Link } from \"react-router-dom\";\nimport { motion, useTime, useTransform } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { useAnimationFrame } from \"framer-motion\";\n\nconst Main = ({logo, googleplay, appstore}) => {\n  let { data } = useSelector((store) => store.todolist);\n  let dispatch = useDispatch();\n  const time = useTime();\n  const rotate = useTransform(time, [0, 4000], [0, 360], { clamp: false });\n\n  const ref = useRef(null);\n\n  useAnimationFrame((t) => {\n    const rotate = Math.sin(t / 10000) * 200;\n    const y = (1 + Math.sin(t / 1000)) * -50;\n    if (ref.current) {\n      ref.current.style.transform = `translateY(${y}px) rotateX(${rotate}deg) rotateY(${rotate}deg)`;\n    }\n  });\n  useEffect(() => {\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"\">\n        <Header logo={logo} appstore={appstore} googleplay={googleplay}/>\n    </div>\n    <div className=\"\" style={{width: \"100%\", height: \"700px\", backgroundColor: \"#f7f6f2\"}}>\n    <div className=\"exacontainer\">\n      {/* Ensure the motion div has a size and background color to make the rotation visible */}\n      <motion.div \n        style={{ rotate, width: \"100px\", height: \"100px\", backgroundColor: \"#d4a373\", borderRadius: \"12px\" }} \n      />\n    </div>\n    <div className=\"\" style={{ perspective: '1000px', width: '200px', height: '200px', position: 'relative', margin: '100px auto' }}>\n      <div className=\"\" style={{ width: '100px', height: '100px', position: 'absolute', transformStyle: 'preserve-3d', transform: 'translateZ(-50px)' }} ref={ref}>\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(0deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateX(-90deg) translateZ(50px)' }} />\n        <div className=\"\" style={{ position: 'absolute', width: '100px', height: '100px', background: 'rgba(255, 255, 255, 0.9)', border: '1px solid #ccc', transform: 'rotateY(180deg) translateZ(50px)' }} />\n      </div>\n===\n\nCode context from file path tailwind.config.js:\n===\n/** @type {import('tailwindcss').Config} */\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n===\n\n\n---\nEnd code/documentation snippets.\n---\nThis is the code that follows your completed code:\n\n---\n}>\n\n    </mesh>\n    </>\n  )\n}\n\nexport default Spaceman\n---\n\n---\nEnd code code that follows your completed code.\n---\n\nHere is the code in javascript from a file path src/components/spacemen/spaceman.jsx, complete it:\n\n---\nimport {useAnimations, useGLTF} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {useRef, Suspense, useEffect, useState} from \"react\";\nimport tehun from \"assets/3d/tehun.glb\";\n\nconst Spaceman = ({scale, position}) => {\n    const tehunRef = useRef()\n    const {scene, animations} = useGLTF(tehun)\n    const {actions} = useAnimations(animations, tehun)\n    useEffect(()=>{\n        actions[\"Idle\"].play()\n    }, [actions])\n  return (\n    <>\n    <mesh ref={tehunRef} position={position} scale={scale} rotation={"
              }
            }
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "url_path": "/v2/code/completion"
        },
        "function": "process",
        "exception": null
      },
      "text": "Prompts and results v2\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.143385897Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-wobm@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.88.63",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:41.149441358Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "17cm8q8f2r1hak",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:41.143608728Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.496094071Z"
  },
  {
    "insertId": "qb0jh8irgxfbhhc8",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        },
        "function": "dispatch",
        "exception": null,
        "extra": {
          "request_id": "8203ab67-ed34-4a69-aee8-bdf50c4fcfe6",
          "status_code": 200,
          "url": "https://api.codium.ai/v2/users/features",
          "on_prem_log": true,
          "source_host": "154.161.177.136",
          "method": "GET"
        },
        "name": "app",
        "line": 37,
        "time": {
          "repr": "2024-08-21 16:39:41.147674+00:00",
          "timestamp": 1724258381.147674
        },
        "message": "Request handled",
        "elapsed": {
          "seconds": 118533.595809,
          "repr": "1 day, 8:55:33.595809"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "module": "app",
        "thread": {
          "name": "MainThread",
          "id": 137086801542016
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.147980539Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.26.14 (linux/amd64) kubernetes/3c4181a"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c7547d60-692f-4eed-bd31-c84998b005d4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.158442Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c7547d60-692f-4eed-bd31-c84998b005d4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.810999813Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:55700 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "yo7ttnn174wul7er",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production-recursion",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.160495407Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.316653254Z"
  },
  {
    "insertId": "qn9s0oh5qi05ejkc",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "elapsed": {
          "seconds": 118802.638621,
          "repr": "1 day, 9:00:02.638621"
        },
        "time": {
          "repr": "2024-08-21 16:39:41.170380+00:00",
          "timestamp": 1724258381.17038
        },
        "line": 37,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "message": "Request handled",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "extra": {
          "source_host": "62.89.209.162",
          "request_id": "29cd215a-eaaf-438a-8c66-6c9b4a817ee8",
          "method": "POST",
          "status_code": 200,
          "url": "https://api.codium.ai/v2/code/completion",
          "on_prem_log": true
        },
        "name": "app",
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.170651819Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:41.326319021Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-intui-be498710-iuwb"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.nodes.status.patch",
          "resource": "core/v1/nodes/gke-production-clust-production-intui-be498710-iuwb/status"
        }
      ],
      "methodName": "io.k8s.core.v1.nodes.status.patch",
      "request": {
        "@type": "k8s.io/Patch",
        "status": {
          "$setElementOrder/conditions": [
            {
              "type": "ReadonlyFilesystem"
            },
            {
              "type": "DeprecatedOtherContainerdFeatures"
            },
            {
              "type": "FrequentUnregisterNetDevice"
            },
            {
              "type": "DeprecatedMirrorsFieldInContainerdConfiguration"
            },
            {
              "type": "CorruptDockerOverlay2"
            },
            {
              "type": "FrequentKubeletRestart"
            },
            {
              "type": "SysctlChanged"
            },
            {
              "type": "DeprecatedAuthsFieldInContainerdConfiguration"
            },
            {
              "type": "FrequentContainerdRestart"
            },
            {
              "type": "DeprecatedPullingSchemaV1Image"
            },
            {
              "type": "DeprecatedUsingV1Alpha2Cri"
            },
            {
              "type": "DeprecatedConfigsFieldInContainerdConfiguration"
            },
            {
              "type": "KernelDeadlock"
            },
            {
              "type": "FrequentDockerRestart"
            },
            {
              "type": "NetworkUnavailable"
            },
            {
              "type": "MemoryPressure"
            },
            {
              "type": "DiskPressure"
            },
            {
              "type": "PIDPressure"
            },
            {
              "type": "Ready"
            }
          ],
          "conditions": [
            {
              "lastHeartbeatTime": "2024-08-21T16:39:41Z",
              "type": "MemoryPressure"
            },
            {
              "lastHeartbeatTime": "2024-08-21T16:39:41Z",
              "type": "DiskPressure"
            },
            {
              "lastHeartbeatTime": "2024-08-21T16:39:41Z",
              "type": "PIDPressure"
            },
            {
              "lastHeartbeatTime": "2024-08-21T16:39:41Z",
              "type": "Ready"
            }
          ]
        }
      },
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/nodes/gke-production-clust-production-intui-be498710-iuwb/status",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4c18ae70-7ef2-4930-bd66-c10f53ca05fa",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.174240Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4c18ae70-7ef2-4930-bd66-c10f53ca05fa",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.870971557Z"
  },
  {
    "insertId": "9qhj55eppcfm",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IN"
        },
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5"
      },
      "remoteIp": "81.17.122.73",
      "statusDetails": "response_sent_by_backend",
      "previewSecurityPolicy": {
        "priority": 500,
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy"
      },
      "backendTargetProjectNumber": "projects/67590289846"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.17.14",
      "latency": "0.302290s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:41.180978Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/9a19053365ba47281f6842da484d8501",
    "receiveTimestamp": "2024-08-21T16:39:42.376621624Z",
    "spanId": "27c446395485f740"
  },
  {
    "insertId": "1iz0ptmficyncy",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "outcome": "ACCEPT",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE"
      },
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 9000
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "81.17.122.73",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IN"
        },
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5"
      },
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.10.5",
      "latency": "0.338805s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.181452Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/46095a41abc43f9b81cd00d94b815153",
    "receiveTimestamp": "2024-08-21T16:39:42.089099735Z",
    "spanId": "375a6eb363782a1e"
  },
  {
    "insertId": "4rv53wfivxz3s",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IN"
        },
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5"
      },
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "81.17.122.73",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 500,
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE"
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT"
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.10.5",
      "latency": "0.295932s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.184571Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/cb8e426cccf91fbfd14f2234559eefb4",
    "receiveTimestamp": "2024-08-21T16:39:41.992583151Z",
    "spanId": "2df233923a2fc496"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "56feb50c-4d78-4f5d-b821-49043a4d6387",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.186715Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "56feb50c-4d78-4f5d-b821-49043a4d6387",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.126254636Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/ingress-uid"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/ingress-uid",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "691672a9-3bb8-4c7d-9ae8-e006251717f7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.190761Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "691672a9-3bb8-4c7d-9ae8-e006251717f7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.666681113Z"
  },
  {
    "textPayload": "INFO 08-21 16:39:41 metrics.py:406] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.",
    "insertId": "xxkbe2ie3nj39b1o",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "llm",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "main",
        "project_id": "codium-production",
        "pod_name": "llm-server-69c884887-58l4j"
      }
    },
    "timestamp": "2024-08-21T16:39:41.270260281Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3e331e15-d05c-487e-a509-ab743a215a47",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.277022Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3e331e15-d05c-487e-a509-ab743a215a47",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.112725802Z"
  },
  {
    "insertId": "exq2uppma1ii2giv",
    "jsonPayload": {
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "name": "MainProcess",
          "id": 14
        },
        "module": "core",
        "exception": null,
        "line": 156,
        "elapsed": {
          "seconds": 119078.760566,
          "repr": "1 day, 9:04:38.760566"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134585476179648
        },
        "time": {
          "repr": "2024-08-21 16:39:41.293943+00:00",
          "timestamp": 1724258381.293943
        },
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core",
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "extra": {},
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.294222109Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "u7o5m70fo6yltjhb",
    "jsonPayload": {
      "record": {
        "name": "copilot_proxy.api.users.v2",
        "time": {
          "timestamp": 1724258381.294508,
          "repr": "2024-08-21 16:39:41.294508+00:00"
        },
        "message": "Incoming request to get feature flags",
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "function": "get_features",
        "module": "v2",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "line": 60,
        "extra": {
          "tier_level": 1,
          "user": {
            "email": "faizyboy1@gmail.com",
            "baseUrl": null,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              }
            },
            "email_verified": true,
            "tier_end_date": 1718801312000,
            "optout": false,
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "organization_id": null,
            "codiumate": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_level": 1,
            "exp": 1724261979,
            "allowed": true,
            "iat": 1724258379,
            "auth_time": 1724223256,
            "aud": "codium-dev-360812",
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1"
          },
          "request_id": "1f4e50fb-fde4-4796-b47f-274b4e9b52be"
        },
        "exception": null,
        "elapsed": {
          "seconds": 119078.761131,
          "repr": "1 day, 9:04:38.761131"
        }
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.294761357Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "dbntywlh8vxb3o32",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "name": "copilot_proxy.auth.core",
        "process": {
          "name": "MainProcess",
          "id": 16
        },
        "extra": {},
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "module": "core",
        "thread": {
          "id": 132436541281984,
          "name": "AnyIO worker thread"
        },
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:41.302389+00:00",
          "timestamp": 1724258381.302389
        },
        "function": "verify_user_token",
        "elapsed": {
          "repr": "1 day, 9:00:02.989406",
          "seconds": 118802.989406
        },
        "exception": null,
        "line": 156
      },
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:41.302711829Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "8t3lmzbcl77j4fvx",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:00:02.990077",
          "seconds": 118802.990077
        },
        "message": "Incoming request to get feature flags",
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "extra": {
          "user": {
            "exp": 1724261979,
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "iat": 1724258379,
            "baseUrl": null,
            "optout": false,
            "aud": "codium-dev-360812",
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "codiumate": null,
            "organization_id": null,
            "allowed": true,
            "auth_time": 1724223256,
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "tier_level": 1,
            "email": "faizyboy1@gmail.com",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "tier_end_date": 1718801312000,
            "firebase": {
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email_verified": true
          },
          "tier_level": 1,
          "request_id": "043a9775-ed2e-47e3-bba7-c5d91fe44302"
        },
        "time": {
          "repr": "2024-08-21 16:39:41.303060+00:00",
          "timestamp": 1724258381.30306
        },
        "line": 60,
        "process": {
          "id": 16,
          "name": "MainProcess"
        },
        "name": "copilot_proxy.api.users.v2",
        "exception": null,
        "module": "v2",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "function": "get_features"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.303272709Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "tknq4ntw7u5ued5a",
    "jsonPayload": {
      "record": {
        "elapsed": {
          "repr": "1 day, 9:00:02.773766",
          "seconds": 118802.773766
        },
        "exception": null,
        "extra": {},
        "module": "core",
        "time": {
          "repr": "2024-08-21 16:39:41.305525+00:00",
          "timestamp": 1724258381.305525
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "line": 156,
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132437036222144
        },
        "function": "verify_user_token",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "name": "copilot_proxy.auth.core",
        "process": {
          "id": 21,
          "name": "MainProcess"
        }
      },
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.305747093Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "nlntsm9zv6hj1ciz",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "exception": null,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "module": "v2",
        "line": 60,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "elapsed": {
          "repr": "1 day, 9:00:02.774296",
          "seconds": 118802.774296
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "function": "get_features",
        "message": "Incoming request to get feature flags",
        "extra": {
          "user": {
            "tier_end_date": 1718801312000,
            "email": "faizyboy1@gmail.com",
            "tier_level": 1,
            "optout": false,
            "codiumate": null,
            "auth_time": 1724223256,
            "organization_id": null,
            "iat": 1724258379,
            "allowed": true,
            "firebase": {
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "exp": 1724261979,
            "email_verified": true,
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "baseUrl": null,
            "aud": "codium-dev-360812"
          },
          "tier_level": 1,
          "request_id": "328d3c8e-1fc5-4dae-96d7-f946e74f455b"
        },
        "name": "copilot_proxy.api.users.v2",
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "time": {
          "timestamp": 1724258381.306055,
          "repr": "2024-08-21 16:39:41.306055+00:00"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.306265880Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.45.35.2",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:41.332611175Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "name": "projects/codium-production",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "1n4shywf44a5r2",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries",
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.328826615Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:42.006433320Z"
  },
  {
    "insertId": "luqwcc0xdg82vaq2",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "exception": null,
        "time": {
          "timestamp": 1724258381.347782,
          "repr": "2024-08-21 16:39:41.347782+00:00"
        },
        "process": {
          "id": 14,
          "name": "MainProcess"
        },
        "function": "dispatch",
        "name": "app",
        "elapsed": {
          "seconds": 119078.814405,
          "repr": "1 day, 9:04:38.814405"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "message": "Request handled",
        "module": "app",
        "extra": {
          "source_host": "81.17.122.73",
          "method": "GET",
          "url": "https://api.codium.ai/v2/users/features",
          "on_prem_log": true,
          "status_code": 200,
          "request_id": "1f4e50fb-fde4-4796-b47f-274b4e9b52be"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "line": 37
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:41.348108568Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "925f9230-d9da-4d0b-9539-5287c9491db9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.349288Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "925f9230-d9da-4d0b-9539-5287c9491db9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.316591625Z"
  },
  {
    "insertId": "vnq73q5d64wd5tb8",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "line": 37,
        "elapsed": {
          "seconds": 118802.825954,
          "repr": "1 day, 9:00:02.825954"
        },
        "function": "dispatch",
        "module": "app",
        "extra": {
          "method": "GET",
          "source_host": "81.17.122.73",
          "url": "https://api.codium.ai/v2/users/features",
          "status_code": 200,
          "on_prem_log": true,
          "request_id": "328d3c8e-1fc5-4dae-96d7-f946e74f455b"
        },
        "exception": null,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "time": {
          "repr": "2024-08-21 16:39:41.357713+00:00",
          "timestamp": 1724258381.357713
        },
        "message": "Request handled",
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:41.357999546Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "96f9f398-f570-4398-9bfe-4c911db8bce5",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.369314Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "96f9f398-f570-4398-9bfe-4c911db8bce5",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.812120765Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-neg-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f3b2dfa7-69e8-4bf9-8ceb-9fc2219e1522",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.374122Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f3b2dfa7-69e8-4bf9-8ceb-9fc2219e1522",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.663518470Z"
  },
  {
    "insertId": "ofceol31jbht1f6z",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "module": "app",
        "elapsed": {
          "repr": "1 day, 9:00:03.080174",
          "seconds": 118803.080174
        },
        "process": {
          "id": 16,
          "name": "MainProcess"
        },
        "extra": {
          "status_code": 200,
          "url": "https://api.codium.ai/v2/users/features",
          "method": "GET",
          "on_prem_log": true,
          "request_id": "043a9775-ed2e-47e3-bba7-c5d91fe44302",
          "source_host": "81.17.122.73"
        },
        "function": "dispatch",
        "exception": null,
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "time": {
          "repr": "2024-08-21 16:39:41.393157+00:00",
          "timestamp": 1724258381.393157
        },
        "message": "Request handled",
        "line": 37,
        "name": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.393448789Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "624f5f1b-0a6e-46ed-b8ac-1c0265b27aa3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.399398Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "624f5f1b-0a6e-46ed-b8ac-1c0265b27aa3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.683185716Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:36840 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "czwcsppu4sfltgjj",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production-paychex",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6"
      }
    },
    "timestamp": "2024-08-21T16:39:41.418741333Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "365b2355-ff68-416e-b5eb-dc2f81ad57c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.428659Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "365b2355-ff68-416e-b5eb-dc2f81ad57c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.715842343Z"
  },
  {
    "insertId": "fjgudif3llxyz",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "37.175.115.63",
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "FR"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "priority": 500,
        "name": "codium-app-cloud-armor-policy"
      },
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy",
        "priority": 3000,
        "outcome": "ACCEPT"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/tests/configuration?language=typescript",
      "requestSize": "1531",
      "status": 200,
      "responseSize": "2665",
      "userAgent": "axios/1.6.2",
      "remoteIp": "37.175.115.63",
      "serverIp": "10.164.17.14",
      "latency": "0.137651s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.469812Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/8921cff4a2a1b9ac51d9aeddc9c7af9d",
    "receiveTimestamp": "2024-08-21T16:39:42.536396434Z",
    "spanId": "0ae2c4572f5bb5c6"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cluster-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cluster-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cluster-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4d37ce40-bda6-4218-b23a-5d5d2a4694bc",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.495271Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"cluster-autoscaler\" of ClusterRole \"cluster-autoscaler\" to User \"system:cluster-autoscaler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4d37ce40-bda6-4218-b23a-5d5d2a4694bc",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.712076556Z"
  },
  {
    "insertId": "oe08jg1lfryj4ys5",
    "jsonPayload": {
      "_SYSTEMD_UNIT": "kubelet.service",
      "_SYSTEMD_INVOCATION_ID": "750702421a8d4c3ea09bf5193ea96aa8",
      "_CMDLINE": "/home/kubernetes/bin/kubelet --v=2 --cloud-provider=external --experimental-mounter-path=/home/kubernetes/containerized_mounter/mounter --cert-dir=/var/lib/kubelet/pki/ --kubeconfig=/var/lib/kubelet/kubeconfig --image-credential-provider-config=/etc/srv/kubernetes/cri_auth_config.yaml --image-credential-provider-bin-dir=/home/kubernetes/bin --max-pods=110 --volume-plugin-dir=/home/kubernetes/flexvolume --node-status-max-images=25 --container-runtime-endpoint=unix:///run/containerd/containerd.sock --runtime-cgroups=/system.slice/containerd.service --registry-qps=10 --registry-burst=20 --config /home/kubernetes/kubelet-config.yaml \"--pod-sysctls=net.core.somaxconn=1024,net.ipv4.conf.all.accept_redirects=0,net.ipv4.conf.all.forwarding=1,net.ipv4.conf.all.route_localnet=1,net.ipv4.conf.default.forwarding=1,net.ipv4.ip_forward=1,net.ipv4.tcp_fin_timeout=60,net.ipv4.tcp_keepalive_intvl=60,net.ipv4.tcp_keepalive_probes=5,net.ipv4.tcp_keepalive_time=300,net.ipv4.tcp_rmem=4096 87380 6291456,net.ipv4.tcp_syn_retries=6,net.ipv4.tcp_tw_reuse=0,net.ipv4.tcp_wmem=4096 16384 4194304,net.ipv4.udp_rmem_min=4096,net.ipv4.udp_wmem_min=4096,net.ipv6.conf.all.disable_ipv6=1,net.ipv6.conf.default.accept_ra=0,net.ipv6.conf.default.disable_ipv6=1,net.netfilter.nf_conntrack_generic_timeout=600,net.netfilter.nf_conntrack_tcp_be_liberal=1,net.netfilter.nf_conntrack_tcp_timeout_close_wait=3600,net.netfilter.nf_conntrack_tcp_timeout_established=86400\" --cgroup-driver=systemd --pod-infra-container-image=gke.gcr.io/pause:3.8@sha256:880e63f94b145e46f1b1082bb71b85e21f16b99b180b9996407d61240ceb9830 --version=v1.29.7-gke.1008000",
      "_BOOT_ID": "cf1de15ee12d46319f277d228c570fc7",
      "_TRANSPORT": "stdout",
      "_EXE": "/home/kubernetes/bin/kubelet",
      "_GID": "0",
      "MESSAGE": "I0821 16:39:41.496651    2607 kubelet_getters.go:187] \"Pod status updated\" pod=\"kube-system/kube-proxy-gke-production-clust-production-pool--202a0f65-yyo1\" status=\"Running\"",
      "_SYSTEMD_CGROUP": "/system.slice/kubelet.service",
      "_CAP_EFFECTIVE": "1ffffffffff",
      "_COMM": "kubelet",
      "_HOSTNAME": "gke-production-clust-production-pool--202a0f65-yyo1",
      "SYSLOG_FACILITY": "3",
      "_SYSTEMD_SLICE": "system.slice",
      "_RUNTIME_SCOPE": "system",
      "SYSLOG_IDENTIFIER": "kubelet",
      "_MACHINE_ID": "c8ade3ac330497045bd393614ebb589c",
      "_UID": "0",
      "_PID": "2607",
      "PRIORITY": "6",
      "_STREAM_ID": "95d411b463614e20861b44cf217fad43"
    },
    "resource": {
      "type": "k8s_node",
      "labels": {
        "node_name": "gke-production-clust-production-pool--202a0f65-yyo1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.496700Z",
    "logName": "projects/codium-production/logs/kubelet",
    "receiveTimestamp": "2024-08-21T16:39:43.879367510Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "33da5b70-5efd-465c-9901-7972b9cf3192",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.502900Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "33da5b70-5efd-465c-9901-7972b9cf3192",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.044060716Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e287cd14-a3ae-45af-a73d-166deb369397",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.515217Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e287cd14-a3ae-45af-a73d-166deb369397",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.615076788Z"
  },
  {
    "insertId": "s6p6wt4q6w3hc5t6",
    "jsonPayload": {
      "text": "User prosperify.ai@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "name": "copilot_proxy.auth.core",
        "time": {
          "repr": "2024-08-21 16:39:41.528947+00:00",
          "timestamp": 1724258381.528947
        },
        "thread": {
          "id": 134586121828032,
          "name": "AnyIO worker thread"
        },
        "exception": null,
        "function": "verify_user_token",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "line": 156,
        "message": "User prosperify.ai@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "extra": {},
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "module": "core",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "1 day, 9:04:38.096248",
          "seconds": 119078.096248
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx"
      }
    },
    "timestamp": "2024-08-21T16:39:41.529237462Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "s4kde380z6tvejtj",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "name": "app",
        "elapsed": {
          "seconds": 119078.097199,
          "repr": "1 day, 9:04:38.097199"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "message": "Request handled",
        "extra": {
          "request_id": "7e7fac6c-3361-4a2f-90b6-aa14f694b6ed",
          "status_code": 200,
          "method": "GET",
          "source_host": "37.175.115.63",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/tests/configuration?language=typescript"
        },
        "line": 37,
        "time": {
          "timestamp": 1724258381.529898,
          "repr": "2024-08-21 16:39:41.529898+00:00"
        },
        "function": "dispatch",
        "module": "app",
        "process": {
          "name": "MainProcess",
          "id": 23
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.530101391Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.68.213",
        "callerSuppliedUserAgent": "grpc-go/1.61.0-dev,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:41.545525993Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "name": "projects/67590289846",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "170zal3f3ce1cc",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:41.539993804Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.705626196Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.224.68.213",
        "callerSuppliedUserAgent": "grpc-go/1.61.0-dev,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:41.549087147Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateServiceTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/67590289846",
      "request": {
        "name": "projects/67590289846",
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest"
      }
    },
    "insertId": "s2mxcfe5cm73",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "service": "monitoring.googleapis.com",
        "project_id": "codium-production",
        "method": "google.monitoring.v3.MetricService.CreateServiceTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:41.544463317Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:41.906479263Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-provider-extraction-migration-pt2",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "18d3e63c-f585-472d-80dd-07c7947f970f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.590084Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:gke-ccm-migration-leader-election/kube-system\" of Role \"system:gke-ccm-migration-leader-election\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "18d3e63c-f585-472d-80dd-07c7947f970f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.712570762Z"
  },
  {
    "insertId": "5kawq2elie3vpj9s",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app",
        "elapsed": {
          "seconds": 282562.594571,
          "repr": "3 days, 6:29:22.594571"
        },
        "name": "app",
        "exception": null,
        "function": "live",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "extra": {
          "on_prem_log": true
        },
        "process": {
          "name": "MainProcess",
          "id": 19
        },
        "thread": {
          "name": "MainThread",
          "id": 138722961107840
        },
        "time": {
          "timestamp": 1724258381.617736,
          "repr": "2024-08-21 16:39:41.617736+00:00"
        },
        "line": 164,
        "message": "Incoming request /v1/health/live"
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "cluster_name": "production-cluster",
        "namespace_name": "production-paychex",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.618035959Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "insertId": "g2waj81c0ojwyg0i",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:41.658776+00:00",
          "timestamp": 1724258381.658776
        },
        "exception": null,
        "extra": {
          "status_code": 200,
          "request_id": "N/A",
          "on_prem_log": true,
          "source_host": "10.164.0.1",
          "url": "http://10.164.0.6:5432/v1/health/live",
          "method": "GET"
        },
        "thread": {
          "name": "MainThread",
          "id": 138722961107840
        },
        "elapsed": {
          "seconds": 282562.635611,
          "repr": "3 days, 6:29:22.635611"
        },
        "function": "dispatch",
        "module": "app",
        "message": "Request handled",
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 37,
        "process": {
          "name": "MainProcess",
          "id": 19
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-6dc4b6f7cb-pkkd6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production-paychex",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.659073548Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.101865855Z"
  },
  {
    "insertId": "7hr5dvfi5fubc",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "remoteIp": "81.17.122.73",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT",
        "priority": 9000,
        "name": "codium-app-cloud-armor-policy"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "IN"
        }
      },
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "configuredAction": "THROTTLE",
        "priority": 500,
        "outcome": "ACCEPT"
      }
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.10.5",
      "latency": "0.303157s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:41.672197Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/13742971c1fdafb9e67f97f908825593",
    "receiveTimestamp": "2024-08-21T16:39:43.273700954Z",
    "spanId": "0270ad9a34e19e3e"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:filestorecsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-snapshotter/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-snapshotter-leader-filestore-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "33d3cdd6-c257-408c-b2db-8c66f93ae73d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.685317Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-leaderelection-binding/kube-system\" of Role \"filestorecsi-leaderelection-role\" to User \"system:filestorecsi-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "33d3cdd6-c257-408c-b2db-8c66f93ae73d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.111280852Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f5ee32b4-ea4d-487e-9e26-8eab7e5018ff",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.691291Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f5ee32b4-ea4d-487e-9e26-8eab7e5018ff",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.765934436Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:snapshot-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "snapshot-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/snapshot-controller-leader",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1500b4f5-f52b-4c12-9186-f50b95c68c06",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.698350Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"snapshot-controller-leaderelection/kube-system\" of Role \"snapshot-controller-leaderelection\" to User \"system:snapshot-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1500b4f5-f52b-4c12-9186-f50b95c68c06",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.614164148Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ef46d9e4-3a00-4cdb-8104-03c85bdfd9af",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.723664Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ef46d9e4-3a00-4cdb-8104-03c85bdfd9af",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.508121974Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c8a813f2-6003-4867-838f-ddc8a7fe0958",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.723798Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c8a813f2-6003-4867-838f-ddc8a7fe0958",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.155151480Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "affa63b8-4fb5-4a69-b083-9b09b03687e7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.725759Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "affa63b8-4fb5-4a69-b083-9b09b03687e7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.761732980Z"
  },
  {
    "insertId": "fhrmw7v907ejfo4p",
    "jsonPayload": {
      "record": {
        "time": {
          "timestamp": 1724258381.725801,
          "repr": "2024-08-21 16:39:41.725801+00:00"
        },
        "line": 164,
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app",
        "message": "Incoming request /v1/health/live",
        "extra": {
          "on_prem_log": true
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "exception": null,
        "function": "live",
        "name": "app",
        "elapsed": {
          "seconds": 119311.435085,
          "repr": "1 day, 9:08:31.435085"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8"
      }
    },
    "timestamp": "2024-08-21T16:39:41.726112147Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "0f3b633c-a5f9-4566-a272-a7946f8ef480",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.728687Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "0f3b633c-a5f9-4566-a272-a7946f8ef480",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.919929794Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c7e32302-4754-4359-b58a-0efcba1423c1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.737724Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"system:clustermetrics/kube-system\" of Role \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c7e32302-4754-4359-b58a-0efcba1423c1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.710448488Z"
  },
  {
    "insertId": "6212p4m7exvdduw6",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "process": {
          "id": 10,
          "name": "MainProcess"
        },
        "message": "Incoming request /v1/health/live",
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "live",
        "thread": {
          "name": "MainThread",
          "id": 135434384432000
        },
        "elapsed": {
          "seconds": 282622.923803,
          "repr": "3 days, 6:30:22.923803"
        },
        "time": {
          "timestamp": 1724258381.738127,
          "repr": "2024-08-21 16:39:41.738127+00:00"
        },
        "module": "app",
        "line": 164,
        "extra": {
          "on_prem_log": true
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-recursion",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.738450997Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.316653254Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ac688175-85c1-437f-82d0-05de61e49559",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.740774Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ac688175-85c1-437f-82d0-05de61e49559",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.126254636Z"
  },
  {
    "insertId": "1xyumeyerxk9z",
    "jsonPayload": {
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "92.255.139.0",
      "previewSecurityPolicy": {
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "priority": 500,
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        }
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "RU"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "priority": 15000
      }
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/rag/embed-query",
      "requestSize": "21537",
      "status": 200,
      "responseSize": "33178",
      "userAgent": "axios/1.6.2",
      "remoteIp": "92.255.139.0",
      "serverIp": "10.164.17.14",
      "latency": "0.933559s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.746960Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/2300c8c2df899c769d6109fbd9972902",
    "receiveTimestamp": "2024-08-21T16:39:43.191103087Z",
    "spanId": "d564f04c5809f859"
  },
  {
    "insertId": "4ylowra9k7kx0p9u",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "time": {
          "repr": "2024-08-21 16:39:41.753597+00:00",
          "timestamp": 1724258381.753597
        },
        "thread": {
          "name": "MainThread",
          "id": 136601619532672
        },
        "name": "app",
        "extra": {
          "request_id": "N/A",
          "on_prem_log": true,
          "url": "http://10.164.1.4:5432/v1/health/live",
          "method": "GET",
          "source_host": "10.164.1.1",
          "status_code": 200
        },
        "line": 37,
        "elapsed": {
          "repr": "1 day, 9:08:31.462881",
          "seconds": 119311.462881
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "exception": null,
        "message": "Request handled",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "module": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8"
      }
    },
    "timestamp": "2024-08-21T16:39:41.753848822Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "8sdfjx9oqt7337zy",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "thread": {
          "id": 136961113226112,
          "name": "MainThread"
        },
        "time": {
          "timestamp": 1724258381.75833,
          "repr": "2024-08-21 16:39:41.758330+00:00"
        },
        "message": "Incoming request /v1/health/live",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "extra": {
          "on_prem_log": true
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "function": "live",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "name": "app",
        "elapsed": {
          "seconds": 119006.975483,
          "repr": "1 day, 9:03:26.975483"
        },
        "module": "app",
        "line": 164,
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-jb",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.758630833Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.758527051Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--95ab0a41-styj"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/namespaces/production--argocd/configmaps/kube-root-ca.crt"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/production--argocd/configmaps/kube-root-ca.crt",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1c5b5cef-037a-41bd-932d-827c65d06cd8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.771690Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1c5b5cef-037a-41bd-932d-827c65d06cd8",
      "producer": "k8s.io",
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.809758068Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:node:gke-production-clust-production-pool--95ab0a41-styj"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.watch",
          "resource": "core/v1/namespaces/production--argocd/configmaps/kube-root-ca.crt"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.watch",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "kubelet/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/production--argocd/configmaps/kube-root-ca.crt",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5ebde44a-fc99-433c-9353-a67ad559b557",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.773423Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5ebde44a-fc99-433c-9353-a67ad559b557",
      "producer": "k8s.io",
      "first": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.612816009Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.28.2 (linux/amd64) kubernetes/353f8d7/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "9b83ae88-2fcc-4d59-a595-3df15e7149ad",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.777758Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "9b83ae88-2fcc-4d59-a595-3df15e7149ad",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.149293350Z"
  },
  {
    "insertId": "8f32i9o2ayvkyiy0",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "exception": null,
        "time": {
          "timestamp": 1724258381.781906,
          "repr": "2024-08-21 16:39:41.781906+00:00"
        },
        "thread": {
          "id": 135434384432000,
          "name": "MainThread"
        },
        "elapsed": {
          "repr": "3 days, 6:30:22.967582",
          "seconds": 282622.967582
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "line": 37,
        "module": "app",
        "name": "app",
        "message": "Request handled",
        "function": "dispatch",
        "process": {
          "id": 10,
          "name": "MainProcess"
        },
        "extra": {
          "url": "http://10.164.4.6/v1/health/live",
          "source_host": "35.191.206.232",
          "on_prem_log": true,
          "method": "GET",
          "request_id": "N/A",
          "status_code": 200
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "cluster_name": "production-cluster",
        "namespace_name": "production-recursion"
      }
    },
    "timestamp": "2024-08-21T16:39:41.782274147Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.316653254Z"
  },
  {
    "insertId": "gjkn1vncrmn9w3i5",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:41.783028+00:00",
          "timestamp": 1724258381.783028
        },
        "module": "core",
        "elapsed": {
          "seconds": 118803.251269,
          "repr": "1 day, 9:00:03.251269"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "exception": null,
        "extra": {},
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "line": 156,
        "name": "copilot_proxy.auth.core",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132437036222144
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "function": "verify_user_token"
      },
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.783282675Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "3uhx2x63pzvwkpsb",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "function": "get_features",
        "elapsed": {
          "seconds": 118803.251809,
          "repr": "1 day, 9:00:03.251809"
        },
        "name": "copilot_proxy.api.users.v2",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "time": {
          "repr": "2024-08-21 16:39:41.783568+00:00",
          "timestamp": 1724258381.783568
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "message": "Incoming request to get feature flags",
        "exception": null,
        "module": "v2",
        "line": 60,
        "extra": {
          "request_id": "7d438661-a744-4fed-b917-d9ba35e83abd",
          "user": {
            "auth_time": 1724223256,
            "iat": 1724258380,
            "optout": false,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "organization_id": null,
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "firebase": {
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "baseUrl": null,
            "allowed": true,
            "email_verified": true,
            "tier_level": 1,
            "email": "faizyboy1@gmail.com",
            "exp": 1724261980,
            "aud": "codium-dev-360812",
            "codiumate": null,
            "tier_end_date": 1718801312000,
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1"
          },
          "tier_level": 1
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.783808178Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8f72cd1b-bc01-4902-bb6d-d3da9ef8cf5a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.803441Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8f72cd1b-bc01-4902-bb6d-d3da9ef8cf5a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.456187229Z"
  },
  {
    "insertId": "nqi5h0h2azpdpegl",
    "jsonPayload": {
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:41.806310+00:00",
          "timestamp": 1724258381.80631
        },
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "line": 37,
        "function": "dispatch",
        "thread": {
          "name": "MainThread",
          "id": 136961113226112
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "elapsed": {
          "seconds": 119007.023463,
          "repr": "1 day, 9:03:27.023463"
        },
        "message": "Request handled",
        "extra": {
          "url": "http://10.164.17.15/v1/health/live",
          "on_prem_log": true,
          "request_id": "N/A",
          "status_code": 200,
          "method": "GET",
          "source_host": "35.191.205.164"
        },
        "exception": null,
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production-jb",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.806595571Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69d7c8ff44",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.758527051Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6dd9855f-efbd-4a4a-8c88-b792d77eb04b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.829531Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6dd9855f-efbd-4a4a-8c88-b792d77eb04b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.225513628Z"
  },
  {
    "insertId": "jilbmmhtcpujf0td",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "function": "dispatch",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "module": "app",
        "exception": null,
        "line": 37,
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "name": "app",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "message": "Request handled",
        "extra": {
          "request_id": "7d438661-a744-4fed-b917-d9ba35e83abd",
          "url": "https://api.codium.ai/v2/users/features",
          "source_host": "81.17.122.73",
          "on_prem_log": true,
          "status_code": 200,
          "method": "GET"
        },
        "elapsed": {
          "repr": "1 day, 9:00:03.319536",
          "seconds": 118803.319536
        },
        "time": {
          "repr": "2024-08-21 16:39:41.851295+00:00",
          "timestamp": 1724258381.851295
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:41.851562657Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "1y7vegefmkm549",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "priority": 9000,
        "outcome": "ACCEPT"
      },
      "previewSecurityPolicy": {
        "priority": 500,
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "IN"
        },
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "81.17.122.73",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.17.14",
      "latency": "0.374416s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:41.853707Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/2ffd64858a98130578f6fbde329175b9",
    "receiveTimestamp": "2024-08-21T16:39:43.013177305Z",
    "spanId": "1c5d12d5b9f73446"
  },
  {
    "insertId": "copzc32sr1bjyxyk",
    "jsonPayload": {
      "record": {
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "extra": {},
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "elapsed": {
          "repr": "1 day, 9:04:39.281999",
          "seconds": 119079.281999
        },
        "exception": null,
        "name": "copilot_proxy.auth.core",
        "module": "core",
        "function": "verify_user_token",
        "thread": {
          "id": 134586986112704,
          "name": "AnyIO worker thread"
        },
        "time": {
          "timestamp": 1724258381.871499,
          "repr": "2024-08-21 16:39:41.871499+00:00"
        },
        "line": 156,
        "message": "User wild_neo@mail.ru will use enterprise openAI org. tier:20 codiumate:None optout:False",
        "process": {
          "id": 16,
          "name": "MainProcess"
        }
      },
      "text": "User wild_neo@mail.ru will use enterprise openAI org. tier:20 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.871804926Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a8aaf877-664d-4a59-9f3a-bc9472d9284d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.872088Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a8aaf877-664d-4a59-9f3a-bc9472d9284d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.973591120Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:53644 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "026y7qc8bxqlw8y0",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.885662333Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e9ea35d9-1c66-4145-a7b2-626e8dcafad4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.889988Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e9ea35d9-1c66-4145-a7b2-626e8dcafad4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.715842343Z"
  },
  {
    "textPayload": "time=\"2024-08-21T16:39:41Z\" level=info msg=\"finished unary call with code OK\" grpc.code=OK grpc.method=Check grpc.service=grpc.health.v1.Health grpc.start_time=\"2024-08-21T16:39:41Z\" grpc.time_ms=0.02 span.kind=server system=grpc",
    "insertId": "so9poq2k858vpc05",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "container_name": "repo-server",
        "namespace_name": "argo-cd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "argo-cd-argocd-repo-server-68c4fd64bb-z4c9s"
      }
    },
    "timestamp": "2024-08-21T16:39:41.890305708Z",
    "severity": "ERROR",
    "labels": {
      "k8s-pod/app_kubernetes_io/component": "repo-server",
      "k8s-pod/app_kubernetes_io/version": "v2.10.5",
      "k8s-pod/pod-template-hash": "68c4fd64bb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-tepw",
      "k8s-pod/app_kubernetes_io/instance": "argo-cd",
      "k8s-pod/app_kubernetes_io/part-of": "argocd",
      "k8s-pod/app_kubernetes_io/name": "argocd-repo-server",
      "k8s-pod/app_kubernetes_io/managed-by": "Helm",
      "k8s-pod/helm_sh/chart": "argo-cd-6.7.6"
    },
    "logName": "projects/codium-production/logs/stderr",
    "receiveTimestamp": "2024-08-21T16:39:46.794955359Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.get",
          "resource": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a16c1a07-a2b4-4aa0-95dc-2da1c84df812",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:41.897068Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a16c1a07-a2b4-4aa0-95dc-2da1c84df812",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.887481940Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "30bb32f2-aeb5-4e67-9a1f-4c47a99e7633",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.900709Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "30bb32f2-aeb5-4e67-9a1f-4c47a99e7633",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.310340364Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "44214ea6-0b39-4841-a6cf-7a6b79564e12",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.904666Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "44214ea6-0b39-4841-a6cf-7a6b79564e12",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.711892476Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/default/endpoints/kubernetes"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "core/v1/namespaces/default/endpoints/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6dc0465a-c4f1-4b84-b607-54ad1a38ff92",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:41.914610Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6dc0465a-c4f1-4b84-b607-54ad1a38ff92",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.810136057Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:apiserver"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.discovery.v1.endpointslices.get",
          "resource": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes"
        }
      ],
      "methodName": "io.k8s.discovery.v1.endpointslices.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "kube-apiserver/v1.27.16 (linux/amd64) kubernetes/ecbbe79"
      },
      "resourceName": "discovery.k8s.io/v1/namespaces/default/endpointslices/kubernetes",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "86c68684-f0ce-4f52-8dce-64144a0c0c24",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.919531Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "86c68684-f0ce-4f52-8dce-64144a0c0c24",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.609156931Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.endpoints.get",
          "resource": "core/v1/namespaces/kube-system/endpoints/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.core.v1.endpoints.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/endpoints/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f5c7200b-95f5-4fc6-9b87-b1013dfcd014",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.964054Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f5c7200b-95f5-4fc6-9b87-b1013dfcd014",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.211345031Z"
  },
  {
    "insertId": "673q99l9aopos1ql",
    "jsonPayload": {
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "line": 156,
        "function": "verify_user_token",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "name": "copilot_proxy.auth.core",
        "module": "core",
        "elapsed": {
          "repr": "1 day, 9:04:38.760975",
          "seconds": 119078.760975
        },
        "time": {
          "repr": "2024-08-21 16:39:41.966944+00:00",
          "timestamp": 1724258381.966944
        },
        "extra": {},
        "process": {
          "id": 22,
          "name": "MainProcess"
        },
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "exception": null,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134587053221568
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.967210971Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "1hxlgy2h7ci5yqlf",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "function": "get_features",
        "extra": {
          "request_id": "f01c01da-acbd-407a-b049-cedc9d164fe8",
          "user": {
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              }
            },
            "aud": "codium-dev-360812",
            "tier_level": 1,
            "email": "faizyboy1@gmail.com",
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "exp": 1724261980,
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "allowed": true,
            "iat": 1724258380,
            "optout": false,
            "baseUrl": null,
            "email_verified": true,
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "codiumate": null,
            "auth_time": 1724223256,
            "organization_id": null,
            "tier_end_date": 1718801312000
          },
          "tier_level": 1
        },
        "message": "Incoming request to get feature flags",
        "elapsed": {
          "seconds": 119078.761516,
          "repr": "1 day, 9:04:38.761516"
        },
        "name": "copilot_proxy.api.users.v2",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "exception": null,
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "time": {
          "timestamp": 1724258381.967485,
          "repr": "2024-08-21 16:39:41.967485+00:00"
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "module": "v2",
        "line": 60
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:41.967708868Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:vpa-recommender"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "vpa-recommender/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/vpa-recommender",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c9dd8b77-f0fe-4008-a04c-e4b4026a3b87",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:41.977467Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-controller\" of ClusterRole \"system:gke-controller\" to User \"system:vpa-recommender\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c9dd8b77-f0fe-4008-a04c-e4b4026a3b87",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.219775065Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7d41ec22-4a5d-44a2-afa4-49b0285c55f6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.986816Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7d41ec22-4a5d-44a2-afa4-49b0285c55f6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.117235533Z"
  },
  {
    "insertId": "op375keqakds",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "priority": 500,
        "outcome": "ACCEPT",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE"
      },
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "IN"
        }
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "81.17.122.73",
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "priority": 9000,
        "configuredAction": "ALLOW",
        "name": "codium-app-cloud-armor-policy"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.1.4",
      "latency": "0.292729s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:41.992407Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/2c180e8522c561fad56b54a8f995522b",
    "receiveTimestamp": "2024-08-21T16:39:42.813614943Z",
    "spanId": "13f7563b8cce34c4"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.componentstatuses.list",
          "resource": "core/v1/componentstatuses"
        }
      ],
      "methodName": "io.k8s.core.v1.componentstatuses.list",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/componentstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8fff0052-b31c-4d38-af49-f25866cc9341",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:41.996237Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\"",
      "k8s.io/deprecated": "true"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8fff0052-b31c-4d38-af49-f25866cc9341",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.619661319Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:977] Starting health check...",
    "insertId": "237kw6i1o68wwa75",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "llm-server-69c884887-58l4j",
        "project_id": "codium-production",
        "namespace_name": "llm",
        "container_name": "main",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.002937420Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:988] Health check took 0.000186s",
    "insertId": "95r8p5v6ylls6hd3",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "pod_name": "llm-server-69c884887-58l4j",
        "namespace_name": "llm",
        "project_id": "codium-production",
        "container_name": "main",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.002984712Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69c884887",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/app": "llm-server"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "INFO:     35.191.212.246:56182 - \"GET /health HTTP/1.1\" 200 OK",
    "insertId": "7r97asly4add7p6o",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "main",
        "project_id": "codium-production",
        "pod_name": "llm-server-69c884887-58l4j",
        "namespace_name": "llm",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.003533901Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/pod-template-hash": "69c884887"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "insertId": "m7e8zkf1xzvog",
    "jsonPayload": {
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "09fa2749da64939e9b4053172a8e78dc",
        "remoteIpInfo": {
          "regionCode": "US"
        }
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "priority": 1000,
        "configuredAction": "ALLOW"
      },
      "remoteIp": "35.239.194.85"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://proxy.codium.ai/v1/health/live",
      "requestSize": "133",
      "status": 200,
      "responseSize": "163",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.239.194.85",
      "serverIp": "10.164.10.5",
      "latency": "0.052014s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.007554Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/0389654861c963a01a33f3a43672a17e",
    "receiveTimestamp": "2024-08-21T16:39:42.735204723Z",
    "spanId": "7bb04f9efdcfeb71"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kubestore-collector"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kubestore_collector/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/cluster-kubestore",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "6e7dbbec-8696-46d7-97dc-ce8cf40d60d3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.010710Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kubestore-collector\" of ClusterRole \"system:kubestore-collector\" to User \"system:kubestore-collector\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "6e7dbbec-8696-46d7-97dc-ce8cf40d60d3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.009278428Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-attacher/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "858c163a-e2ae-41bd-8c76-25587682698b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.010945Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "858c163a-e2ae-41bd-8c76-25587682698b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.171617181Z"
  },
  {
    "insertId": "4r3h1nb7pfgs2g7c",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 164,
        "module": "app",
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "extra": {
          "on_prem_log": true
        },
        "message": "Incoming request /v1/health/live",
        "function": "live",
        "elapsed": {
          "repr": "1 day, 9:00:03.479760",
          "seconds": 118803.47976
        },
        "time": {
          "timestamp": 1724258382.011519,
          "repr": "2024-08-21 16:39:42.011519+00:00"
        },
        "exception": null,
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.011817366Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.componentstatuses.list",
          "resource": "core/v1/componentstatuses"
        }
      ],
      "methodName": "io.k8s.core.v1.componentstatuses.list",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/componentstatuses",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5f75dead-59bf-45b8-a192-c85dbbd47000",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.015953Z",
    "labels": {
      "k8s.io/deprecated": "true",
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5f75dead-59bf-45b8-a192-c85dbbd47000",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.219806135Z"
  },
  {
    "insertId": "1oi30kle8vpvm",
    "jsonPayload": {
      "enforcedSecurityPolicy": {
        "priority": 14000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT"
      },
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "BR"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "remoteIp": "177.69.243.97",
      "previewSecurityPolicy": {
        "configuredAction": "THROTTLE",
        "priority": 500,
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        }
      },
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "17246",
      "status": 200,
      "responseSize": "764",
      "userAgent": "axios/1.6.2",
      "remoteIp": "177.69.243.97",
      "serverIp": "10.164.15.3",
      "latency": "1.663999s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:42.023039Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/8dc4f2224fb3c316863553f17bbbe0c1",
    "receiveTimestamp": "2024-08-21T16:39:44.472723236Z",
    "spanId": "190171906af225e0"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1e9d8a38-d154-4ef7-b87d-3891719cfa03",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.031777Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1e9d8a38-d154-4ef7-b87d-3891719cfa03",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.249069340Z"
  },
  {
    "insertId": "t0juu6hgev2no6ab",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "seconds": 118803.503226,
          "repr": "1 day, 9:00:03.503226"
        },
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "time": {
          "timestamp": 1724258382.034985,
          "repr": "2024-08-21 16:39:42.034985+00:00"
        },
        "line": 37,
        "module": "app",
        "extra": {
          "url": "https://proxy.codium.ai/v1/health/live",
          "method": "GET",
          "request_id": "N/A",
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "35.239.194.85"
        },
        "name": "app",
        "function": "dispatch",
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "message": "Request handled",
        "process": {
          "name": "MainProcess",
          "id": 21
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "container_name": "proxy",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.035274027Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com",
        "serviceAccountDelegationInfo": [
          {
            "firstPartyPrincipal": {
              "principalEmail": "service-67590289846@compute-system.iam.gserviceaccount.com"
            }
          }
        ],
        "principalSubject": "serviceAccount:tf-gke-production-clus-f8ln@codium-production.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "34.45.35.2",
        "callerSuppliedUserAgent": "opencensus-go 0.24.0; stackdriver-exporter 0.13.3 grpc-go/1.56.1,gzip(gfe)",
        "callerNetwork": "//compute.googleapis.com/projects/codium-production/global/networks/__unknown__",
        "requestAttributes": {
          "time": "2024-08-21T16:39:42.048885550Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "monitoring.googleapis.com",
      "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries",
      "authorizationInfo": [
        {
          "resource": "67590289846",
          "permission": "monitoring.timeSeries.create",
          "granted": true,
          "resourceAttributes": {},
          "permissionType": "DATA_WRITE"
        }
      ],
      "resourceName": "projects/codium-production",
      "request": {
        "@type": "type.googleapis.com/google.monitoring.v3.CreateTimeSeriesRequest",
        "name": "projects/codium-production"
      }
    },
    "insertId": "1kby366f449gsw",
    "resource": {
      "type": "audited_resource",
      "labels": {
        "project_id": "codium-production",
        "service": "monitoring.googleapis.com",
        "method": "google.monitoring.v3.MetricService.CreateTimeSeries"
      }
    },
    "timestamp": "2024-08-21T16:39:42.041821033Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:42.522871545Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "239876c3-5f5d-46d0-bdd8-9a43f40abce6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.056732Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "239876c3-5f5d-46d0-bdd8-9a43f40abce6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.171617181Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "85ce14c1-e966-4eb0-b902-712c1eeb6df6",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.066422Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "85ce14c1-e966-4eb0-b902-712c1eeb6df6",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.425912680Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ff35ea8a-7964-45dc-aca1-6138a4b3baab",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.068453Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ff35ea8a-7964-45dc-aca1-6138a4b3baab",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.506917752Z"
  },
  {
    "insertId": "ulabdaxcq732vu1w",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "name": "app",
        "thread": {
          "name": "MainThread",
          "id": 135434384432000
        },
        "function": "live",
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "elapsed": {
          "repr": "3 days, 6:30:21.362808",
          "seconds": 282621.362808
        },
        "extra": {
          "on_prem_log": true
        },
        "module": "app",
        "line": 164,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "time": {
          "timestamp": 1724258382.076138,
          "repr": "2024-08-21 16:39:42.076138+00:00"
        },
        "message": "Incoming request /v1/health/live"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "project_id": "codium-production",
        "namespace_name": "production-recursion",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.076436408Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.316653254Z"
  },
  {
    "insertId": "r27hxjp51uno81l9",
    "jsonPayload": {
      "record": {
        "module": "app",
        "name": "app",
        "extra": {
          "url": "https://api.codium.ai/v2/users/features",
          "request_id": "f01c01da-acbd-407a-b049-cedc9d164fe8",
          "method": "GET",
          "status_code": 200,
          "source_host": "81.17.122.73",
          "on_prem_log": true
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "line": 37,
        "elapsed": {
          "seconds": 119078.884626,
          "repr": "1 day, 9:04:38.884626"
        },
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "function": "dispatch",
        "message": "Request handled",
        "time": {
          "timestamp": 1724258382.090595,
          "repr": "2024-08-21 16:39:42.090595+00:00"
        },
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.090908563Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "409b7cd0-494c-4e2d-a707-1490517e0e0b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.098004Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "409b7cd0-494c-4e2d-a707-1490517e0e0b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.908526551Z"
  },
  {
    "insertId": "nrfuizc1yjd6vysi",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "seconds": 282621.388526,
          "repr": "3 days, 6:30:21.388526"
        },
        "line": 37,
        "message": "Request handled",
        "time": {
          "timestamp": 1724258382.101856,
          "repr": "2024-08-21 16:39:42.101856+00:00"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "name": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "thread": {
          "name": "MainThread",
          "id": 135434384432000
        },
        "extra": {
          "url": "http://10.164.4.6:5432/v1/health/live",
          "request_id": "N/A",
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "10.164.4.1",
          "method": "GET"
        },
        "function": "dispatch",
        "module": "app",
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-rv779",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production-recursion"
      }
    },
    "timestamp": "2024-08-21T16:39:42.102168482Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-ptfj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.316653254Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "a113be0e-0164-452e-a4eb-26179e7f4c77",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.106871Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "a113be0e-0164-452e-a4eb-26179e7f4c77",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.009428408Z"
  },
  {
    "insertId": "2ekluwyc3o8mp4ih",
    "jsonPayload": {
      "record": {
        "thread": {
          "id": 136597458638528,
          "name": "AnyIO worker thread"
        },
        "line": 156,
        "elapsed": {
          "seconds": 119311.904024,
          "repr": "1 day, 9:08:31.904024"
        },
        "name": "copilot_proxy.auth.core",
        "function": "verify_user_token",
        "time": {
          "repr": "2024-08-21 16:39:42.108269+00:00",
          "timestamp": 1724258382.108269
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "module": "core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "exception": null,
        "extra": {},
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False"
      },
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.108530085Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "amistd3s0uz63a6j",
    "jsonPayload": {
      "text": "Incoming request to get feature flags\n",
      "record": {
        "message": "Incoming request to get feature flags",
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "module": "v2",
        "extra": {
          "tier_level": 1,
          "user": {
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "codiumate": null,
            "exp": 1724261980,
            "firebase": {
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              },
              "sign_in_provider": "custom"
            },
            "optout": false,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "email_verified": true,
            "tier_level": 1,
            "baseUrl": null,
            "auth_time": 1724223256,
            "organization_id": null,
            "allowed": true,
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "aud": "codium-dev-360812",
            "iat": 1724258380,
            "email": "faizyboy1@gmail.com",
            "tier_end_date": 1718801312000
          },
          "request_id": "fdb2e58f-78d1-4e02-b8f5-f1c3a1d038c1"
        },
        "function": "get_features",
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "elapsed": {
          "repr": "1 day, 9:08:31.904522",
          "seconds": 119311.904522
        },
        "line": 60,
        "name": "copilot_proxy.api.users.v2",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/users/v2.py"
        },
        "time": {
          "timestamp": 1724258382.108767,
          "repr": "2024-08-21 16:39:42.108767+00:00"
        },
        "exception": null
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.108993736Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "11gi1yff2jjs66",
    "jsonPayload": {
      "previewSecurityPolicy": {
        "priority": 500,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "THROTTLE",
        "outcome": "ACCEPT",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      },
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "81.17.122.73",
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "b0d723b4189636ab4b7c8a4e6cc898c5",
        "remoteIpInfo": {
          "regionCode": "IN"
        }
      },
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT"
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1370",
      "status": 200,
      "responseSize": "414",
      "userAgent": "axios/1.6.2",
      "remoteIp": "81.17.122.73",
      "serverIp": "10.164.17.14",
      "latency": "0.312065s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production",
        "zone": "global",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo"
      }
    },
    "timestamp": "2024-08-21T16:39:42.111758Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/359dccb286077ad3ccae3a6897e6937a",
    "receiveTimestamp": "2024-08-21T16:39:42.995678454Z",
    "spanId": "b962bc8bfa60a066"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5c98b931-4c22-407f-9221-42afcb37b85a",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.117930Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5c98b931-4c22-407f-9221-42afcb37b85a",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.125400389Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "27f92373-cf2c-496f-9d29-7ce5ced9bf4f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.126016Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "27f92373-cf2c-496f-9d29-7ce5ced9bf4f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.813368013Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "addon-manager/1.26-v0.13 (19ed0c6)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "57f6dcaa-d4aa-4144-97f7-8dbbbdb96370",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.132705Z",
    "labels": {
      "authorization.k8s.io/reason": "",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "57f6dcaa-d4aa-4144-97f7-8dbbbdb96370",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.625333953Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d88233d9-239a-46ab-abf8-95c61d63958b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.132878Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d88233d9-239a-46ab-abf8-95c61d63958b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.757485834Z"
  },
  {
    "insertId": "6h1po71n24asxot0",
    "jsonPayload": {
      "record": {
        "exception": null,
        "elapsed": {
          "seconds": 118367.091147,
          "repr": "1 day, 8:52:47.091147"
        },
        "line": 156,
        "extra": {},
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134622713206464
        },
        "time": {
          "repr": "2024-08-21 16:39:42.132650+00:00",
          "timestamp": 1724258382.13265
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "function": "verify_user_token",
        "name": "copilot_proxy.auth.core",
        "module": "core",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False"
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.132945670Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "t82pkucbzm4qav4f",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "extra": {},
        "module": "core",
        "function": "verify_minimum_tier_level",
        "process": {
          "id": 13,
          "name": "MainProcess"
        },
        "line": 106,
        "thread": {
          "name": "AnyIO worker thread",
          "id": 134622713206464
        },
        "name": "copilot_proxy.auth.core",
        "exception": null,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "elapsed": {
          "seconds": 118367.091584,
          "repr": "1 day, 8:52:47.091584"
        },
        "message": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "timestamp": 1724258382.133087,
          "repr": "2024-08-21 16:39:42.133087+00:00"
        }
      },
      "text": "User lf0448504@gmail.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.133238035Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "wips1hrddb4y98yj",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "thread": {
          "id": 134626284370816,
          "name": "MainThread"
        },
        "elapsed": {
          "repr": "1 day, 8:52:47.094902",
          "seconds": 118367.094902
        },
        "process": {
          "name": "MainProcess",
          "id": 13
        },
        "function": "run_code_completion",
        "extra": {
          "data": {
            "file_diff_content": "",
            "repo_context": [],
            "context": [],
            "user_context": [],
            "context_mode": "pre_pr",
            "doc_context_prefix": "@extends('main')\n\n@push('contents')\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\n    <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\n        @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \n                                                \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n                                                \"items\" => $models, \"value\" => $devices, \"multiple\" => true ]) \n        @endcomponent\n        @component(\"components.selectorfield\", [\"label\" => \"Deposito\", \"id\" => \"deposits\", \"name\" => \"deposits\", \n        \"valueField\" => \"deposits\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \n        \"items\" => $deposits, \"value\" => $deposits, \"multiple\" => true ]) \n    @endcomponent\n\n        @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\n    </form>\n    @endcomponent\n    @foreach($deposits as $deposit)\n    <div class=\"navbar-form navbar-right\">\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\n    </div>\n    @component('components.datatable', ['id' => 'listDatatable', \"fullsize\" => true, \"condensed\"=>true]) \n    {\n    <h1>Depósito: {{ $deposit->name }} | Dominio: {{ $deposit->domain }} | Holder ID: {{ $deposit->holderid }} </h1>\n    <h3>Responsavel {{ $responsavel[$deposit->holderid[$contacto->co",
            "is_multiline": false,
            "user_data": {
              "editor_version": "1.92.2",
              "editor_type": "vscode",
              "user_id": null,
              "os_version": "v20.14.0",
              "installation_id": "d9512a22-64ab-4187-87de-bc5e6405f7d3",
              "editor_sub_version": null,
              "extension_version": "0.9.13",
              "os_platform": "win32"
            },
            "max_remote_context": 5,
            "reference_snippet_messages": [
              {
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure",
                "content": "bower.json\ncomposer.json\ncomposer.lock\nconfig\n  app.php\n  auth.php\n  cache_core.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nconfig.local\n  app.php\n  auth.php\n  cache_core.php\n  config\n    app.php\n    auth.php\n    cache_core.php\n    controllers.php\n    database.php\n    logging.php\n    mail.php\n    nodes.php\n    slack.php\n    views.php\n    web.php\n  controllers.php\n  database.php\n  logging.php\n  mail.php\n  nodes.php\n  slack.php\n  views.php\n  web.php\nDockerfile\ndocs\n  Administration\n    Layer\n      modelUpLoadZone.csv\n    Quote\n      js\n        quote.source.js\n      template.php.docx\n      template.php.xlsx\n      users.json\nexecute\nLICENSE.md\nphpunit-autoload\nphpunit.xml\npublic\n  bsafe\n    css\n      bootstrap.min.css\n      custom.css\n      style.css\n    js\n      bootstrap.min.js\n      jquery-3.3.1.min.js\n      jquery-3.3.1.slim.min.js\n      main.js\n      popper.min.js\n  components\n    cesium-1.55\n      Assets\n        approximateTerrainHeights.json\n        IAU2006_XYS\n          IAU2006_XYS_0.json\n          IAU2006_XYS_1.json\n          IAU2006_XYS_10.json\n          IAU2006_XYS_11.json\n          IAU2006_XYS_12.json\n          IAU2006_XYS_13.json\n          IAU2006_XYS_14.json\n          IAU2006_XYS_15.json\n          IAU2006_XYS_16.json\n          IAU2006_XYS_17.json\n          IAU2006_XYS_18.json\n          IAU2006_XYS_19.json\n          IAU2006_XYS_2.json\n          IAU2006_XYS_20.json\n          IAU2006_XYS_21.json\n          IAU2006_XYS_22.json\n          IAU2006_XYS_23.json\n          IAU2006_XYS_24.json\n          IAU2006_XYS_25.json\n          IAU2006_XYS_26.json\n          IAU2006_XYS_27.json\n          IAU2006_XYS_3.json\n          IAU2006_XYS_4.json\n          IAU2006_XYS_5.json\n          IAU2006_XYS_6.json\n          IAU2006_XYS_7.json\n          IAU2006_XYS_8.json\n          IAU2006_XYS_9.json\n        Images\n          bing_maps_credit.png\n          cesium_credit.png\n          google_earth_credit.png\n          ion-credit.png\n        Textures\n          LensFlare\n            DirtMask.jpg\n            StarBurst.jpg\n          maki\n            airfield.png\n            airport.png\n            alcohol-shop.png\n            america-football.png\n            art-gallery.png\n            bakery.png\n            bank.png\n            bar.png\n            baseball.png\n            basketball.png\n            beer.png\n            bicycle.png\n            building.png\n            bus.png\n            cafe.png\n            camera.png\n            campsite.png\n            car.png\n            cemetery.png\n            cesium.png\n            chemist.png\n            cinema.png\n            circle-stroked.png\n            circle.png\n            city.png\n            clothing-store.png\n            college.png\n            commercial.png\n            cricket.png\n            cross.png\n            dam.png\n            danger.png\n            disability.png\n            dog-park.png\n            embassy.png\n            emergency-telephone.png\n            entrance.png\n            farm.png\n            fast-food.png\n            ferry.png\n            fire-station.png\n            fuel.png\n            garden.png\n            gift.png\n            golf.png\n            grocery.png\n            hairdresser.png\n            harbor.png\n            heart.png\n            heliport.png\n            hospital.png\n            ice-cream.png\n            industrial.png\n            land-use.png\n            laundry.png\n            library.png\n            lighthouse.png\n            lodging.png\n            logging.png\n            london-underground.png\n            marker-stroked.png\n            marker.png\n            minefield.png\n            mobilephone.png\n            monument.png\n            museum.png\n            music.png\n            oil-well.png\n            park.png\n            park2.png\n            parking-garage.png\n            parking.png\n            pharmacy.png\n            pitch.png\n            place-of-worship.png\n            playground.png\n            police.png\n            polling-place.png\n            post.png\n            prison.png\n            rail-above.png\n            rail-light.png\n            rail-metro.png\n            rail-underground.png\n            rail.png\n            religious-christian.png\n            religious-jewish.png\n            religious-muslim.png\n            restaurant.png\n            roadblock.png\n            rocket.png\n            school.png\n            scooter.png\n            shop.png\n            skiing.png\n            slaughterhouse.png\n            soccer.png\n            square-stroked.png\n            square.png\n            star-stroked.png\n            star.png\n            suitcase.png\n            swimming.png\n            telephone.png\n            tennis.png\n            theatre.png\n            toilets.png\n            town-hall.png\n            town.png\n            triangle-stroked.png\n            triangle.png\n            village.png\n            warehouse.png\n            waste-basket.png\n            water.png\n            wetland.png\n            zoo.png\n          moonSmall.jpg\n          NaturalEarthII\n            0\n              0\n                0.jpg\n              1\n                0.jpg\n            1\n              0\n                0.jpg\n                1.jpg\n              1\n                0.jpg\n                1.jpg\n              2\n                0.jpg\n                1.jpg\n              3\n                0.jpg\n                1.jpg\n            2\n              0\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              1\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              2\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              3\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              4\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              5\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              6\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n              7\n                0.jpg\n                1.jpg\n                2.jpg\n                3.jpg\n            tilemapresource.xml\n          pin.svg\n          SkyBox\n            tycho2t3_80_mx.jpg\n            tycho2t3_80_my.jpg\n            tycho2t3_80_mz.jpg\n            tycho2t3_80_px.jpg\n            tycho2t3_80_py.jpg\n            tycho2t3_80_pz.jpg\n          waterNormals.jpg\n          waterNormalsSmall.jpg\n      Cesium.js\n      ThirdParty"
              },
              {
                "type": "Clipboard",
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                "file_name": "resources\\views\\dashboards\\list.blade.php"
              },
              {
                "type": "Clipboard",
                "content": "@foreach($deposits as $deposit)\r\n    <div class=\"navbar-form navbar-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" data-target=\"#listDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n    </div>\r\n    @component('components.datatable', ['id' => 'listData",
                "file_name": "resources\\views\\dashboards\\list.blade.php"
              },
              {
                "type": "Clipboard",
                "file_name": "Codiumate chat",
                "content": "public function getResponsavel(array $personaIds, array $contacto) {\n    $responsavel = [];\n\n    Resource::get(\"persona\")\n        ->select(\"personaid\", \"nombre\", \"apellido\")\n        ->whereIn(\"personaid\", $personaIds)\n        ->chunk(5000, function($result) use (&$responsavel, $contacto) {\n            foreach ($result as $resp) {\n                fo"
              },
              {
                "content": "@extends (\"main\")\r\n\r\n@push(\"contents\")\r\n    @component(\"components.toolbar\", [\"title\"=>\"Menu\"])\r\n        <form class=\"navbar-form navbar-left\" method=\"POST\" target=\"_self\" role=\"search\" id=\"filterForm\">\r\n            @component(\"components.datefield\",[\"id\"=>\"dateFrom\", \"name\"=>\"dateFrom\", \"dateType\"=>\"date\", \"value\"=>$dateFrom, \"label\"=>get_message(\"From\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.datefield\",[\"id\"=>\"dateTo\", \"name\"=>\"dateTo\", \"dateType\"=>\"date\", \"value\"=>$dateTo, \"label\"=>get_message(\"To\"), \"size\"=>9])@endcomponent\r\n            @component(\"components.selectorfield\", [\"label\" => \"Modelo\", \"id\" => \"model\", \"name\" => \"modelid\", \r\n                                                    \"valueField\" => \"modelid\", \"displayField\" => \"name\", \"emptyText\" => \"Buscar ...\", \r\n                                                    \"items\" => $models, \"value\" => $modelid, \"multiple\" => true ]) \r\n            @endcomponent\r\n            @component(\"components.checkboxfield\", [\"id\"=>\"withTimeZero\", \"name\" => \"withTimeZero\", \"infoText\" => \"Incluir tempo zerado\", \"checked\" => $withTimeZero])@endcomponent\r\n            @component(\"components.button\", [\"id\"=>\"searchButton\", \"type\"=>\"submit\", \"text\"=>get_message(\"Search\"),\"style\"=>\"primary\",\"icon\"=>\"search\"])@endcomponent\r\n        </form>\r\n    @endcomponent\r\n\r\n    <div id=\"content\">\r\n        @component(\"components.widget\", [\"title\"=>\"Depósitos\", \"nopadding\"=>true, \"hidebutton\" => true])\r\n            @component(\"components.toolbar\")\r\n                <div class=\"navbar-form navbar-left\">\r\n                    <div class=\"form-group\">\r\n                            <div class=\"input-group\">\r\n                                <input class=\"form-control\" placeholder=\"{{ get_message(\"Search\") }} ...\" type=\"text\" data-target=\"#depositsDatatable\" data-datatable-action=\"search\">\r\n                                <span class=\"input-group-addon\"><i class=\"fas fa-search\"></i></span>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"previousPage\"><i class=\"fas fa-angle-double-left\"></i> {{get_message(\"Previous\")}}</button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"nextPage\">{{ get_message(\"Next\") }} <i class=\"fas fa-angle-double-right\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"navbar-form navbar-right\">\r\n                    <button type=\"button\" class=\"btn btn-default\" data-target=\"#depositsDatatable\" data-datatable-action=\"exportToFullCsv\"><i class=\"fas fa-download\"></i> {{ get_message(\"Export_to_csv\") }}</button>\r\n                </div>\r\n            @endcomponent\r\n\r\n            @component('components.datatable', ['id' => 'depositsDatatable', \"fullsize\" => true, \"condensed\"=>true]) \r\n            {\r\n                exportFilename: \"Depósitos{{\"_\".$dateFrom.\"_\".$dateTo}}\",\r\n                source: {\r\n                    pageSize: 15,\r\n                    proxy: {\r\n                        type: \"local\",\r\n                        data: {!! json_encode(array_values($deposits)) !!}\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        title: \"Id\",\r\n                        headerAlign: \"center\",\r\n                        align: \"center\",\r\n                        dataField: \"holderid\",",
                "file_name": "resources\\views\\dashboards\\time_on_deposit.blade.php",
                "type": "File"
              }
            ],
            "max_repo_context": 5,
            "language": "blade",
            "doc_context_suffix": "]] }}</h3>\n    <table class=\"table table-bordered\">\n        <thead>\n            <tr>\n                <th>Modelo Nome</th>\n                    <th>Modelo ID</th>\n                    <th>Quantidade</th>\n                </tr>\n            </thead>\n            <tbody>\n                @if(isset($devices[$deposit->holderid]))\n                    @foreach($devices[$deposit->holderid] as $modelId => $deviceGroup)\n                        <tr>\n                            <td>{{ $deviceGroup['modelname'] }}</td>\n                            <td>{{ $modelId }}</td>\n                            <td>{{ $deviceGroup['quantity'] }}</td>\n                        </tr>\n                    @endforeach\n                @endif\n            </tbody>\n        </table>\n    }\n    @endforeach\n{{--    @php\n     var_dump($responsavel);   \n    @endphp\n--}}\n\n@endpush\n",
            "remote_context": [],
            "extra_instructions": "",
            "relative_file_path": "resources/views/dashboards/list.blade.php",
            "is_file_diff": false,
            "task": ""
          },
          "release": {
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production",
            "Message": "fix yaml"
          },
          "on_prem_log": true,
          "user": {
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "organization_id": null,
            "baseUrl": null,
            "allowed": true,
            "uid": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "lf0448504@gmail.com"
                ],
                "google.com": [
                  "100799987662431406107"
                ]
              }
            },
            "name": "Luiz F",
            "optout": false,
            "email": "lf0448504@gmail.com",
            "codiumate": null,
            "auth_time": 1724161599,
            "iat": 1724258137,
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocJIN5SuPsN-Tura7U3l3dg5tW3N24qeUud2xArvP5DoFjgIng=s96-c",
            "sub": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "email_verified": true,
            "tier_end_date": 1725287318000,
            "aud": "codium-dev-360812",
            "tier_level": 10,
            "user_id": "o1IdRuM4k2XAgyGkBMO26EQmpV22",
            "exp": 1724261737
          },
          "request_id": "3df1baa8-efdc-4c14-8d83-56dc0852dc77"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "line": 513,
        "time": {
          "repr": "2024-08-21 16:39:42.136405+00:00",
          "timestamp": 1724258382.136405
        },
        "module": "v2",
        "exception": null,
        "name": "copilot_proxy.api.code.v2",
        "message": "Incoming request /v2/code/completion",
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.136833175Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-attacher/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-attacher-leader-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "4650e20a-c2a6-4b3e-bdbf-01347fc5153f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.143239Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "4650e20a-c2a6-4b3e-bdbf-01347fc5153f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.710149436Z"
  },
  {
    "insertId": "scu00y32rc09p9bl",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "exception": null,
        "message": "Incoming request /v1/health/live",
        "time": {
          "timestamp": 1724258382.143683,
          "repr": "2024-08-21 16:39:42.143683+00:00"
        },
        "line": 164,
        "module": "app",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "function": "live",
        "elapsed": {
          "repr": "3 days, 6:30:20.906348",
          "seconds": 282620.906348
        },
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "extra": {
          "on_prem_log": true
        },
        "thread": {
          "id": 132136409553792,
          "name": "MainThread"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster-dr",
        "namespace_name": "production",
        "project_id": "codium-production",
        "location": "us-east1",
        "pod_name": "auth-proxy-5c5c7445cc-qhr9g"
      }
    },
    "timestamp": "2024-08-21T16:39:42.143934818Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5c5c7445cc",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.878553092Z"
  },
  {
    "insertId": "qy10w3ry8qw06mr1",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "extra": {
          "status_code": 200,
          "method": "GET",
          "request_id": "fdb2e58f-78d1-4e02-b8f5-f1c3a1d038c1",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/users/features",
          "source_host": "81.17.122.73"
        },
        "time": {
          "repr": "2024-08-21 16:39:42.163114+00:00",
          "timestamp": 1724258382.163114
        },
        "message": "Request handled",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "name": "app",
        "elapsed": {
          "repr": "1 day, 9:08:31.958869",
          "seconds": 119311.958869
        },
        "module": "app",
        "thread": {
          "id": 136601619532672,
          "name": "MainThread"
        },
        "function": "dispatch",
        "line": 37,
        "exception": null,
        "process": {
          "id": 17,
          "name": "MainProcess"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-7grc8",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.163370748Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-ppvn"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.392692431Z"
  },
  {
    "insertId": "y5qgnv8kb4zrjssj",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "seconds": 282620.933735,
          "repr": "3 days, 6:30:20.933735"
        },
        "module": "app",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "function": "dispatch",
        "extra": {
          "on_prem_log": true,
          "url": "http://10.170.0.25:5432/v1/health/live",
          "method": "GET",
          "status_code": 200,
          "source_host": "10.170.0.1",
          "request_id": "N/A"
        },
        "time": {
          "repr": "2024-08-21 16:39:42.171070+00:00",
          "timestamp": 1724258382.17107
        },
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "message": "Request handled",
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 132136409553792
        },
        "exception": null,
        "line": 37
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production",
        "cluster_name": "production-cluster-dr",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5c5c7445cc-qhr9g",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.171322917Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--202a0f65-yyo1",
      "k8s-pod/pod-template-hash": "5c5c7445cc",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.878553092Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "41eb7fae-03f2-4ee6-bc66-be1ba46c5876",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.202171Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "41eb7fae-03f2-4ee6-bc66-be1ba46c5876",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.757485834Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "be38dd8c-870d-41a0-999d-0a2a0b56e05d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.203349Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "be38dd8c-870d-41a0-999d-0a2a0b56e05d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.307773575Z"
  },
  {
    "insertId": "1qrositfyud6ax",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "136.56.233.20",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "previewSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "priority": 500,
        "configuredAction": "THROTTLE",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        }
      },
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "a685258a6b9efe7d51633cf248ba2c83",
        "remoteIpInfo": {
          "regionCode": "US"
        }
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "name": "codium-app-cloud-armor-policy",
        "outcome": "ACCEPT",
        "configuredAction": "ALLOW",
        "priority": 14000
      },
      "statusDetails": "response_sent_by_backend"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "18143",
      "status": 200,
      "responseSize": "580",
      "userAgent": "axios/1.6.2",
      "remoteIp": "136.56.233.20",
      "serverIp": "10.164.15.3",
      "latency": "1.131301s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "zone": "global",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c"
      }
    },
    "timestamp": "2024-08-21T16:39:42.203472Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/0731dbcb8f1bd9d53f81d507630e9d30",
    "receiveTimestamp": "2024-08-21T16:39:44.366042974Z",
    "spanId": "61fe918ddd05bb5c"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "635d2e54-c4bd-4a81-b6e3-1c5fc1d42de3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.203556Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "635d2e54-c4bd-4a81-b6e3-1c5fc1d42de3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.761732980Z"
  },
  {
    "insertId": "fsqbvqk2lq2pjvt9",
    "jsonPayload": {
      "pid": "1",
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-bqxtj"
      }
    },
    "timestamp": "2024-08-21T16:39:42.204961276Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:43.866020716Z"
  },
  {
    "insertId": "dawe8qgvfkbd1qi9",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "filestore-node-bqxtj",
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.205003576Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/pod-template-generation": "13",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/controller-revision-hash": "57f648ff8b"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:43.866020716Z"
  },
  {
    "insertId": "ivbe1if2fdpe1",
    "jsonPayload": {
      "securityPolicyRequestData": {
        "remoteIpInfo": {
          "regionCode": "DE"
        },
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91"
      },
      "previewSecurityPolicy": {
        "priority": 500,
        "outcome": "ACCEPT",
        "rateLimitAction": {
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ",
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM"
        },
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy"
      },
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "enforcedSecurityPolicy": {
        "priority": 14000,
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW",
        "outcome": "ACCEPT"
      },
      "statusDetails": "response_sent_by_backend",
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "remoteIp": "188.174.251.242"
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://api.codium.ai/v2/code/completion",
      "requestSize": "13196",
      "status": 200,
      "responseSize": "757",
      "userAgent": "axios/1.6.2",
      "remoteIp": "188.174.251.242",
      "serverIp": "10.164.16.6",
      "latency": "1.497410s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.215315Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/48cb4b05f2a1b4e90c0491926d8e14fc",
    "receiveTimestamp": "2024-08-21T16:39:44.024300689Z",
    "spanId": "a12172418516ad04"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "717cded0-228c-4363-942a-cde5181f0db3",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.220715Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "717cded0-228c-4363-942a-cde5181f0db3",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.114121417Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "36f86268-de07-497d-a338-c7e59de9e4b7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.224555Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "36f86268-de07-497d-a338-c7e59de9e4b7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.707901611Z"
  },
  {
    "insertId": "m6nn22m4uuy0722o",
    "jsonPayload": {
      "record": {
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "time": {
          "repr": "2024-08-21 16:39:42.232036+00:00",
          "timestamp": 1724258382.232036
        },
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "thread": {
          "id": 134586121828032,
          "name": "AnyIO worker thread"
        },
        "message": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "extra": {},
        "exception": null,
        "name": "copilot_proxy.auth.core",
        "function": "verify_user_token",
        "line": 156,
        "module": "core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "elapsed": {
          "seconds": 119078.799337,
          "repr": "1 day, 9:04:38.799337"
        }
      },
      "text": "User faizyboy1@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.232319417Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "kt2tpvdftxhfqk2r",
    "jsonPayload": {
      "record": {
        "extra": {
          "user": {
            "codiumate": null,
            "allowed": true,
            "tier_level": 1,
            "exp": 1724261980,
            "auth_time": 1724223256,
            "organization_id": null,
            "optout": false,
            "tier_end_date": 1718801312000,
            "baseUrl": null,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "faizyboy1@gmail.com"
                ]
              }
            },
            "sub": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "email": "faizyboy1@gmail.com",
            "aud": "codium-dev-360812",
            "user_id": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "uid": "oWU2hXDNP3TMBvLXbLTxnes180q1",
            "email_verified": true,
            "iat": 1724258380,
            "iss": "https://securetoken.google.com/codium-dev-360812"
          },
          "request_id": "016282de-e00a-487f-a976-f70ccc5db82d",
          "tier_level": 1
        },
        "line": 60,
        "name": "copilot_proxy.api.users.v2",
        "time": {
          "timestamp": 1724258382.232598,
          "repr": "2024-08-21 16:39:42.232598+00:00"
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "message": "Incoming request to get feature flags",
        "function": "get_features",
        "module": "v2",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/api/users/v2.py",
          "name": "v2.py"
        },
        "exception": null,
        "elapsed": {
          "seconds": 119078.799899,
          "repr": "1 day, 9:04:38.799899"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        }
      },
      "text": "Incoming request to get feature flags\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:42.232819905Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "livez"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "livez",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "acb5fed2-5c12-4d21-aff8-873891d34b57",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.237287Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "acb5fed2-5c12-4d21-aff8-873891d34b57",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.125400389Z"
  },
  {
    "insertId": "mx7jmaz9de5fxoam",
    "jsonPayload": {
      "text": "User michael@unkey.dev will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "elapsed": {
          "seconds": 118367.209857,
          "repr": "1 day, 8:52:47.209857"
        },
        "thread": {
          "id": 134623174575808,
          "name": "AnyIO worker thread"
        },
        "line": 156,
        "name": "copilot_proxy.auth.core",
        "message": "User michael@unkey.dev will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "module": "core",
        "process": {
          "name": "MainProcess",
          "id": 12
        },
        "function": "verify_user_token",
        "exception": null,
        "extra": {},
        "time": {
          "timestamp": 1724258382.23993,
          "repr": "2024-08-21 16:39:42.239930+00:00"
        },
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "container_name": "proxy",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.240185494Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "ph33hquk7ojj0z1y",
    "jsonPayload": {
      "record": {
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "time": {
          "timestamp": 1724258382.240291,
          "repr": "2024-08-21 16:39:42.240291+00:00"
        },
        "name": "copilot_proxy.auth.core",
        "extra": {},
        "process": {
          "id": 12,
          "name": "MainProcess"
        },
        "message": "User michael@unkey.dev will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "exception": null,
        "line": 106,
        "elapsed": {
          "seconds": 118367.210218,
          "repr": "1 day, 8:52:47.210218"
        },
        "module": "core",
        "function": "verify_minimum_tier_level",
        "thread": {
          "id": 134623174575808,
          "name": "AnyIO worker thread"
        }
      },
      "text": "User michael@unkey.dev will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.240413864Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "8nrd4pl99n3aijui",
    "jsonPayload": {
      "text": "Incoming request /v2/code/completion\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 8:52:47.213557",
          "seconds": 118367.213557
        },
        "name": "copilot_proxy.api.code.v2",
        "exception": null,
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "function": "run_code_completion",
        "process": {
          "id": 12,
          "name": "MainProcess"
        },
        "file": {
          "path": "/copilot_proxy/api/code/v2.py",
          "name": "v2.py"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "module": "v2",
        "extra": {
          "on_prem_log": true,
          "user": {
            "optout": false,
            "allowed": true,
            "email_verified": false,
            "auth_time": 1724256331,
            "tier_end_date": 1724557879000,
            "firebase": {
              "identities": {
                "email": [
                  "michael@unkey.dev"
                ],
                "github.com": [
                  "148160799"
                ]
              },
              "sign_in_provider": "custom"
            },
            "email": "michael@unkey.dev",
            "user_id": "geSjnwfPfQOX8hpUcEMoFaSCZGT2",
            "tier_level": 10,
            "sub": "geSjnwfPfQOX8hpUcEMoFaSCZGT2",
            "uid": "geSjnwfPfQOX8hpUcEMoFaSCZGT2",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "iat": 1724256331,
            "exp": 1724259931,
            "organization_id": null,
            "baseUrl": null,
            "codiumate": null,
            "aud": "codium-dev-360812",
            "picture": "https://avatars.githubusercontent.com/u/148160799?v=4"
          },
          "release": {
            "Branch": "production",
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387"
          },
          "data": {
            "context_mode": "pre_pr",
            "max_repo_context": 5,
            "remote_context": [],
            "user_data": {
              "extension_version": "0.9.13",
              "os_version": "v18.18.2",
              "editor_type": "vscode",
              "user_id": null,
              "editor_version": "1.88.1",
              "installation_id": "0a3c7e13-961b-48a5-81c2-e911c23fd2b3",
              "os_platform": "linux",
              "editor_sub_version": null
            },
            "extra_instructions": "",
            "language": "typescript",
            "reference_snippet_messages": [
              {
                "content": "db/schema.ts:\n\nexport const projects = createTable(\"project\", {\n  id: text(\"id\", { length: 255 })\n    .notNull()\n    .primaryKey(),\n  name: text(\"name\", { length: 255 }),\n  createdById: text(\"created_by\", { length: 255 })\n\t\t.notNull()\n\t\t.references(() => users.id),\n  likes: int(\"likes\", { mode: \"number\" }).default(0),\n\tmakes: int(\"makes\", { mode: \"number\" }).default(0),\n  description: text(\"description\", { length: 255 }).notNull(),\n  category: text(\"category\", {\"enum\": [\"Art\", \"Cosplay\", \"Coding\", \"Robotics\", \"Electronics\", \"Tools\", \"Woodworking\", \"Mechanical\", \"Other\"]}).notNull(),\n  projectImage: text(\"projectImage\", { length: 255 }),\n  steps: text('steps', { mode: 'json' })\n  .notNull()\n  .$type<string[]>()\n  .default(sql`(json_array())`),\n  createdAt: int(\"created_at\", { mode: \"timestamp\" })\n\t\t.default(sql`(unixepoch())`)\n\t\t.notNull(),\n\tupdatedAt: int(\"updatedAt\", { mode: \"timestamp\" }).$onUpdate(\n\t\t() => sql`(unixepoch())`,\n\t),\n});\n\ndb/schema.ts:\n\nexport const steps = createTable(\"step\", {\n  id: text(\"id\", { length: 255 })\n    .notNull()\n    .primaryKey(),\n  title: text(\"name\", { length: 255 }),\n  projectId: text(\"created_by\", { length: 255 })\n\t\t.notNull()\n\t\t.references(() => users.id),\n  description: text(\"description\", { length: 255 }).notNull(),\n  projectImage: text(\"projectImage\", { length: 255 }),\n  createdAt: int(\"created_at\", { mode: \"timestamp\" })\n\t\t.default(sql`(unixepoch())`)\n\t\t.notNull(),\n\tupdatedAt: int(\"updatedAt\", { mode: \"timestamp\" }).$onUpdate(\n\t\t() => sql`(unixepoch())`,\n\t),\n});",
                "file_name": "Imports and implementations used in this file:",
                "type": "CodiummateImport"
              },
              {
                "content": "README.md\ndb.sqlite\ndrizzle.config.ts\nnext-env.d.ts\nnext.config.js\npackage.json\npnpm-lock.yaml\npostcss.config.cjs\nprettier.config.js\npublic\n  favicon.ico\nsrc\n  app\n    [category]\n      page.tsx\n    api\n      [...trpc].ts\n      auth\n        [...nextauth]\n          route.ts\n      openapi.json.ts\n    categories.tsx\n    components\n      categories.tsx\n      header.tsx\n      post.tsx\n      project-form.tsx\n      projectCard.tsx\n      ui\n        alert-dialog.tsx\n        alert.tsx\n        avatar.tsx\n        button.tsx\n        carousel.tsx\n        form.tsx\n        input.tsx\n        label.tsx\n        select.tsx\n        textarea.tsx\n        toast.tsx\n        toaster.tsx\n        use-toast.tsx\n    create\n      page.tsx\n    layout.tsx\n    page.tsx\n    profile\n      page.tsx\n  env.js\n  lib\n    utils.ts\n  server\n    api\n      openapi.ts\n      root.ts\n      routers\n        post.ts\n        project.ts\n        read-file.ts\n        save-file.ts\n      trpc.ts\n    auth.ts\n    db\n      index.ts\n      schema.ts\n    uploads\n  styles\n    globals.css\n  trpc\n    query-client.ts\n    react.tsx\n    server.ts\ntailwind.config.ts\ntsconfig.json",
                "type": "DirectoryStructure",
                "file_name": "Project directory structure:"
              },
              {
                "type": "Clipboard",
                "file_name": "src/server/db/schema.ts",
                "content": ".notNull().primaryKey(),"
              },
              {
                "content": "export const projects = createTable(\"project\", {\r\n  id: text(\"id\", { length: 255 })\r\n    .notNull()\r\n    .primaryKey(),\r\n  name: text(\"name\", { length: 255 }),\r\n  createdById: text(\"created_by\", { length: 255 })\r\n\t\t.notNull()\r\n\t\t.references(() => users.id),\r\n  likes: int(\"likes\", { mode: \"number\" }).default(0),\r\n\tmakes: int(\"makes\", { mode: \"number",
                "type": "Clipboard",
                "file_name": "src/server/db/schema.ts"
              },
              {
                "content": "category: text(\"category\", {\"enum\": [\"Art\", \"Cosplay\", \"Coding\", \"Robotics\", \"Electronics\", \"Tools\", \"Woodworking\", \"Mechanical\", \"Other\"]}).notNull(),",
                "file_name": "src/server/db/schema.ts",
                "type": "Clipboard"
              },
              {
                "type": "File",
                "content": "body: values.projectImage\n\t\t})\n\t\t// const project = await api.project.create({\n\t\t// \tname: values.projectName,\n\t\t// \tcategory: values.category,\n\t\t// \tdescription: values.projectDescription,\n\t\t// \timages: values.projectImage,\n\t\t// \tsteps: values.steps,\n\t\t// \tauthor: session.user,\n\t\t// });\n\t\tif( !session.user ){\n\t\t\ttoast({\n\t\t\t\ttitle: \"No User Session Found\",\n\t\t\t\tdescription: \"Please sign in to submit a project\"\n\t\t\t}\n\t\t\t)\n\t\t\treturn;\n\t\t}\n\t\t// const project = await api.project.create({\n\t\t// \tname: projectName,\n\t\t// \tcategory,\n\t\t// \tdescription: projectDescription,\n\t\t// \timages: projectImage,\n\t\t// \tsteps,\n\t\t// \tauthor: session.user,\n\t\t// });\n\t\t// toast({\n\t\t// \ttitle: \"Success\",\n\t\t// \tdescription: \"Project Created!\"\n\t\t// }\n\t\t// )\n\t}\n\t// function onImageFileChange(e: ChangeEvent<HTMLInputElement>) {\n\t// \tconst fileInput = e.target;\n\t// \tif (!fileInput.files) {\n\t// \t\tconsole.warn(\"no file was chosen\");\n\t// \t\treturn;\n\t// \t}\n\t// \tif (!fileInput.files || fileInput.files.length === 0) {\n\t// \t\tconsole.warn(\"files list is empty\");\n\t// \t\treturn;\n\t// \t}\n\t// \tconst file = fileInput.files[0];\n\t// \tform.setValue(\"projectImage\", file);\n\t// \t/** Reset file input */\n\t// \te.target.type = \"text\";\n\t// \te.target.type = \"file\";\n\t// }\n\n\t\t// <div className=\"flex flex-col",
                "file_name": "src/app/components/project-form.tsx"
              },
              {
                "type": "File",
                "file_name": "src/server/api/routers/project.ts",
                "content": "import { z } from \"zod\";\nimport { relations, sql } from \"drizzle-orm\";\nimport {\n  createTRPCRouter,\n  protectedProcedure,\n  publicProcedure,\n} from \"~/server/api/trpc\";\nimport { projects } from \"~/server/db/schema\";\n\nexport const projectRouter = createTRPCRouter({\n \n  create: protectedProcedure\n    .input(z.object({ name: z.string().min(1) }))\n    .mutation(async ({ ctx, input }) => {\n      await ctx.db.insert(projects).values({\n        name: input.name,\n        createdById: ctx.session.user.id,\n      });\n    }),\n\n  \n});"
              },
              {
                "content": "const ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,",
                "file_name": "src/app/components/ui/toast.tsx",
                "type": "File"
              },
              {
                "file_name": "src/server/api/routers/save-file.ts",
                "type": "File",
                "content": "import { writeFileSync } from \"node:fs\";\nimport type { NextApiRequest, NextApiResponse } from \"next\";\n\nexport default async function handler(\n\treq: NextApiRequest,\n\tres: NextApiResponse,\n) {\n\tconst { path = null } = req.body.path;\n\tif (!path) {\n\t\tres.status(400).json({ name: \"no path provided\" });\n\t} else {\n\t\t// your file content here\n\t\tconst content = req.body.encodedContent;\n\t\ttry {\n\t\t\twriteFileSync(`~/server/images/${path}`, content);\n            res.json({\n                path,\n                content,\n            });\n            console.log(res);\n            \n\t\t} catch (error) {\n            res.json({\n                error: error,\n            })\n            console.log(error);\n            \n        }\n\n\t\t\n\t}\n}"
              },
              {
                "type": "File",
                "file_name": "src/server/api/routers/read-file.ts",
                "content": "import { readFileSync } from 'node:fs';\nimport type { NextApiRequest, NextApiResponse } from 'next';\n\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\n    const { path = '' } = req.query;\n    if (!path) {\n        res.status(400).json({ name: 'wrong' })\n    } else {\n        res.send(readFileSync(`/tmp/${path}`));\n    }\n}"
              },
              {
                "type": "File",
                "content": "\"use client\"\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {/* biome-ignore lint/complexity/useArrowFunction: <explanation> */}\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}",
                "file_name": "src/app/components/ui/toaster.tsx"
              }
            ],
            "doc_context_suffix": "}),\n}));\n\nexport const stepRelations = relations(steps, ({ one }) => ({\n  project: one(projects, { fields: [steps.projectId], references: [projects.id] }),\n}));\nexport const steps = createTable(\"step\", {\n  id: text(\"id\", { length: 255 })\n    .notNull()\n    .primaryKey(),\n  title: text(\"name\", { length: 255 }),\n  projectId: text(\"created_by\", { length: 255 })\n\t\t.notNull()\n\t\t.references(() => users.id),\n  description: text(\"description\", { length: 255 }).notNull(),\n  projectImage: text(\"projectImage\", { length: 255 }),\n  createdAt: int(\"created_at\", { mode: \"timestamp\" })\n\t\t.default(sql`(unixepoch())`)\n\t\t.notNull(),\n\tupdatedAt: int(\"updatedAt\", { mode: \"timestamp\" }).$onUpdate(\n\t\t() => sql`(unixepoch())`,\n\t),\n});\n",
            "repo_context": [],
            "task": "",
            "is_multiline": true,
            "file_diff_content": "",
            "context": [],
            "doc_context_prefix": "import { relations, sql } from \"drizzle-orm\";\nimport {\n  blob,\n  index,\n  int,\n  primaryKey,\n  sqliteTableCreator,\n  text,\n} from \"drizzle-orm/sqlite-core\";\nimport type { AdapterAccount } from \"next-auth/adapters\";\n\n/**\n * This is an example of how to use the multi-project schema feature of Drizzle ORM. Use the same\n * database instance for multiple projects.\n *\n * @see https://orm.drizzle.team/docs/goodies#multi-project-schema\n */\nexport const createTable = sqliteTableCreator((name) => `examplet3app_${name}`);\n\nexport const posts = createTable(\n  \"post\",\n  {\n    id: int(\"id\", { mode: \"number\" }).primaryKey({ autoIncrement: true }),\n    name: text(\"name\", { length: 256 }),\n    createdById: text(\"created_by\", { length: 255 })\n      .notNull()\n      .references(() => users.id),\n    createdAt: int(\"created_at\", { mode: \"timestamp\" })\n      .default(sql`(unixepoch())`)\n      .notNull(),\n    updatedAt: int(\"updatedAt\", { mode: \"timestamp\" }).$onUpdate(\n      () => new Date()\n    ),\n  },\n  (example) => ({\n    createdByIdIdx: index(\"created_by_idx\").on(example.createdById),\n    nameIndex: index(\"name_idx\").on(example.name),\n  })\n);\n\nexport const users = createTable(\"user\", {\n  id: text(\"id\", { length: 255 })\n    .notNull()\n    .primaryKey()\n    .$defaultFn(() => crypto.randomUUID()),\n  name: text(\"name\", { length: 255 }),\n  email: text(\"email\", { length: 255 }).notNull(),\n  emailVerified: int(\"email_verified\", {\n    mode: \"timestamp\",\n  }).default(sql`(unixepoch())`),\n  image: text(\"image\", { length: 255 }),\n});\n\nexport const usersRelations = relations(users, ({ many }) => ({\n  accounts: many(accounts),\n}));\n\nexport const accounts = createTable(\n  \"account\",\n  {\n    userId: text(\"user_id\", { length: 255 })\n      .notNull()\n      .references(() => users.id),\n    type: text(\"type\", { length: 255 })\n      .$type<AdapterAccount[\"type\"]>()\n      .notNull(),\n    provider: text(\"provider\", { length: 255 }).notNull(),\n    providerAccountId: text(\"provider_account_id\", { length: 255 }).notNull(),\n    refresh_token: text(\"refresh_token\"),\n    access_token: text(\"access_token\"),\n    expires_at: int(\"expires_at\"),\n    token_type: text(\"token_type\", { length: 255 }),\n    scope: text(\"scope\", { length: 255 }),\n    id_token: text(\"id_token\"),\n    session_state: text(\"session_state\", { length: 255 }),\n  },\n  (account) => ({\n    compoundKey: primaryKey({\n      columns: [account.provider, account.providerAccountId],\n    }),\n    userIdIdx: index(\"account_user_id_idx\").on(account.userId),\n  })\n);\n\nexport const accountsRelations = relations(accounts, ({ one }) => ({\n  user: one(users, { fields: [accounts.userId], references: [users.id] }),\n}));\n\nexport const sessions = createTable(\n  \"session\",\n  {\n    sessionToken: text(\"session_token\", { length: 255 }).notNull().primaryKey(),\n    userId: text(\"userId\", { length: 255 })\n      .notNull()\n      .references(() => users.id),\n    expires: int(\"expires\", { mode: \"timestamp\" }).notNull(),\n  },\n  (session) => ({\n    userIdIdx: index(\"session_userId_idx\").on(session.userId),\n  })\n);\n\nexport const sessionsRelations = relations(sessions, ({ one }) => ({\n  user: one(users, { fields: [sessions.userId], references: [users.id] }),\n}));\n\nexport const verificationTokens = createTable(\n  \"verification_token\",\n  {\n    identifier: text(\"identifier\", { length: 255 }).notNull(),\n    token: text(\"token\", { length: 255 }).notNull(),\n    expires: int(\"expires\", { mode: \"timestamp\" }).notNull(),\n  },\n  (vt) => ({\n    compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n  })\n);\n\n\nexport const projects = createTable(\"project\", {\n  id: text(\"id\", { length: 255 })\n    .notNull()\n    .primaryKey(),\n  name: text(\"name\", { length: 255 }),\n  createdById: text(\"created_by\", { length: 255 })\n\t\t.notNull()\n\t\t.references(() => users.id),\n  likes: int(\"likes\", { mode: \"number\" }).default(0),\n\tmakes: int(\"makes\", { mode: \"number\" }).default(0),\n  description: text(\"description\", { length: 255 }).notNull(),\n  category: text(\"category\", {\"enum\": [\"Art\", \"Cosplay\", \"Coding\", \"Robotics\", \"Electronics\", \"Tools\", \"Woodworking\", \"Mechanical\", \"Other\"]}).notNull(),\n  projectImage: text(\"projectImage\", { length: 255 }),\n  steps: text('steps', { mode: 'json' })\n  .notNull()\n  .$type<string[]>()\n  .default(sql`(json_array())`),\n  createdAt: int(\"created_at\", { mode: \"timestamp\" })\n\t\t.default(sql`(unixepoch())`)\n\t\t.notNull(),\n\tupdatedAt: int(\"updatedAt\", { mode: \"timestamp\" }).$onUpdate(\n\t\t() => sql`(unixepoch())`,\n\t),\n});\n\nexport const projectRelations = relations(projects, ({ many }) => ({\n  steps: many(steps, {",
            "relative_file_path": "src/server/db/schema.ts",
            "user_context": [],
            "is_file_diff": false,
            "max_remote_context": 5
          },
          "request_id": "a5e6bdfb-dede-4979-acb0-c1736067919a"
        },
        "line": 513,
        "message": "Incoming request /v2/code/completion",
        "time": {
          "repr": "2024-08-21 16:39:42.243630+00:00",
          "timestamp": 1724258382.24363
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.244131478Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7a01a257-7008-4433-8ee4-3deb3029c7b9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.259883Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7a01a257-7008-4433-8ee4-3deb3029c7b9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.917217961Z"
  },
  {
    "insertId": "hoznfxzn0bh7f86o",
    "jsonPayload": {
      "record": {
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "line": 156,
        "elapsed": {
          "repr": "1 day, 8:48:28.463665",
          "seconds": 118108.463665
        },
        "thread": {
          "id": 139240385791680,
          "name": "AnyIO worker thread"
        },
        "function": "verify_user_token",
        "time": {
          "repr": "2024-08-21 16:39:42.284023+00:00",
          "timestamp": 1724258382.284023
        },
        "extra": {},
        "module": "core",
        "name": "copilot_proxy.auth.core",
        "file": {
          "path": "/copilot_proxy/auth/core.py",
          "name": "core.py"
        },
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "exception": null,
        "message": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False"
      },
      "text": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.284274060Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "4ajrp66vlpn00ds2",
    "jsonPayload": {
      "text": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False\n",
      "record": {
        "module": "core",
        "thread": {
          "name": "AnyIO worker thread",
          "id": 139240385791680
        },
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "line": 106,
        "message": "User max.schattauer@perelyn.com will use enterprise openAI org. tier:10 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:42.284371+00:00",
          "timestamp": 1724258382.284371
        },
        "elapsed": {
          "seconds": 118108.464013,
          "repr": "1 day, 8:48:28.464013"
        },
        "process": {
          "id": 24,
          "name": "MainProcess"
        },
        "extra": {},
        "function": "verify_minimum_tier_level",
        "exception": null,
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "name": "copilot_proxy.auth.core"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.284503508Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "c12uobpgstem55uo",
    "jsonPayload": {
      "record": {
        "module": "v2",
        "name": "copilot_proxy.api.code.v2",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "file": {
          "name": "v2.py",
          "path": "/copilot_proxy/api/code/v2.py"
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "time": {
          "timestamp": 1724258382.287557,
          "repr": "2024-08-21 16:39:42.287557+00:00"
        },
        "exception": null,
        "thread": {
          "id": 139243689773952,
          "name": "MainThread"
        },
        "message": "Incoming request /v2/code/completion",
        "extra": {
          "request_id": "5d1c89da-9ec5-4b9f-834c-481c54828e8f",
          "data": {
            "extra_instructions": "",
            "repo_context": [],
            "is_multiline": false,
            "user_context": [],
            "is_file_diff": false,
            "user_data": {
              "installation_id": "b873c323-f807-48e0-816d-98db78407310",
              "os_platform": "darwin",
              "editor_type": "vscode",
              "editor_sub_version": null,
              "editor_version": "1.92.2",
              "user_id": null,
              "os_version": "v20.14.0",
              "extension_version": "0.9.13"
            },
            "context": [],
            "file_diff_content": "",
            "context_mode": "pre_pr",
            "reference_snippet_messages": [
              {
                "file_name": "Imports and implementations used in this file:",
                "type": "CodiummateImport",
                "content": "api/api_base.tsx:\n\nexport class ApiInteractor {\n  private apiClient;\n\n  constructor(api_uri: string) {\n    this.apiClient = axios.create({\n      baseURL: api_uri,\n    });\n    this.apiClient = addAxiosDateTransformer(this.apiClient);\n  }\n\n  private notifyError(message: string) {\n    notifications.show({\n      message: message,\n      color: \"stiegelerOrange\",\n      type: \"error\",\n    });\n  }\n\n  protected apiCallWrapper<T>({\n    endpoint,\n    method = \"get\",\n    params = {},\n    notifyOnErrors = true,\n  }: {\n    endpoint: string;\n    method?: \"get\" | \"post\" | \"put\" | \"delete\";\n    params?: any;\n    notifyOnErrors?: boolean;\n  }): Promise<T> {\n    console.debug(`API call: ${method} ${endpoint} ${JSON.stringify(params)}`);\n    let promise;\n    if (method === \"get\" || method === \"delete\") {\n      promise = this.apiClient[method]<T>(endpoint, {\n        params: params,\n      });\n    } else {\n      promise = this.apiClient[method]<T>(endpoint, null, { params: params });\n    }\n    return promise\n      .then((response) => response.data)\n      .catch((error) => {\n        console.error(error);\n        let message = `Error calling ${method} ${endpoint}: `;\n        if (error.response) {\n          message += `${error.response.status as string} ${\n            error.response.statusText\n          }, ${\n            error.response.data.detail\n              ? error.response.data.detail\n              : \"no details provided\"\n          }`;\n        } else {\n          message += error.message;\n        }\n        if (notifyOnErrors) {\n          this.notifyError(message);\n        }\n        throw error;\n      });\n  }\n}\n\napi/api_base.tsx:\n\nexport const CHATBOT_API_URI = \"http://localhost:45000/\";\n\nchatbot/settings.ts:\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nchatbot/settings.ts:\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};"
              },
              {
                "file_name": "Project directory structure:",
                "type": "DirectoryStructure",
                "content": "README.md\naws\n  README.md\n  sis-chatbot-stack\n    README.md\n    app.py\n    cdk.json\n    cdk.out\n      SisChatbotStack-dev.assets.json\n      SisChatbotStack-dev.template.json\n      asset.aaa02bcc976b363e53c2a202db3dd35139b05e9a8de760018cda67118511bc10\n        Dockerfile\n        README.md\n        build_image.sh\n        exploration\n          bm25_retriever.ipynb\n          chroma_client.ipynb\n          chroma_keywords.ipynb\n          chroma_metadata.ipynb\n          document_splitting.ipynb\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        run_docker.sh\n        scripts\n          fill_chromadb.py\n          manage_chromadb.py\n        sis_chatbot\n          __init__.py\n          api.py\n          graph\n            __init__.py\n            chatbot_graph.py\n          retrieval\n            retrieval_graph.py\n          webnav\n            webnav_callers.py\n            webnav_graph.py\n        tests\n          __init__.py\n      asset.bd84eb2d39f2ca6a4d794f9ea48505fa108cf787af585df1ff45079a3bd18391\n        Dockerfile\n        README.md\n        poetry.lock\n        pyproject.toml\n        run_api.sh\n        sis_chatbot_ping_api\n          __init__.py\n          ping_api.py\n        tests\n          __init__.py\n      asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a\n        __entrypoint__.js\n        index.js\n      cdk.out\n      manifest.json\n      tree.json\n    requirements-dev.txt\n    requirements.txt\n    sis_chatbot_stack\n      __init__.py\n      sis_chatbot_stack.py\n    source.bat\n    tests\n      __init__.py\n      unit\n        __init__.py\n        test_sis_chatbot_stack_stack.py\naws_init.sh\ndocker-compose.yaml\nevaluation\n  README.md\n  annotating_evaluation_data.ipynb\n  deepeval\n    deepeval_evaluation.ipynb\n  poetry.lock\n  pyproject.toml\n  tests\n    __init__.py\n  visualization.ipynb\nfrontend\n  react\n    Dockerfile\n    README.md\n    index.html\n    nginx.conf\n    package-lock.json\n    package.json\n    postcss.config.cjs\n    public\n      Stiegeler_Logo_221x106.png\n      stiegeler.ico\n    src\n      App.tsx\n      api\n        api_base.tsx\n        chatbot\n          citations.ts\n          conversation.ts\n          settings.ts\n        maintenance\n          api.ts\n          documents.ts\n      main.tsx\n      pages\n        ChatbotPage\n          ChatMessages.tsx\n          ChatbotPage.tsx\n          ConversationsDrawer.tsx\n          SettingsDrawer.tsx\n        DashboardPage\n          DashboardPage.tsx\n        MaintenancePage\n          MaintenancePage.tsx\n      theme.ts\n      utils.tsx\n    tsconfig.app.json\n    tsconfig.json\n    tsconfig.node.json\n    vite.config.ts\n  streamlit\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_streamlit.sh\n    sis_chatbot_streamlit_frontend\n      Chatbot.py\n      __init__.py\n      pages\n        Dokumentenpflege.py\n    tests\n      __init__.py\nrestart_services.sh\nrun.sh\nservices\n  README.md\n  api-base\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    sis_chatbot_base\n      __init__.py\n      document_store\n        __init__.py\n        bm25.py\n        chroma.py\n        mongodb.py\n        types.py\n      llms.py\n      storage\n        __init__.py\n        conversations.py\n    tests\n      __init__.py\n      mongodb_test.py\n  bm25-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_bm25_api\n      __init__.py\n      bm25_api.py\n      bm25_retriever.py\n    tests\n      __init__.py\n  chatbot-api\n    Dockerfile\n    README.md\n    build_image.sh\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot\n      __init__.py\n      chatbot_api.py\n      chatbot_graph\n        graph.py\n        state.py\n        tools.py\n      document_graph\n        graph.py\n        state.py\n      webnav_graph\n        api_interface.py\n        graph.py\n        state.py\n    tests\n      __init__.py\n  maintenance-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    scripts\n      website_posts.sql\n    sis_chatbot_maintenance_api\n      __init__.py\n      document_store.py\n      maintenance_api.py\n      utils.py\n    tests\n      __init__.py\n  ping-api\n    Dockerfile\n    README.md\n    poetry.lock\n    pyproject.toml\n    run_api.sh\n    sis_chatbot_ping_api\n      __init__.py\n      ping_api.py\n    tests\n      __init__.py\n  storage\n    init.mongodb.js\n    run_mongo_express.sh"
              },
              {
                "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py",
                "type": "Clipboard",
                "content": "state.current_settings.document_collection"
              },
              {
                "type": "Clipboard",
                "file_name": "services/chatbot-api/sis_chatbot/document_graph/graph.py",
                "content": "Was steht in den AGB"
              },
              {
                "content": "ChatbotSettings",
                "type": "Clipboard",
                "file_name": "frontend/react/src/api/chatbot/settings.ts"
              }
            ],
            "max_repo_context": 5,
            "max_remote_context": 5,
            "relative_file_path": "frontend/react/src/api/chatbot/settings.ts",
            "language": "typescript",
            "remote_context": [],
            "doc_context_prefix": "import { ApiInteractor, CHATBOT_API_URI } from \"../api_base.tsx\";\n\nexport type ChatbotSettings = {\n  llm?: string;\n  creativityPercent?: number;\n  documentCollection?: string;\n  retrievalK?: number;\n  retrievalModes?: Array<string>;\n  retrievalQueryMode?: string;\n  documentHistoryMode?: string;\n  debug?: boolean;\n};\n\nexport type DocumentCollectionRepresentation = {\n  name: string;\n  display_name: string;\n  number_of_documents: number;\n  embedding_model?: string | null;\n};\n\nclass ChatbotConfigApiInteractor extends ApiInteractor {\n  constructor() {\n    super(CHATBOT_API_URI);\n  }\n  listSupportedLLMs(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"supported-llms\",\n    });\n  }\n\n  listDocumentCollections(): Promise<Array<DocumentCollectionRepresentation>> {\n    return this.apiCallWrapper<Array<DocumentCollectionRepresentation>>({\n      endpoint: \"document-collections\",\n    });\n  }\n\n  listRetrievalModes(): Promise<Array<String>> {\n    return this.apiCallWrapper<Array<String>>({\n      endpoint: \"retrieval-modes\",\n    });\n  }\n\n  listRetrievalQueryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"retrieval-query-modes\",\n    });\n  }\n\n  listDocumentHistoryModes(): Promise<Array<string>> {\n    return this.apiCallWrapper<Array<string>>({\n      endpoint: \"document-history-modes\",\n    });\n  }\n\n  getDefautSettings(): Promise<ChatbotSettings> {\n    type ResultType = { llm: string; temperature: number ; ",
            "task": "",
            "doc_context_suffix": "};\n    return this.apiCallWrapper<ResultType>({\n      endpoint: \"default-settings\",\n    }).then((response) => {\n      return {\n        llm: response.llm,\n      };\n    });\n  }\n}\nexport const chatbotConfigApiInteractor = new ChatbotConfigApiInteractor();\n\n/**\n * Fetch the default chatbot settings and call the onChatbotSettingsFetched callback with the settings.\n * To be used as an effect. Uses an async function behind the scenes.\n * @param onChatbotSettingsFetched Callback to be called with the fetched settings.\n */\nexport function fetchDefaultChatbotSettings({\n  onChatbotSettingsFetched,\n  onError,\n}: {\n  onChatbotSettingsFetched: (settings: ChatbotSettings) => void;\n  onError?: () => void;\n}) {\n  async function fetchDefaultChatbotSettingsAsync() {\n    let llm = await chatbotConfigApiInteractor\n      .getDefaultLLM()\n      .catch(() => (onError ? onError() : undefined));\n\n    let creativityFloat = await chatbotConfigApiInteractor\n      .getDefaultTemperature()\n      .catch(() => (onError ? onError() : undefined));\n\n    let documentCollection = await chatbotConfigApiInteractor\n      .listDocumentCollections()\n      .catch(() => (onError ? onError() : undefined));\n    let documentCollectionName;\n    if (\n      documentCollection &&\n      documentCollection.length > 0 &&\n      documentCollection[0].name\n    ) {\n      documentCollectionName = documentCollection[0].name;\n    }\n\n    onChatbotSettingsFetched({\n      llm: llm ?? undefined,\n      documentCollection: documentCollectionName,\n      retrievalK: retrievalK ?? undefined,\n      retrievalModes: retrievalModes ?? undefined,\n      retrievalQueryMode: retrievalQueryMode ?? undefined,\n      creativityPercent: creativityFloat ? creativityFloat * 100 : undefined,\n      debug: true, // TODO set to false in production\n    });\n  }\n  fetchDefaultChatbotSettingsAsync();\n}\n"
          },
          "user": {
            "tier_end_date": 1724651848000,
            "tier_level": 10,
            "user_id": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "sub": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "picture": "https://lh3.googleusercontent.com/a/ACg8ocINQInd_FocpYeBLqdBmgBalK-N6QInOYl4ptzpyH36Gqhfb48=s96-c",
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "firebase": {
              "identities": {
                "email": [
                  "max.schattauer@perelyn.com"
                ],
                "google.com": [
                  "114319076377525603991"
                ]
              },
              "sign_in_provider": "custom"
            },
            "optout": false,
            "codiumate": null,
            "name": "Max Schattauer / Perelyn GmbH",
            "exp": 1724259983,
            "baseUrl": null,
            "allowed": true,
            "auth_time": 1724135554,
            "uid": "ewNsntm2ZgfGPIMBUTTDEihDk5S2",
            "iat": 1724256383,
            "email_verified": true,
            "aud": "codium-dev-360812",
            "email": "max.schattauer@perelyn.com",
            "organization_id": null
          },
          "on_prem_log": true,
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          }
        },
        "line": 513,
        "function": "run_code_completion",
        "elapsed": {
          "repr": "1 day, 8:48:28.467199",
          "seconds": 118108.467199
        }
      },
      "text": "Incoming request /v2/code/completion\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-4pvhh",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:42.288012530Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-2p1w"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.172980833Z"
  },
  {
    "insertId": "3k411uw61jxbe69f",
    "jsonPayload": {
      "record": {
        "thread": {
          "name": "MainThread",
          "id": 134589170969472
        },
        "time": {
          "timestamp": 1724258382.29026,
          "repr": "2024-08-21 16:39:42.290260+00:00"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "message": "Request handled",
        "module": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "line": 37,
        "extra": {
          "url": "https://api.codium.ai/v2/users/features",
          "method": "GET",
          "on_prem_log": true,
          "status_code": 200,
          "source_host": "81.17.122.73",
          "request_id": "016282de-e00a-487f-a976-f70ccc5db82d"
        },
        "function": "dispatch",
        "name": "app",
        "exception": null,
        "elapsed": {
          "seconds": 119078.857561,
          "repr": "1 day, 9:04:38.857561"
        }
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.290550635Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "insertId": "pklg254wx7uwkzvr",
    "jsonPayload": {
      "record": {
        "name": "app",
        "message": "Incoming request /v1/health/live",
        "process": {
          "id": 15,
          "name": "MainProcess"
        },
        "thread": {
          "name": "MainThread",
          "id": 138663458962304
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "line": 164,
        "function": "live",
        "module": "app",
        "elapsed": {
          "repr": "3 days, 6:29:22.540612",
          "seconds": 282562.540612
        },
        "extra": {
          "on_prem_log": true
        },
        "time": {
          "repr": "2024-08-21 16:39:42.300863+00:00",
          "timestamp": 1724258382.300863
        },
        "exception": null
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "namespace_name": "production-recursion",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.301148324Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.816256677Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "d041c61a-779f-4f50-98fe-c25992290ce1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.301778Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "d041c61a-779f-4f50-98fe-c25992290ce1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.875404350Z"
  },
  {
    "insertId": "170q0rbegcckk",
    "jsonPayload": {
      "backendTargetProjectNumber": "projects/67590289846",
      "remoteIp": "35.199.77.186",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ],
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry"
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://pr-agent.bitbucketapps.codium.ai/",
      "requestSize": "153",
      "status": 200,
      "responseSize": "545",
      "userAgent": "GoogleStackdriverMonitoring-UptimeChecks(https://cloud.google.com/monitoring)",
      "remoteIp": "35.199.77.186",
      "serverIp": "10.164.5.13",
      "latency": "0.144465s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "project_id": "codium-production",
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-free-bitbucket-ser-300-26cec08d",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-free-bitbucket-ingr-yth33fv0",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:42.306949Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/57aa61eec2d430be60622fdbf7498253",
    "receiveTimestamp": "2024-08-21T16:39:42.673684679Z",
    "spanId": "179b5835c15b64fa"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "ad8436e7-e693-447e-9089-2e235c07a4bb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.315685Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "ad8436e7-e693-447e-9089-2e235c07a4bb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:42.522192372Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5bb80fa7-ce3a-42c1-a8e9-c37ca9118964",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.318517Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5bb80fa7-ce3a-42c1-a8e9-c37ca9118964",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.609433824Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "kube-scheduler/v1.27.16 (linux/amd64) kubernetes/ecbbe79/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "06c8ed92-5661-43dd-a873-ec92803d9359",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.320199Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "06c8ed92-5661-43dd-a873-ec92803d9359",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.404920397Z"
  },
  {
    "insertId": "z2wqpk9rczzsxr3s",
    "jsonPayload": {
      "record": {
        "module": "app",
        "extra": {
          "on_prem_log": true
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "exception": null,
        "name": "app",
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:42.320006+00:00",
          "timestamp": 1724258382.320006
        },
        "message": "Incoming request /v1/health/live",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 118366.32025,
          "repr": "1 day, 8:52:46.320250"
        },
        "line": 164,
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        },
        "function": "live"
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "project_id": "codium-production",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.320266391Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:977] Starting health check...",
    "insertId": "cw6dsfv99949p42d",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "llm-server-69c884887-58l4j",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "main",
        "namespace_name": "llm"
      }
    },
    "timestamp": "2024-08-21T16:39:42.335464754Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:988] Health check took 0.000183s",
    "insertId": "4dma55m6p1qkuw0i",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "llm-server-69c884887-58l4j",
        "location": "us-central1",
        "project_id": "codium-production",
        "container_name": "main",
        "cluster_name": "production-cluster",
        "namespace_name": "llm"
      }
    },
    "timestamp": "2024-08-21T16:39:42.335504201Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "INFO:     35.191.212.243:54872 - \"GET /health HTTP/1.1\" 200 OK",
    "insertId": "4s7xw5b0ndtnsxiz",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "llm-server-69c884887-58l4j",
        "container_name": "main",
        "cluster_name": "production-cluster",
        "namespace_name": "llm",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.336188999Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/app": "llm-server",
      "k8s-pod/pod-template-hash": "69c884887"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "insertId": "pbz65edg5rvdocp3",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:42.344724+00:00",
          "timestamp": 1724258382.344724
        },
        "process": {
          "id": 15,
          "name": "MainProcess"
        },
        "name": "app",
        "message": "Request handled",
        "module": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "extra": {
          "method": "GET",
          "source_host": "35.191.206.87",
          "on_prem_log": true,
          "status_code": 200,
          "url": "http://10.164.13.6/v1/health/live",
          "request_id": "N/A"
        },
        "function": "dispatch",
        "line": 37,
        "exception": null,
        "elapsed": {
          "repr": "3 days, 6:29:22.584473",
          "seconds": 282562.584473
        },
        "thread": {
          "id": 138663458962304,
          "name": "MainThread"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "production-recursion",
        "location": "us-central1",
        "container_name": "proxy",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r"
      }
    },
    "timestamp": "2024-08-21T16:39:42.344998357Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6c5c88998f",
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.816256677Z"
  },
  {
    "insertId": "tjxzqe48bhc1ugc8",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "exception": null,
        "name": "app",
        "function": "dispatch",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "extra": {
          "method": "GET",
          "source_host": "10.164.15.1",
          "request_id": "N/A",
          "on_prem_log": true,
          "url": "http://10.164.15.3:5432/v1/health/live",
          "status_code": 200
        },
        "module": "app",
        "line": 37,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "time": {
          "repr": "2024-08-21 16:39:42.345591+00:00",
          "timestamp": 1724258382.345591
        },
        "elapsed": {
          "repr": "1 day, 8:52:46.345835",
          "seconds": 118366.345835
        },
        "message": "Request handled",
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "thread": {
          "name": "MainThread",
          "id": 134626284370816
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-m4nqr",
        "location": "us-central1",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.345881657Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-hgxr"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.295868628Z"
  },
  {
    "insertId": "1jspbetf1npn5c",
    "jsonPayload": {
      "remoteIp": "122.172.86.65",
      "previewSecurityPolicy": {
        "rateLimitAction": {
          "outcome": "RATE_LIMIT_THRESHOLD_CONFORM",
          "key": "Bearer eyJhbGciOiJSUzI1NiIsImtpZ"
        },
        "outcome": "ACCEPT",
        "configuredAction": "THROTTLE",
        "name": "codium-app-cloud-armor-policy",
        "priority": 500
      },
      "enforcedSecurityPolicy": {
        "priority": 9000,
        "outcome": "ACCEPT",
        "name": "codium-app-cloud-armor-policy",
        "configuredAction": "ALLOW"
      },
      "securityPolicyRequestData": {
        "tlsJa3Fingerprint": "d76a5a80b4bb0c75ac45782b0b53da91",
        "remoteIpInfo": {
          "regionCode": "IN"
        }
      },
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "backendTargetProjectNumber": "projects/67590289846",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "REQUEST_HAS_AUTHORIZATION",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "GET",
      "requestUrl": "https://api.codium.ai/v2/users/features",
      "requestSize": "1629",
      "status": 200,
      "responseSize": "601",
      "userAgent": "axios/1.6.2",
      "remoteIp": "122.172.86.65",
      "serverIp": "10.164.10.5",
      "latency": "0.531177s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "url_map_name": "k8s2-um-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "project_id": "codium-production",
        "target_proxy_name": "k8s2-ts-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "backend_service_name": "k8s1-50a1ee7b-production--argocd-auth-proxy-servic-543-616a551c",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-production--argocd-codium-proxy-c8voj7lo",
        "zone": "global"
      }
    },
    "timestamp": "2024-08-21T16:39:42.347551Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/ccaf7dd268fc4ebb20c9e0303b6199f5",
    "receiveTimestamp": "2024-08-21T16:39:43.433093461Z",
    "spanId": "3370f4d38f14ef9a"
  },
  {
    "insertId": "w24sxb7kexknr7md",
    "jsonPayload": {
      "record": {
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "elapsed": {
          "seconds": 119078.929173,
          "repr": "1 day, 9:04:38.929173"
        },
        "exception": null,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "function": "live",
        "module": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "message": "Incoming request /v1/health/live",
        "line": 164,
        "extra": {
          "on_prem_log": true
        },
        "time": {
          "timestamp": 1724258382.361872,
          "repr": "2024-08-21 16:39:42.361872+00:00"
        }
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "location": "us-central1",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.362175006Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8fec48c2-a625-4e88-a7eb-93fe1b7f0421",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.369224Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8fec48c2-a625-4e88-a7eb-93fe1b7f0421",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.402801292Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:977] Starting health check...",
    "insertId": "zq76l5piaxhhejn4",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "llm-server-69c884887-58l4j",
        "container_name": "main",
        "project_id": "codium-production",
        "namespace_name": "llm",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.373755096Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/pod-template-hash": "69c884887"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:988] Health check took 0.000167s",
    "insertId": "z41ivi330ob24imw",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "main",
        "location": "us-central1",
        "project_id": "codium-production",
        "pod_name": "llm-server-69c884887-58l4j",
        "namespace_name": "llm",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.373789618Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "INFO:     35.191.231.163:44822 - \"GET /health HTTP/1.1\" 200 OK",
    "insertId": "h5uw5wrydsml0nnj",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "container_name": "main",
        "cluster_name": "production-cluster",
        "namespace_name": "llm",
        "pod_name": "llm-server-69c884887-58l4j"
      }
    },
    "timestamp": "2024-08-21T16:39:42.374327586Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "INFO:     35.191.1.224:49044 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "ffn9nvqdmfivdpzs",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "pr-agent",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "main",
        "pod_name": "pr-agent-free-bitbucket-645d9bc84b-s872n",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.381833713Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "pr-agent-free-bitbucket",
      "k8s-pod/pod-template-hash": "645d9bc84b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--cfae953c-uhw3"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:47.336720945Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/kube-scheduler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "04daa152-30f3-4f85-8eed-ba16c7451cab",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.386510Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "04daa152-30f3-4f85-8eed-ba16c7451cab",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.614164148Z"
  },
  {
    "insertId": "ds61v7aczpee63va",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        },
        "exception": null,
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "module": "app",
        "extra": {
          "on_prem_log": true
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "process": {
          "name": "MainProcess",
          "id": 21
        },
        "message": "Incoming request /v1/health/live",
        "time": {
          "timestamp": 1724258382.388668,
          "repr": "2024-08-21 16:39:42.388668+00:00"
        },
        "line": 164,
        "elapsed": {
          "repr": "1 day, 8:55:34.708673",
          "seconds": 118534.708673
        },
        "function": "live",
        "name": "app"
      },
      "text": "Incoming request /v1/health/live\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.388977877Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:addon-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "addon-manager/1.28-v0.19 (baab043)"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/addon-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "820bfe48-4307-4c5a-a3dc-8aeabfa01d21",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.388979Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": ""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "820bfe48-4307-4c5a-a3dc-8aeabfa01d21",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.632680081Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.29"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "bdc32b9d-5cb2-4e73-a96b-39881e90b96f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.401069Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "bdc32b9d-5cb2-4e73-a96b-39881e90b96f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.114626551Z"
  },
  {
    "insertId": "d1wlujinqpwnl8mw",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "elapsed": {
          "repr": "1 day, 9:04:38.970434",
          "seconds": 119078.970434
        },
        "exception": null,
        "function": "dispatch",
        "message": "Request handled",
        "line": 37,
        "extra": {
          "source_host": "35.191.205.166",
          "url": "http://10.164.17.14/v1/health/live",
          "status_code": 200,
          "request_id": "N/A",
          "on_prem_log": true,
          "method": "GET"
        },
        "module": "app",
        "time": {
          "timestamp": 1724258382.403133,
          "repr": "2024-08-21 16:39:42.403133+00:00"
        },
        "process": {
          "id": 23,
          "name": "MainProcess"
        },
        "name": "app",
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.403442955Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:977] Starting health check...",
    "insertId": "18edj7dw1ark8lgy",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "llm-server-69c884887-58l4j",
        "namespace_name": "llm",
        "container_name": "main",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.409493509Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/pod-template-hash": "69c884887"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "db075007-c9de-4922-ab9a-0303101832c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.409546Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "db075007-c9de-4922-ab9a-0303101832c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.821952958Z"
  },
  {
    "textPayload": "DEBUG 08-21 16:39:42 async_llm_engine.py:988] Health check took 0.000194s",
    "insertId": "j77btmbnzt25dy34",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "namespace_name": "llm",
        "pod_name": "llm-server-69c884887-58l4j",
        "cluster_name": "production-cluster",
        "container_name": "main"
      }
    },
    "timestamp": "2024-08-21T16:39:42.409547690Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb",
      "k8s-pod/app": "llm-server",
      "k8s-pod/pod-template-hash": "69c884887"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "textPayload": "INFO:     35.191.212.245:37200 - \"GET /health HTTP/1.1\" 200 OK",
    "insertId": "hwndf7m86kh9eg71",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "llm",
        "pod_name": "llm-server-69c884887-58l4j",
        "project_id": "codium-production",
        "container_name": "main"
      }
    },
    "timestamp": "2024-08-21T16:39:42.410044827Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "69c884887",
      "k8s-pod/app": "llm-server",
      "compute.googleapis.com/resource_name": "gke-production-clust-a100-2x-80g-on-d-d151ba82-61vb"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:45.916366088Z"
  },
  {
    "insertId": "dszpgwig2lb74tbx",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "process": {
          "id": 21,
          "name": "MainProcess"
        },
        "line": 37,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "dispatch",
        "extra": {
          "source_host": "10.164.9.1",
          "status_code": 200,
          "on_prem_log": true,
          "method": "GET",
          "url": "http://10.164.9.5:5432/v1/health/live",
          "request_id": "N/A"
        },
        "elapsed": {
          "seconds": 118534.738656,
          "repr": "1 day, 8:55:34.738656"
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "time": {
          "timestamp": 1724258382.418651,
          "repr": "2024-08-21 16:39:42.418651+00:00"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "exception": null,
        "name": "app",
        "module": "app",
        "message": "Request handled"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.418965387Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "05c920ea-337b-4b65-907f-b56276e99840",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.431419Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "05c920ea-337b-4b65-907f-b56276e99840",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.405262021Z"
  },
  {
    "insertId": "xp14uyoiwt8964w5",
    "jsonPayload": {
      "record": {
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 132436180592320
        },
        "module": "core",
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "exception": null,
        "elapsed": {
          "repr": "1 day, 9:00:03.961962",
          "seconds": 118803.961962
        },
        "process": {
          "name": "MainProcess",
          "id": 22
        },
        "extra": {},
        "name": "copilot_proxy.auth.core",
        "function": "verify_user_token",
        "line": 156,
        "message": "User tej@pubx.ai will use enterprise openAI org. tier:20 codiumate:None optout:False",
        "time": {
          "repr": "2024-08-21 16:39:42.474917+00:00",
          "timestamp": 1724258382.474917
        }
      },
      "text": "User tej@pubx.ai will use enterprise openAI org. tier:20 codiumate:None optout:False\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.475200790Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-common-webhooks"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "gke-common-webhooks/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/gke-common-webhook-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "efcfefb4-fed8-424b-b838-7b88552253dd",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.490705Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gke-common-webhooks\" of ClusterRole \"system:gke-common-webhooks\" to User \"system:gke-common-webhooks\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "efcfefb4-fed8-424b-b838-7b88552253dd",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.820459812Z"
  },
  {
    "insertId": "2jqq1rg12i262n",
    "jsonPayload": {
      "remoteIp": "140.82.115.101",
      "backendTargetProjectNumber": "projects/67590289846",
      "@type": "type.googleapis.com/google.cloud.loadbalancing.type.LoadBalancerLogEntry",
      "statusDetails": "response_sent_by_backend",
      "cacheDecision": [
        "RESPONSE_HAS_CONTENT_TYPE",
        "CACHE_MODE_USE_ORIGIN_HEADERS"
      ]
    },
    "httpRequest": {
      "requestMethod": "POST",
      "requestUrl": "https://pro.github.pr-agent.codium.ai/api/v1/github_webhooks",
      "requestSize": "26227",
      "status": 200,
      "responseSize": "219",
      "userAgent": "GitHub-Hookshot/a08a06d",
      "remoteIp": "140.82.115.101",
      "serverIp": "10.164.15.11",
      "latency": "0.061970s"
    },
    "resource": {
      "type": "http_load_balancer",
      "labels": {
        "backend_service_name": "k8s1-50a1ee7b-pr-agent-pr-agent-pro-github-service-300-66c81716",
        "url_map_name": "k8s2-um-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "target_proxy_name": "k8s2-ts-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "forwarding_rule_name": "k8s2-fs-ptmrsozd-pr-agent-pr-agent-pro-github-ingress-ki7yqdfo",
        "zone": "global",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.493946Z",
    "severity": "INFO",
    "logName": "projects/codium-production/logs/requests",
    "trace": "projects/codium-production/traces/b8efbc679c18cd7ccc132c8802dba585",
    "receiveTimestamp": "2024-08-21T16:39:43.323599125Z",
    "spanId": "a9a40209619a9586"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "575b2389-460f-4d26-b961-89071be32e54",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.504075Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "575b2389-460f-4d26-b961-89071be32e54",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.973591120Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "762a9107-c05c-4f6d-9a78-41ce4049f1d0",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.513230Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "762a9107-c05c-4f6d-9a78-41ce4049f1d0",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.704759641Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:kube-dns-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/kube-dns-autoscaler"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "10.170.0.15",
        "callerSuppliedUserAgent": "cluster-proportional-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/kube-dns-autoscaler",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "47b4b731-ba7e-439f-b650-f0ae23440ee9",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.515502Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-dns-autoscaler\" of ClusterRole \"system:kube-dns-autoscaler\" to ServiceAccount \"kube-dns-autoscaler/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "47b4b731-ba7e-439f-b650-f0ae23440ee9",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.623798967Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:kube-dns-autoscaler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.apps.v1.deployments.scale.get",
          "resource": "apps/v1/namespaces/kube-system/deployments/kube-dns/scale"
        }
      ],
      "methodName": "io.k8s.apps.v1.deployments.scale.get",
      "requestMetadata": {
        "callerIp": "10.170.0.15",
        "callerSuppliedUserAgent": "cluster-proportional-autoscaler/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "apps/v1/namespaces/kube-system/deployments/kube-dns/scale",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "5095a515-632a-4954-a573-44160241069d",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.520608Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-dns-autoscaler\" of ClusterRole \"system:kube-dns-autoscaler\" to ServiceAccount \"kube-dns-autoscaler/kube-system\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "5095a515-632a-4954-a573-44160241069d",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.814037596Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:clustermetrics"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.core.v1.configmaps.get",
          "resource": "core/v1/namespaces/kube-system/configmaps/clustermetrics"
        }
      ],
      "methodName": "io.k8s.core.v1.configmaps.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "clustermetrics"
      },
      "resourceName": "core/v1/namespaces/kube-system/configmaps/clustermetrics",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "92c9282a-9842-4523-9927-76e0e33d9294",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.536682Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:clustermetrics\" of ClusterRole \"system:clustermetrics\" to User \"system:clustermetrics\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "92c9282a-9842-4523-9927-76e0e33d9294",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:47.009278428Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "55b03f80-e216-424c-9d5e-02d76d288b95",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.559601Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "55b03f80-e216-424c-9d5e-02d76d288b95",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.607016414Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:cert-manager:cert-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cert-manager-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "cert-manager-leader-election/v1.11.0 (linux/amd64) cert-manager/2a0ef53b06e183356d922cd58af2510d8885bef5"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cert-manager-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e48e9e33-0eb6-4eeb-9524-ea5760b888b4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.590414Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"cert-manager:leaderelection/kube-system\" of Role \"cert-manager:leaderelection\" to ServiceAccount \"cert-manager/cert-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e48e9e33-0eb6-4eeb-9524-ea5760b888b4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.109967094Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "993bb37f-51fd-4172-a4af-4ca263631863",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.593025Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "993bb37f-51fd-4172-a4af-4ca263631863",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.780394344Z"
  },
  {
    "insertId": "q5tl1i8zfg8kpx4t",
    "jsonPayload": {
      "record": {
        "extra": {
          "source_host": "92.255.139.0",
          "on_prem_log": true,
          "url": "https://api.codium.ai/v2/rag/embed-query",
          "status_code": 200,
          "method": "POST",
          "request_id": "816cc89b-b9a8-4c8c-8622-b1b11d90c54f"
        },
        "message": "Request handled",
        "time": {
          "repr": "2024-08-21 16:39:42.605763+00:00",
          "timestamp": 1724258382.605763
        },
        "module": "app",
        "thread": {
          "id": 134589170969472,
          "name": "MainThread"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "elapsed": {
          "repr": "1 day, 9:04:40.016263",
          "seconds": 119080.016263
        },
        "process": {
          "id": 16,
          "name": "MainProcess"
        },
        "exception": null,
        "line": 37,
        "level": {
          "no": 20,
          "icon": "ℹ️",
          "name": "INFO"
        },
        "function": "dispatch"
      },
      "text": "Request handled\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-x9fqx",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.606092534Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.790266518Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:55886 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "yqhgx59s4ruch05a",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "pod_name": "auth-proxy-69d7c8ff44-xjlc7",
        "container_name": "proxy",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production-jb"
      }
    },
    "timestamp": "2024-08-21T16:39:42.613639364Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-n9r4",
      "k8s-pod/pod-template-hash": "69d7c8ff44"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.758527051Z"
  },
  {
    "textPayload": "INFO:     10.164.8.17:56490 - \"GET /metrics HTTP/1.1\" 200 OK",
    "insertId": "sfmklkgour1jen70",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "namespace_name": "production-paychex",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-6dc4b6f7cb-sm9vg"
      }
    },
    "timestamp": "2024-08-21T16:39:42.627323843Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "6dc4b6f7cb",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-ejax",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.116821959Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "aa61a526-b28a-49c7-bab9-798ca69d9b08",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.659663Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "aa61a526-b28a-49c7-bab9-798ca69d9b08",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.821952958Z"
  },
  {
    "insertId": "gdom6ejc15qiiquc",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-gdg5q",
        "namespace_name": "kube-system"
      }
    },
    "timestamp": "2024-08-21T16:39:42.660756847Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-tepw",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:46.816404849Z"
  },
  {
    "insertId": "z8vt1ed3k02bftx9",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "kube-system",
        "location": "us-central1",
        "container_name": "gcp-filestore-driver",
        "pod_name": "filestore-node-gdg5q"
      }
    },
    "timestamp": "2024-08-21T16:39:42.660797630Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--3a546d32-tepw",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:46.816404849Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "508be6de-4511-44c4-9d9c-b06148482cee",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.662584Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "508be6de-4511-44c4-9d9c-b06148482cee",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.612687447Z"
  },
  {
    "insertId": "xz7yqkg950hb2nag",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "gcp-filestore-driver",
        "project_id": "codium-production",
        "pod_name": "filestore-node-fgh8x",
        "namespace_name": "kube-system",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.663824848Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-ejax",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.116457119Z"
  },
  {
    "insertId": "ai7r8jit9ekmmqst",
    "jsonPayload": {
      "pid": "1",
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "filestore-node-fgh8x",
        "namespace_name": "kube-system",
        "project_id": "codium-production",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.663871735Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-ejax",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.116457119Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:managed-certificate-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "managed-certificate-controller/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/managed-certificate-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3c079a03-4a5d-407d-b5ae-b0d9e552b03b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.668750Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:managed-certificate-controller\" of ClusterRole \"system:managed-certificate-controller\" to User \"system:managed-certificate-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3c079a03-4a5d-407d-b5ae-b0d9e552b03b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.513384270Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "89ee1b9f-cf04-4d17-9c0e-2e1260da75e7",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.681598Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "89ee1b9f-cf04-4d17-9c0e-2e1260da75e7",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.171480360Z"
  },
  {
    "insertId": "xesw001850bskht2",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "message": "Incoming request /v1/health/live",
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "time": {
          "repr": "2024-08-21 16:39:42.683787+00:00",
          "timestamp": 1724258382.683787
        },
        "exception": null,
        "elapsed": {
          "repr": "3 days, 6:29:21.643699",
          "seconds": 282561.643699
        },
        "extra": {
          "on_prem_log": true
        },
        "function": "live",
        "thread": {
          "id": 138663458962304,
          "name": "MainThread"
        },
        "module": "app",
        "line": 164,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "process": {
          "id": 17,
          "name": "MainProcess"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "production-recursion",
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "pod_name": "auth-proxy-6c5c88998f-wdc6r"
      }
    },
    "timestamp": "2024-08-21T16:39:42.684045676Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.816256677Z"
  },
  {
    "insertId": "13mwji5qkubm1qa2",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "time": {
          "repr": "2024-08-21 16:39:42.720091+00:00",
          "timestamp": 1724258382.720091
        },
        "function": "dispatch",
        "module": "app",
        "thread": {
          "id": 138663458962304,
          "name": "MainThread"
        },
        "message": "Request handled",
        "exception": null,
        "line": 37,
        "extra": {
          "method": "GET",
          "request_id": "N/A",
          "on_prem_log": true,
          "status_code": 200,
          "url": "http://10.164.13.6:5432/v1/health/live",
          "source_host": "10.164.13.1"
        },
        "level": {
          "name": "INFO",
          "no": 20,
          "icon": "ℹ️"
        },
        "process": {
          "name": "MainProcess",
          "id": 17
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "name": "app",
        "elapsed": {
          "repr": "3 days, 6:29:21.680003",
          "seconds": 282561.680003
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-6c5c88998f-wdc6r",
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production-recursion",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.720350358Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-recur-493b14b0-xqwa",
      "k8s-pod/pod-template-hash": "6c5c88998f"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:42.816256677Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "f83386ff-8ef4-4730-8e26-bb19648f5164",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.724976Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "f83386ff-8ef4-4730-8e26-bb19648f5164",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.399937031Z"
  },
  {
    "insertId": "8myl4fnctfydtf2b",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "thread": {
          "id": 132440365722496,
          "name": "MainThread"
        },
        "name": "app",
        "function": "dispatch",
        "module": "app",
        "time": {
          "repr": "2024-08-21 16:39:42.738028+00:00",
          "timestamp": 1724258382.738028
        },
        "elapsed": {
          "seconds": 118804.225073,
          "repr": "1 day, 9:00:04.225073"
        },
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "message": "Request handled",
        "process": {
          "id": 22,
          "name": "MainProcess"
        },
        "line": 37,
        "exception": null,
        "extra": {
          "method": "GET",
          "on_prem_log": true,
          "request_id": "a77f6f99-8b06-4e78-9f68-f5221adf81c9",
          "status_code": 200,
          "url": "https://api.codium.ai/v2/users/features",
          "source_host": "122.172.86.65"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6"
      }
    },
    "timestamp": "2024-08-21T16:39:42.738323362Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "7phyryxlp32b7qrt",
    "jsonPayload": {
      "text": "Incoming request /v1/health/live\n",
      "record": {
        "message": "Incoming request /v1/health/live",
        "function": "live",
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "name": "app",
        "level": {
          "icon": "ℹ️",
          "no": 20,
          "name": "INFO"
        },
        "line": 164,
        "time": {
          "repr": "2024-08-21 16:39:42.741352+00:00",
          "timestamp": 1724258382.741352
        },
        "elapsed": {
          "seconds": 118804.090805,
          "repr": "1 day, 9:00:04.090805"
        },
        "extra": {
          "on_prem_log": true
        },
        "module": "app",
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "exception": null,
        "file": {
          "path": "/copilot_proxy/app.py",
          "name": "app.py"
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.741599346Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "insertId": "8br38dz83bcjp5l5",
    "jsonPayload": {
      "text": "Request handled\n",
      "record": {
        "thread": {
          "name": "MainThread",
          "id": 132440365722496
        },
        "module": "app",
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "elapsed": {
          "repr": "1 day, 9:00:04.108506",
          "seconds": 118804.108506
        },
        "line": 37,
        "file": {
          "name": "app.py",
          "path": "/copilot_proxy/app.py"
        },
        "function": "dispatch",
        "message": "Request handled",
        "extra": {
          "request_id": "N/A",
          "method": "GET",
          "source_host": "35.191.207.187",
          "status_code": 200,
          "url": "http://10.164.10.5/v1/health/live",
          "on_prem_log": true
        },
        "exception": null,
        "process": {
          "name": "MainProcess",
          "id": 24
        },
        "time": {
          "repr": "2024-08-21 16:39:42.759053+00:00",
          "timestamp": 1724258382.759053
        },
        "name": "app"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "container_name": "proxy",
        "pod_name": "auth-proxy-5ffcf8dff7-lgbz6",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.759302569Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-kvai",
      "k8s-pod/pod-template-hash": "5ffcf8dff7"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:46.359710584Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gcp-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gcp-controller-manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/gcp-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e739e9b9-756d-472e-bbe3-2056ea8bace8",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.764110Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:gcp-controller-manager\" of ClusterRole \"system:gcp-controller-manager\" to User \"system:gcp-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e739e9b9-756d-472e-bbe3-2056ea8bace8",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.908228188Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e5ce9344-25ae-4feb-b53b-1c06ae38ec41",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.847334Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e5ce9344-25ae-4feb-b53b-1c06ae38ec41",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.206275204Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:l7-lb-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "glbc/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/ingress-gce-lock",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3b32fa50-8123-4164-97bd-1e8328aea68c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.849382Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:glbc-status\" of ClusterRole \"system:glbc-status\" to User \"system:l7-lb-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3b32fa50-8123-4164-97bd-1e8328aea68c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.026101623Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:maintenance-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "manager/v0.0.0 (linux/amd64) kubernetes/$Format/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/maintenance-controller",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "3378a4fc-85cd-4867-9e71-e14012e380c4",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.864311Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"maintenance-controller\" of ClusterRole \"system:maintenance-controller-cluster-role\" to User \"system:maintenance-controller\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "3378a4fc-85cd-4867-9e71-e14012e380c4",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.500380163Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c8fec733-0db0-4b80-ac18-1ee7ad48aad1",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.884033Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c8fec733-0db0-4b80-ac18-1ee7ad48aad1",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.009428408Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "7106919f-4948-440d-8cdf-e514a939434f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.887164Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "7106919f-4948-440d-8cdf-e514a939434f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.875404350Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:anonymous"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "127.0.0.1",
        "callerSuppliedUserAgent": "kube-probe/1.27"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "665a7e6e-0ff3-412c-b34b-a65b545c768b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.890826Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:public-info-viewer\" of ClusterRole \"system:public-info-viewer\" to Group \"system:unauthenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "665a7e6e-0ff3-412c-b34b-a65b545c768b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.919256197Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kube-controller-manager",
              "operation": "Update",
              "time": "2024-08-21T16:39:42Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "c3651c49-a9aa-426b-a097-bb8b76b333bb",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.892948Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "c3651c49-a9aa-426b-a097-bb8b76b333bb",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.681557740Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authentication.v1.tokenreviews.create",
          "resource": "authentication.k8s.io/v1/tokenreviews"
        }
      ],
      "methodName": "io.k8s.authentication.v1.tokenreviews.create",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authentication.k8s.io/v1/tokenreviews",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "930c97ba-d9b4-4c04-836e-a9f161b7c24b",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster-dr",
        "location": "us-east1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.896032Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "930c97ba-d9b4-4c04-836e-a9f161b7c24b",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.619661319Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "44f319d7-a330-425c-91e8-5ebd59e1b107",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.897700Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "44f319d7-a330-425c-91e8-5ebd59e1b107",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.625333953Z"
  },
  {
    "insertId": "vcojl2lg3bx00pcl",
    "jsonPayload": {
      "text": "User prosperify.ai@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False\n",
      "record": {
        "function": "verify_user_token",
        "exception": null,
        "time": {
          "repr": "2024-08-21 16:39:42.898506+00:00",
          "timestamp": 1724258382.898506
        },
        "extra": {},
        "elapsed": {
          "repr": "1 day, 8:55:35.796857",
          "seconds": 118535.796857
        },
        "thread": {
          "name": "AnyIO worker thread",
          "id": 137082722834112
        },
        "level": {
          "no": 20,
          "name": "INFO",
          "icon": "ℹ️"
        },
        "line": 156,
        "file": {
          "name": "core.py",
          "path": "/copilot_proxy/auth/core.py"
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        },
        "module": "core",
        "message": "User prosperify.ai@gmail.com will not use enterprise openAI org. tier:1 codiumate:None optout:False",
        "name": "copilot_proxy.auth.core"
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "container_name": "proxy",
        "location": "us-central1",
        "namespace_name": "production--argocd"
      }
    },
    "timestamp": "2024-08-21T16:39:42.898771086Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/app": "auth-proxy",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "insertId": "ecd83c8rq05n0mf9",
    "jsonPayload": {
      "text": "No context blob\n",
      "record": {
        "function": "prepare_prev_results",
        "process": {
          "name": "MainProcess",
          "id": 9
        },
        "extra": {
          "user": {
            "tier_end_date": 1718734511000,
            "auth_time": 1724252360,
            "iat": 1724258381,
            "sub": "MoZ9guCpQVRJq6nQuBT8IY0mxuW2",
            "organization_id": null,
            "baseUrl": null,
            "exp": 1724261981,
            "email_verified": false,
            "uid": "MoZ9guCpQVRJq6nQuBT8IY0mxuW2",
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "prosperify.ai@gmail.com"
                ],
                "github.com": [
                  "157031273"
                ]
              }
            },
            "user_id": "MoZ9guCpQVRJq6nQuBT8IY0mxuW2",
            "allowed": true,
            "tier_level": 1,
            "optout": false,
            "picture": "https://avatars.githubusercontent.com/u/157031273?v=4",
            "email": "prosperify.ai@gmail.com",
            "codiumate": null,
            "aud": "codium-dev-360812",
            "iss": "https://securetoken.google.com/codium-dev-360812"
          },
          "release": {
            "Message": "fix yaml",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Branch": "production"
          },
          "request_id": "44d8a503-88e3-4558-816a-99562957f74c:0ed55985-d1fb-46ed-971c-bdc914833010"
        },
        "message": "No context blob",
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "file": {
          "path": "/copilot_proxy/api/code_completions/v2.py",
          "name": "v2.py"
        },
        "level": {
          "icon": "ℹ️",
          "name": "INFO",
          "no": 20
        },
        "name": "copilot_proxy.api.code_completions.v2",
        "time": {
          "repr": "2024-08-21 16:39:42.899691+00:00",
          "timestamp": 1724258382.899691
        },
        "module": "v2",
        "line": 1457,
        "exception": null,
        "elapsed": {
          "repr": "1 day, 8:55:35.798042",
          "seconds": 118535.798042
        }
      }
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "namespace_name": "production--argocd",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy"
      }
    },
    "timestamp": "2024-08-21T16:39:42.899909061Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-scheduler"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-scheduler/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kube-scheduler",
              "operation": "Update",
              "time": "2024-08-21T16:39:42Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e2c1d7ce-eb68-47ed-bca4-0f3b8ca73eed",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-east1",
        "cluster_name": "production-cluster-dr"
      }
    },
    "timestamp": "2024-08-21T16:39:42.903783Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-scheduler\" of ClusterRole \"system:kube-scheduler\" to User \"system:kube-scheduler\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e2c1d7ce-eb68-47ed-bca4-0f3b8ca73eed",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.023019095Z"
  },
  {
    "insertId": "bo231afpgyq8kqck",
    "jsonPayload": {
      "record": {
        "file": {
          "path": "/copilot_proxy/api/code_completions/v2.py",
          "name": "v2.py"
        },
        "message": "Forcing generic language analyzer",
        "module": "v2",
        "function": "create_analyzer",
        "time": {
          "repr": "2024-08-21 16:39:42.917088+00:00",
          "timestamp": 1724258382.917088
        },
        "thread": {
          "id": 137086801542016,
          "name": "MainThread"
        },
        "exception": null,
        "name": "copilot_proxy.api.code_completions.v2",
        "elapsed": {
          "repr": "1 day, 8:55:35.815439",
          "seconds": 118535.815439
        },
        "extra": {
          "user": {
            "iat": 1724258381,
            "email": "prosperify.ai@gmail.com",
            "picture": "https://avatars.githubusercontent.com/u/157031273?v=4",
            "tier_level": 1,
            "user_id": "MoZ9guCpQVRJq6nQuBT8IY0mxuW2",
            "tier_end_date": 1718734511000,
            "firebase": {
              "sign_in_provider": "custom",
              "identities": {
                "email": [
                  "prosperify.ai@gmail.com"
                ],
                "github.com": [
                  "157031273"
                ]
              }
            },
            "uid": "MoZ9guCpQVRJq6nQuBT8IY0mxuW2",
            "sub": "MoZ9guCpQVRJq6nQuBT8IY0mxuW2",
            "aud": "codium-dev-360812",
            "organization_id": null,
            "email_verified": false,
            "codiumate": null,
            "baseUrl": null,
            "iss": "https://securetoken.google.com/codium-dev-360812",
            "optout": false,
            "auth_time": 1724252360,
            "allowed": true,
            "exp": 1724261981
          },
          "request_id": "44d8a503-88e3-4558-816a-99562957f74c:0ed55985-d1fb-46ed-971c-bdc914833010",
          "release": {
            "Branch": "production",
            "Commit SHA-1": "e4ba8db5c430b7ed4ad099f6351202bbb26e9387",
            "Message": "fix yaml"
          }
        },
        "line": 403,
        "level": {
          "name": "INFO",
          "icon": "ℹ️",
          "no": 20
        },
        "process": {
          "id": 9,
          "name": "MainProcess"
        }
      },
      "text": "Forcing generic language analyzer\n"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "project_id": "codium-production",
        "namespace_name": "production--argocd",
        "location": "us-central1",
        "pod_name": "auth-proxy-5ffcf8dff7-lsmlp",
        "container_name": "proxy",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.917398589Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-styj",
      "k8s-pod/pod-template-hash": "5ffcf8dff7",
      "k8s-pod/app": "auth-proxy"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:43.942061935Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:master-prom-to-sd-monitor"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "metrics/slis"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "::1",
        "callerSuppliedUserAgent": "Go-http-client/2.0"
      },
      "resourceName": "metrics/slis",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8dad5b4c-8f2b-44e0-8361-2103959036ef",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster-dr",
        "location": "us-east1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.918352Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8dad5b4c-8f2b-44e0-8361-2103959036ef",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.666681113Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:kube-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.authorization.v1.subjectaccessreviews.create",
          "resource": "authorization.k8s.io/v1/subjectaccessreviews"
        }
      ],
      "methodName": "io.k8s.authorization.v1.subjectaccessreviews.create",
      "request": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics/slis",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": false
        }
      },
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "kube-controller-manager/v1.29.7 (linux/amd64) kubernetes/c6376e6"
      },
      "resourceName": "authorization.k8s.io/v1/subjectaccessreviews",
      "response": {
        "@type": "authorization.k8s.io/v1.SubjectAccessReview",
        "apiVersion": "authorization.k8s.io/v1",
        "kind": "SubjectAccessReview",
        "metadata": {
          "creationTimestamp": null,
          "managedFields": [
            {
              "apiVersion": "authorization.k8s.io/v1",
              "fieldsType": "FieldsV1",
              "fieldsV1": {
                "f:spec": {
                  "f:groups": {},
                  "f:nonResourceAttributes": {
                    ".": {},
                    "f:path": {},
                    "f:verb": {}
                  },
                  "f:uid": {},
                  "f:user": {}
                }
              },
              "manager": "kube-controller-manager",
              "operation": "Update",
              "time": "2024-08-21T16:39:42Z"
            }
          ]
        },
        "spec": {
          "groups": [
            "system:gke-components-common",
            "system:authenticated"
          ],
          "nonResourceAttributes": {
            "path": "/metrics/slis",
            "verb": "get"
          },
          "uid": "uid:system:master-prom-to-sd-monitor",
          "user": "system:master-prom-to-sd-monitor"
        },
        "status": {
          "allowed": true,
          "reason": "RBAC: allowed by ClusterRoleBinding \"master-monitoring-role-binding\" of ClusterRole \"system:master-monitoring-role\" to User \"system:master-prom-to-sd-monitor\""
        }
      },
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "e9900e89-fff0-4452-a3d3-b72497e30402",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "location": "us-east1",
        "cluster_name": "production-cluster-dr",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.919909Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:kube-controller-manager\" of ClusterRole \"system:kube-controller-manager\" to User \"system:kube-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "e9900e89-fff0-4452-a3d3-b72497e30402",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.221891483Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:serviceaccount:kube-system:filestorecsi-node-sa"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "192.168.0.2",
        "callerSuppliedUserAgent": "gcp-filestore-csi-driver/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/gke-managed-filestorecsi/leases/filestore-csi-storage-gke-io-node",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "8def8b25-3025-42d8-a77b-f1ff50e7fc4c",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.921746Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"filestorecsi-node-leaderelection-binding-v2/gke-managed-filestorecsi\" of Role \"filestorecsi-node-leaderelection-role\" to ServiceAccount \"filestorecsi-node-sa/kube-system\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "8def8b25-3025-42d8-a77b-f1ff50e7fc4c",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:43.809758068Z"
  },
  {
    "insertId": "bz01xu7cc3s0t2i8",
    "jsonPayload": {
      "message": "lock is held by gke-production-clust-production-recur-493b14b0-xqwa_43a1ff71-f49d-4d14-b658-80a0a6130e58 and has not yet expired",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "container_name": "gcp-filestore-driver",
        "pod_name": "filestore-node-2n44x",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "project_id": "codium-production",
        "namespace_name": "kube-system"
      }
    },
    "timestamp": "2024-08-21T16:39:42.923698694Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "k8s-pod/pod-template-generation": "13",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "352"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.090735423Z"
  },
  {
    "insertId": "ig0569lcsc1ul35w",
    "jsonPayload": {
      "message": "failed to acquire lease gke-managed-filestorecsi/filestore-csi-storage-gke-io-node",
      "pid": "1"
    },
    "resource": {
      "type": "k8s_container",
      "labels": {
        "namespace_name": "kube-system",
        "container_name": "gcp-filestore-driver",
        "location": "us-central1",
        "cluster_name": "production-cluster",
        "pod_name": "filestore-node-2n44x",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.923757513Z",
    "severity": "INFO",
    "labels": {
      "k8s-pod/pod-template-generation": "13",
      "k8s-pod/controller-revision-hash": "57f648ff8b",
      "compute.googleapis.com/resource_name": "gke-production-clust-production-paych-59e85bb2-7el2",
      "k8s-pod/k8s-app": "gcp-filestore-csi-driver"
    },
    "logName": "projects/codium-production/logs/stderr",
    "sourceLocation": {
      "file": "leaderelection.go",
      "line": "253"
    },
    "receiveTimestamp": "2024-08-21T16:39:44.090735423Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "status": {
        "code": 5,
        "message": "The resource 'projects/codium-production/global/backendServices/k8s-ingress-svc-acct-permission-check-probe' was not found"
      },
      "authenticationInfo": {
        "principalEmail": "service-67590289846@container-engine-robot.iam.gserviceaccount.com",
        "principalSubject": "serviceAccount:service-67590289846@container-engine-robot.iam.gserviceaccount.com"
      },
      "requestMetadata": {
        "callerIp": "35.185.78.227",
        "callerSuppliedUserAgent": "google-api-go-client/0.5 Kubernetes/0.0.0 (linux amd64),gzip(gfe)",
        "requestAttributes": {
          "time": "2024-08-21T16:39:43.046849Z",
          "auth": {}
        },
        "destinationAttributes": {}
      },
      "serviceName": "compute.googleapis.com",
      "methodName": "v1.compute.backendServices.get",
      "authorizationInfo": [
        {
          "resource": "projects/codium-production/global/backendServices/k8s-ingress-svc-acct-permission-check-probe",
          "permission": "compute.backendServices.get",
          "granted": true,
          "resourceAttributes": {
            "service": "compute",
            "name": "projects/codium-production/global/backendServices/k8s-ingress-svc-acct-permission-check-probe",
            "type": "compute.backendServices"
          },
          "permissionType": "ADMIN_READ"
        }
      ],
      "resourceName": "projects/codium-production/global/backendServices/k8s-ingress-svc-acct-permission-check-probe",
      "request": {
        "@type": "type.googleapis.com/compute.backendServices.get"
      },
      "resourceLocation": {
        "currentLocations": [
          "global"
        ]
      }
    },
    "insertId": "-bcx7iwe27xl2",
    "resource": {
      "type": "gce_backend_service",
      "labels": {
        "location": "global",
        "project_id": "codium-production",
        "backend_service_id": "0"
      }
    },
    "timestamp": "2024-08-21T16:39:42.947235Z",
    "severity": "ERROR",
    "labels": {
      "compute.googleapis.com/root_trigger_id": "a6200e74-4a6c-4c18-8bfe-7690e672181f"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "receiveTimestamp": "2024-08-21T16:39:43.498601328Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:pdcsi-controller"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.5",
        "callerSuppliedUserAgent": "csi-resizer/v0.0.0 (linux/amd64) kubernetes/$Format"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/external-resizer-pd-csi-storage-gke-io",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "141d91cb-b931-4d39-aa08-84d35e31e79f",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.960169Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by RoleBinding \"pdcsi-leaderelection-binding/kube-system\" of Role \"pdcsi-leaderelection\" to User \"system:pdcsi-controller\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "141d91cb-b931-4d39-aa08-84d35e31e79f",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:44.111280852Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:gke-master-healthcheck"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.get",
          "resource": "readyz"
        }
      ],
      "methodName": "io.k8s.get",
      "requestMetadata": {
        "callerIp": "172.16.0.4",
        "callerSuppliedUserAgent": "gke-master-healthcheck"
      },
      "resourceName": "readyz",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "1d3c4712-7a99-48e5-9c97-6ed4649e0479",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "cluster_name": "production-cluster",
        "location": "us-central1",
        "project_id": "codium-production"
      }
    },
    "timestamp": "2024-08-21T16:39:42.961365Z",
    "labels": {
      "authorization.k8s.io/decision": "allow",
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:discovery\" of ClusterRole \"system:discovery\" to Group \"system:authenticated\""
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "1d3c4712-7a99-48e5-9c97-6ed4649e0479",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:46.810999813Z"
  },
  {
    "textPayload": "INFO:     35.191.206.118:54738 - \"GET / HTTP/1.1\" 200 OK",
    "insertId": "cwghpbdu2rgf12v1",
    "resource": {
      "type": "k8s_container",
      "labels": {
        "pod_name": "pr-agent-free-gitlab-7cf648d48b-5n4gd",
        "project_id": "codium-production",
        "cluster_name": "production-cluster",
        "namespace_name": "pr-agent",
        "container_name": "main",
        "location": "us-central1"
      }
    },
    "timestamp": "2024-08-21T16:39:42.970866712Z",
    "severity": "INFO",
    "labels": {
      "compute.googleapis.com/resource_name": "gke-production-clust-production-pool--95ab0a41-811h",
      "k8s-pod/app": "pr-agent-free-gitlab",
      "k8s-pod/pod-template-hash": "7cf648d48b"
    },
    "logName": "projects/codium-production/logs/stdout",
    "receiveTimestamp": "2024-08-21T16:39:44.718308413Z"
  },
  {
    "protoPayload": {
      "@type": "type.googleapis.com/google.cloud.audit.AuditLog",
      "authenticationInfo": {
        "principalEmail": "system:cloud-controller-manager"
      },
      "authorizationInfo": [
        {
          "granted": true,
          "permission": "io.k8s.coordination.v1.leases.get",
          "resource": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager"
        }
      ],
      "methodName": "io.k8s.coordination.v1.leases.get",
      "requestMetadata": {
        "callerIp": "172.16.0.3",
        "callerSuppliedUserAgent": "cloud-controller-manager/v1.27.1 (linux/amd64) kubernetes/a623e24/leader-election"
      },
      "resourceName": "coordination.k8s.io/v1/namespaces/kube-system/leases/cloud-controller-manager",
      "serviceName": "k8s.io",
      "status": {
        "code": 0
      }
    },
    "insertId": "69010907-7633-42db-9856-a7d07c93e569",
    "resource": {
      "type": "k8s_cluster",
      "labels": {
        "project_id": "codium-production",
        "location": "us-central1",
        "cluster_name": "production-cluster"
      }
    },
    "timestamp": "2024-08-21T16:39:42.978872Z",
    "labels": {
      "authorization.k8s.io/reason": "RBAC: allowed by ClusterRoleBinding \"system:cloud-controller-manager\" of ClusterRole \"system:cloud-controller-manager\" to User \"system:cloud-controller-manager\"",
      "authorization.k8s.io/decision": "allow"
    },
    "logName": "projects/codium-production/logs/cloudaudit.googleapis.com%2Fdata_access",
    "operation": {
      "id": "69010907-7633-42db-9856-a7d07c93e569",
      "producer": "k8s.io",
      "first": true,
      "last": true
    },
    "receiveTimestamp": "2024-08-21T16:39:45.714597108Z"
  }
]